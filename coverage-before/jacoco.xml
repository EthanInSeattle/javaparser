<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="javaparser-core-testing"><sessioninfo id="attu7.cs.washington.edu-6d50decf" start="1549778647192" dump="1549778674565"/><sessioninfo id="attu7.cs.washington.edu-434d05f4" start="1549778849148" dump="1549778875254"/><package name="com/github/javaparser/ast/validator"><class name="com/github/javaparser/ast/validator/Java7Validator" sourcefilename="Java7Validator.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/type/UnionType;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java1_2Validator" sourcefilename="Java1_2Validator.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java1_3Validator" sourcefilename="Java1_3Validator.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java10Validator" sourcefilename="Java10Validator.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/NoProblemsValidator" sourcefilename="NoProblemsValidator.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="15"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/validator/VisitorValidator" sourcefilename="VisitorValidator.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java8Validator" sourcefilename="Java8Validator.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/MethodDeclaration;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/ProblemReporter" sourcefilename="ProblemReporter.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Consumer;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithTokenRange;Ljava/lang/String;[Ljava/lang/Object;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;[Ljava/lang/Object;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java12Validator" sourcefilename="Java12Validator.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/TreeVisitorValidator" sourcefilename="TreeVisitorValidator.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/validator/Validator;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java5Validator" sourcefilename="Java5Validator.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/NodeList;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/type/Type;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java1_4Validator" sourcefilename="Java1_4Validator.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java1_0Validator" sourcefilename="Java1_0Validator.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="221"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$23" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$22" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$21" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$20" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="(Lcom/github/javaparser/ast/type/UnionType;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="(Lcom/github/javaparser/ast/type/UnionType;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lcom/github/javaparser/ast/expr/Expression;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="68"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;)Z" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="390"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="2" covered="69"/><counter type="COMPLEXITY" missed="3" covered="32"/><counter type="METHOD" missed="2" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/ReservedKeywordValidator" sourcefilename="ReservedKeywordValidator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="23"><counter type="INSTRUCTION" missed="7" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java1_1Validator" sourcefilename="Java1_1Validator.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/Node;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/SingleNodeTypeValidator" sourcefilename="SingleNodeTypeValidator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lcom/github/javaparser/ast/validator/TypedValidator;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/Node;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java6Validator" sourcefilename="Java6Validator.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/SimpleValidator" sourcefilename="SimpleValidator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Validators" sourcefilename="Validators.java"><method name="&lt;init&gt;" desc="([Lcom/github/javaparser/ast/validator/Validator;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValidators" desc="()Ljava/util/List;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/validator/Validator;)Lcom/github/javaparser/ast/validator/Validators;" line="24"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/validator/Validator;Lcom/github/javaparser/ast/validator/Validator;)Lcom/github/javaparser/ast/validator/Validators;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/validator/Validator;)Lcom/github/javaparser/ast/validator/Validators;" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/validator/Validator;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java11Validator" sourcefilename="Java11Validator.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/Java9Validator" sourcefilename="Java9Validator.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="14"><counter type="INSTRUCTION" missed="10" covered="9"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="56"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/TypedValidator" sourcefilename="TypedValidator.java"><method name="postProcessor" desc="()Lcom/github/javaparser/ParseResult$PostProcessor;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$postProcessor$2" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$postProcessor$1" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ast/Node;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$postProcessor$0" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/Problem;)V" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Validators.java"><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="1" cb="1"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java10Validator.java"><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleNodeTypeValidator.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="2"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="14" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java6Validator.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProblemReporter.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java5Validator.java"><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="2"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="4"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoProblemsValidator.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Java7Validator.java"><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="2"/><line nr="13" mi="0" ci="4" mb="0" cb="2"/><line nr="14" mi="0" ci="3" mb="0" cb="2"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="2"/><line nr="18" mi="0" ci="3" mb="0" cb="2"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="2"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java8Validator.java"><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="2"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="4"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleValidator.java"><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="2"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java1_2Validator.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TreeVisitorValidator.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReservedKeywordValidator.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="1"/><line nr="24" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="2"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypedValidator.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="6" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java1_1Validator.java"><line nr="10" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="4"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java9Validator.java"><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="2"/><line nr="15" mi="1" ci="3" mb="1" cb="1"/><line nr="16" mi="3" ci="0" mb="2" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="56"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VisitorValidator.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java12Validator.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java1_4Validator.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java1_0Validator.java"><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="2"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="2"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="1" cb="3"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="4"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="390"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="2" covered="69"/><counter type="COMPLEXITY" missed="3" covered="32"/><counter type="METHOD" missed="2" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java1_3Validator.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java11Validator.java"><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="44" covered="1079"/><counter type="BRANCH" missed="6" covered="64"/><counter type="LINE" missed="9" covered="231"/><counter type="COMPLEXITY" missed="11" covered="100"/><counter type="METHOD" missed="6" covered="70"/><counter type="CLASS" missed="1" covered="21"/></package><package name="com/github/javaparser/ast/expr"><class name="com/github/javaparser/ast/expr/NormalAnnotationExpr" sourcefilename="NormalAnnotationExpr.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPairs" desc="()Lcom/github/javaparser/ast/NodeList;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPairs" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="84"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPair" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="102"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPair" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="111"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="119"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/NormalAnnotationExprMetaModel;" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNormalAnnotationExpr" desc="()Z" line="159"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNormalAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNormalAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNormalAnnotationExpr" desc="()Ljava/util/Optional;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="56"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="28" covered="18"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/IntegerLiteralExpr" sourcefilename="IntegerLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInt" desc="()I" line="93"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInt" desc="(I)Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;" line="114"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/IntegerLiteralExprMetaModel;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntegerLiteralExpr" desc="()Z" line="134"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIntegerLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;" line="140"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIntegerLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="145"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntegerLiteralExpr" desc="()Ljava/util/Optional;" line="151"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="81"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="16" covered="19"/><counter type="COMPLEXITY" missed="11" covered="13"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/EnclosedExpr" sourcefilename="EnclosedExpr.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInner" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInner" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/EnclosedExpr;" line="91"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="106"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInner" desc="()Lcom/github/javaparser/ast/expr/EnclosedExpr;" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/EnclosedExpr;" line="119"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/EnclosedExprMetaModel;" line="125"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="131"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnclosedExpr" desc="()Z" line="143"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnclosedExpr" desc="()Lcom/github/javaparser/ast/expr/EnclosedExpr;" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEnclosedExpr" desc="(Ljava/util/function/Consumer;)V" line="154"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnclosedExpr" desc="()Ljava/util/Optional;" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/Name" sourcefilename="Name.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIdentifier" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/Name;" line="105"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/Name;" line="124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQualifier" desc="()Ljava/util/Optional;" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQualifier" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/expr/Name;" line="145"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="159"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeQualifier" desc="()Lcom/github/javaparser/ast/expr/Name;" line="172"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/Name;" line="178"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/NameMetaModel;" line="184"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="190"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTopLevel" desc="()Z" line="205"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInternal" desc="()Z" line="212"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isInternal$0" desc="(Lcom/github/javaparser/ast/Node;)Z" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="128"/><counter type="BRANCH" missed="14" covered="8"/><counter type="LINE" missed="20" covered="34"/><counter type="COMPLEXITY" missed="13" covered="18"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/SingleMemberAnnotationExpr" sourcefilename="SingleMemberAnnotationExpr.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/expr/Expression;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/expr/Expression;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMemberValue" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMemberValue" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;" line="84"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="99"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;" line="107"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SingleMemberAnnotationExprMetaModel;" line="113"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="119"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingleMemberAnnotationExpr" desc="()Z" line="131"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSingleMemberAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;" line="137"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifSingleMemberAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSingleMemberAnnotationExpr" desc="()Ljava/util/Optional;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="58"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="18" covered="19"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="7" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ArrayAccessExpr" sourcefilename="ArrayAccessExpr.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndex" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIndex" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ArrayAccessExpr;" line="93"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ArrayAccessExpr;" line="107"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="122"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ArrayAccessExpr;" line="130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ArrayAccessExprMetaModel;" line="136"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="142"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayAccessExpr" desc="()Z" line="158"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayAccessExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayAccessExpr;" line="164"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayAccessExpr" desc="(Ljava/util/function/Consumer;)V" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayAccessExpr" desc="()Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/CastExpr" sourcefilename="CastExpr.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/Expression;)V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/Expression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/CastExpr;" line="96"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/expr/CastExpr;" line="110"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="125"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/CastExpr;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CastExprMetaModel;" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="14" covered="17"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCastExpr" desc="()Z" line="161"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCastExpr" desc="()Lcom/github/javaparser/ast/expr/CastExpr;" line="167"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifCastExpr" desc="(Ljava/util/function/Consumer;)V" line="172"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCastExpr" desc="()Ljava/util/Optional;" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="108"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="17" covered="34"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/UnaryExpr$Operator" sourcefilename="UnaryExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPostfix" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrefix" desc="()Z" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/DoubleLiteralExpr" sourcefilename="DoubleLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="64"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asDouble" desc="()D" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDouble" desc="(D)Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;" line="106"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/DoubleLiteralExprMetaModel;" line="112"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="118"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoubleLiteralExpr" desc="()Z" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asDoubleLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;" line="132"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifDoubleLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDoubleLiteralExpr" desc="()Ljava/util/Optional;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ArrayCreationExpr" sourcefilename="ArrayCreationExpr.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)V" line="68"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Range;Lcom/github/javaparser/ast/type/Type;)V" line="80"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitializer" desc="()Ljava/util/Optional;" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementType" desc="()Lcom/github/javaparser/ast/type/Type;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInitializer" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="126"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElementType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="139"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevels" desc="()Lcom/github/javaparser/ast/NodeList;" line="153"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLevels" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="158"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createdType" desc="()Lcom/github/javaparser/ast/type/Type;" line="174"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElementType" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="188"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setElementType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="199"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInitializer" desc="()Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="224"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ArrayCreationExprMetaModel;" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="236"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayCreationExpr" desc="()Z" line="260"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayCreationExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="266"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifArrayCreationExpr" desc="(Ljava/util/function/Consumer;)V" line="271"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayCreationExpr" desc="()Ljava/util/Optional;" line="277"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="195" covered="142"/><counter type="BRANCH" missed="27" covered="9"/><counter type="LINE" missed="47" covered="40"/><counter type="COMPLEXITY" missed="29" covered="14"/><counter type="METHOD" missed="13" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ConditionalExpr" sourcefilename="ConditionalExpr.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCondition" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElseExpr" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenExpr" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCondition" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="102"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElseExpr" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="116"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThenExpr" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="130"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="153"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ConditionalExprMetaModel;" line="159"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="165"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConditionalExpr" desc="()Z" line="185"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConditionalExpr" desc="()Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifConditionalExpr" desc="(Ljava/util/function/Consumer;)V" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toConditionalExpr" desc="()Ljava/util/Optional;" line="202"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="113"/><counter type="BRANCH" missed="14" covered="8"/><counter type="LINE" missed="30" covered="35"/><counter type="COMPLEXITY" missed="19" covered="11"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/SwitchExpr" sourcefilename="SwitchExpr.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="68"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntries" desc="()Lcom/github/javaparser/ast/NodeList;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntry" desc="(I)Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelector" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntries" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/SwitchExpr;" line="110"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntry" desc="(ILcom/github/javaparser/ast/stmt/SwitchEntry;)Lcom/github/javaparser/ast/expr/SwitchExpr;" line="127"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEntry" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;)Lcom/github/javaparser/ast/expr/SwitchExpr;" line="136"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSelector" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/SwitchExpr;" line="142"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="157"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/SwitchExpr;" line="171"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="177"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSwitchExpr" desc="()Z" line="195"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSwitchExpr" desc="()Lcom/github/javaparser/ast/expr/SwitchExpr;" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSwitchExpr" desc="()Ljava/util/Optional;" line="207"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSwitchExpr" desc="(Ljava/util/function/Consumer;)V" line="212"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SwitchExprMetaModel;" line="218"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="143" covered="81"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="23" covered="8"/><counter type="METHOD" missed="12" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ObjectCreationExpr" sourcefilename="ObjectCreationExpr.java"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/NodeList;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnonymousClassBody" desc="()Ljava/util/Optional;" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnonymousClassBody" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="127"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArguments" desc="()Lcom/github/javaparser/ast/NodeList;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Ljava/util/Optional;" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnonymousClassBody" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="157"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="170"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScope" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="190"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="203"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="228"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="242"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeScope" desc="()Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="277"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="283"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ObjectCreationExprMetaModel;" line="289"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="295"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isObjectCreationExpr" desc="()Z" line="335"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asObjectCreationExpr" desc="()Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="341"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifObjectCreationExpr" desc="(Ljava/util/function/Consumer;)V" line="346"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration;" line="364"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveInvokedConstructor" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration;" line="372"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toObjectCreationExpr" desc="()Ljava/util/Optional;" line="378"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="290" covered="197"/><counter type="BRANCH" missed="55" covered="13"/><counter type="LINE" missed="67" covered="56"/><counter type="COMPLEXITY" missed="43" covered="19"/><counter type="METHOD" missed="12" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/TypeExpr" sourcefilename="TypeExpr.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;)V" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/expr/TypeExpr;" line="89"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/TypeExpr;" line="112"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/TypeExprMetaModel;" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="124"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeExpr" desc="()Z" line="136"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeExpr" desc="()Lcom/github/javaparser/ast/expr/TypeExpr;" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeExpr" desc="(Ljava/util/function/Consumer;)V" line="147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeExpr" desc="()Ljava/util/Optional;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ThisExpr" sourcefilename="ThisExpr.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassExpr" desc="()Ljava/util/Optional;" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassExpr" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/ThisExpr;" line="95"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="109"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeClassExpr" desc="()Lcom/github/javaparser/ast/expr/ThisExpr;" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ThisExpr;" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ThisExprMetaModel;" line="134"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="140"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThisExpr" desc="()Z" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asThisExpr" desc="()Lcom/github/javaparser/ast/expr/ThisExpr;" line="160"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifThisExpr" desc="(Ljava/util/function/Consumer;)V" line="165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeDeclaration;" line="170"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toThisExpr" desc="()Ljava/util/Optional;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="58"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="23" covered="20"/><counter type="COMPLEXITY" missed="15" covered="10"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/VariableDeclarationExpr" sourcefilename="VariableDeclarationExpr.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier;)V" line="81"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;[Lcom/github/javaparser/ast/Modifier;)V" line="85"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="98"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariables" desc="()Lcom/github/javaparser/ast/NodeList;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="148"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="162"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariables" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="176"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="191"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="217"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/VariableDeclarationExprMetaModel;" line="223"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="229"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVariableDeclarationExpr" desc="()Z" line="255"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asVariableDeclarationExpr" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="261"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifVariableDeclarationExpr" desc="(Ljava/util/function/Consumer;)V" line="266"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVariableDeclarationExpr" desc="()Ljava/util/Optional;" line="272"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="()Lcom/github/javaparser/ast/NodeList;" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="()Lcom/github/javaparser/ast/NodeList;" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="291" covered="145"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="52" covered="40"/><counter type="COMPLEXITY" missed="33" covered="14"/><counter type="METHOD" missed="13" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/LambdaExpr" sourcefilename="LambdaExpr.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/expr/Expression;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Expression;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/Statement;Z)V" line="103"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/Statement;Z)V" line="111"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/LambdaExpr;" line="125"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/expr/LambdaExpr;" line="147"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnclosingParameters" desc="()Z" line="173"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnclosingParameters" desc="(Z)Lcom/github/javaparser/ast/expr/LambdaExpr;" line="178"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="189"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExpressionBody" desc="()Ljava/util/Optional;" line="206"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/LambdaExpr;" line="216"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LambdaExprMetaModel;" line="222"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="228"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLambdaExpr" desc="()Z" line="246"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLambdaExpr" desc="()Lcom/github/javaparser/ast/expr/LambdaExpr;" line="252"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifLambdaExpr" desc="(Ljava/util/function/Consumer;)V" line="257"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLambdaExpr" desc="()Ljava/util/Optional;" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="179"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="27" covered="47"/><counter type="COMPLEXITY" missed="16" covered="21"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ClassExpr" sourcefilename="ClassExpr.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;)V" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/expr/ClassExpr;" line="88"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="103"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ClassExpr;" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ClassExprMetaModel;" line="117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="123"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassExpr" desc="()Z" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassExpr" desc="()Lcom/github/javaparser/ast/expr/ClassExpr;" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifClassExpr" desc="(Ljava/util/function/Consumer;)V" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassExpr" desc="()Ljava/util/Optional;" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="51"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/MethodReferenceExpr" sourcefilename="MethodReferenceExpr.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScope" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="105"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="130"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIdentifier" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="148"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="160"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="176"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/MethodReferenceExprMetaModel;" line="182"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="188"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethodReferenceExpr" desc="()Z" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodReferenceExpr" desc="()Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="214"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMethodReferenceExpr" desc="(Ljava/util/function/Consumer;)V" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodReferenceExpr" desc="()Ljava/util/Optional;" line="225"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="109"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="32" covered="33"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/LiteralStringValueExpr" sourcefilename="LiteralStringValueExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;" line="64"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="76"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LiteralStringValueExprMetaModel;" line="90"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="96"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLiteralStringValueExpr" desc="()Z" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLiteralStringValueExpr" desc="()Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;" line="110"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLiteralStringValueExpr" desc="(Ljava/util/function/Consumer;)V" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLiteralStringValueExpr" desc="()Ljava/util/Optional;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="31"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="16" covered="10"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/NameExpr" sourcefilename="NameExpr.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/NameExpr;" line="95"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="110"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/NameExpr;" line="118"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/NameExprMetaModel;" line="124"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="130"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNameExpr" desc="()Z" line="142"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asNameExpr" desc="()Lcom/github/javaparser/ast/expr/NameExpr;" line="148"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNameExpr" desc="(Ljava/util/function/Consumer;)V" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedValueDeclaration;" line="170"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNameExpr" desc="()Ljava/util/Optional;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="80"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="17" covered="24"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/MemberValuePair" sourcefilename="MemberValuePair.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;)V" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/MemberValuePair;" line="96"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/MemberValuePair;" line="110"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="125"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/MemberValuePair;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/MemberValuePairMetaModel;" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="24" covered="24"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/LiteralExpr" sourcefilename="LiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/LiteralExpr;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LiteralExprMetaModel;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLiteralExpr" desc="()Z" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/LiteralExpr;" line="91"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLiteralExpr" desc="()Ljava/util/Optional;" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/SimpleName" sourcefilename="SimpleName.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdentifier" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIdentifier" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/SimpleName;" line="86"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="110"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SimpleNameMetaModel;" line="116"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="122"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="56"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/SuperExpr" sourcefilename="SuperExpr.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassExpr" desc="()Ljava/util/Optional;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassExpr" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/SuperExpr;" line="99"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="113"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeClassExpr" desc="()Lcom/github/javaparser/ast/expr/SuperExpr;" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/SuperExpr;" line="132"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SuperExprMetaModel;" line="138"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="144"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuperExpr" desc="()Z" line="158"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSuperExpr" desc="()Lcom/github/javaparser/ast/expr/SuperExpr;" line="164"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifSuperExpr" desc="(Ljava/util/function/Consumer;)V" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSuperExpr" desc="()Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="46"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="26" covered="16"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/MethodCallExpr" sourcefilename="MethodCallExpr.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/expr/Expression;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Ljava/lang/String;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Ljava/lang/String;Lcom/github/javaparser/ast/NodeList;)V" line="83"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;Lcom/github/javaparser/ast/NodeList;)V" line="87"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="()Lcom/github/javaparser/ast/NodeList;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Ljava/util/Optional;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="141"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="155"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScope" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="169"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="182"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="193"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="207"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeScope" desc="()Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="240"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/MethodCallExprMetaModel;" line="246"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="252"><counter type="INSTRUCTION" missed="61" covered="24"/><counter type="BRANCH" missed="15" covered="3"/><counter type="LINE" missed="14" covered="5"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMethodCallExpr" desc="()Z" line="284"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodCallExpr" desc="()Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="290"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifMethodCallExpr" desc="(Ljava/util/function/Consumer;)V" line="295"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="313"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveInvokedMethod" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="321"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodCallExpr" desc="()Ljava/util/Optional;" line="327"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="222" covered="217"/><counter type="BRANCH" missed="34" covered="16"/><counter type="LINE" missed="51" covered="58"/><counter type="COMPLEXITY" missed="32" covered="23"/><counter type="METHOD" missed="12" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/BooleanLiteralExpr" sourcefilename="BooleanLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Z)V" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Z)V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Z" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Z)Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;" line="85"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BooleanLiteralExprMetaModel;" line="110"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="116"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBooleanLiteralExpr" desc="()Z" line="124"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBooleanLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBooleanLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBooleanLiteralExpr" desc="()Ljava/util/Optional;" line="141"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="39"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/StringLiteralExpr" sourcefilename="StringLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escape" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEscapedValue" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setString" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/StringLiteralExprMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStringLiteralExpr" desc="()Z" line="154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asStringLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="160"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifStringLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringLiteralExpr" desc="()Ljava/util/Optional;" line="171"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/AnnotationExpr" sourcefilename="AnnotationExpr.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="74"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/AnnotationExprMetaModel;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="109"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationExpr" desc="()Z" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedAnnotationDeclaration;" line="146"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationExpr" desc="()Ljava/util/Optional;" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="37"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="23" covered="12"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="11" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/ArrayInitializerExpr" sourcefilename="ArrayInitializerExpr.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="()Lcom/github/javaparser/ast/NodeList;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValues" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="88"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="103"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="117"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ArrayInitializerExprMetaModel;" line="123"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="129"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayInitializerExpr" desc="()Z" line="143"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayInitializerExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayInitializerExpr" desc="(Ljava/util/function/Consumer;)V" line="154"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayInitializerExpr" desc="()Ljava/util/Optional;" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="51"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="25" covered="17"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/Expression" sourcefilename="Expression.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ExpressionMetaModel;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationExpr" desc="()Z" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="91"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayAccessExpr" desc="()Z" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayAccessExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayAccessExpr;" line="101"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayCreationExpr" desc="()Z" line="106"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayCreationExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayInitializerExpr" desc="()Z" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayInitializerExpr" desc="()Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="121"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignExpr" desc="()Z" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAssignExpr" desc="()Lcom/github/javaparser/ast/expr/AssignExpr;" line="131"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBinaryExpr" desc="()Z" line="136"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBinaryExpr" desc="()Lcom/github/javaparser/ast/expr/BinaryExpr;" line="141"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBooleanLiteralExpr" desc="()Z" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBooleanLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;" line="151"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCastExpr" desc="()Z" line="156"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCastExpr" desc="()Lcom/github/javaparser/ast/expr/CastExpr;" line="161"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCharLiteralExpr" desc="()Z" line="166"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCharLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/CharLiteralExpr;" line="171"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassExpr" desc="()Z" line="176"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassExpr" desc="()Lcom/github/javaparser/ast/expr/ClassExpr;" line="181"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConditionalExpr" desc="()Z" line="186"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConditionalExpr" desc="()Lcom/github/javaparser/ast/expr/ConditionalExpr;" line="191"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoubleLiteralExpr" desc="()Z" line="196"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asDoubleLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;" line="201"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnclosedExpr" desc="()Z" line="206"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnclosedExpr" desc="()Lcom/github/javaparser/ast/expr/EnclosedExpr;" line="211"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFieldAccessExpr" desc="()Z" line="216"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFieldAccessExpr" desc="()Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="221"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstanceOfExpr" desc="()Z" line="226"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInstanceOfExpr" desc="()Lcom/github/javaparser/ast/expr/InstanceOfExpr;" line="231"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntegerLiteralExpr" desc="()Z" line="236"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIntegerLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;" line="241"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLambdaExpr" desc="()Z" line="246"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLambdaExpr" desc="()Lcom/github/javaparser/ast/expr/LambdaExpr;" line="251"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLiteralExpr" desc="()Z" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/LiteralExpr;" line="261"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLiteralStringValueExpr" desc="()Z" line="266"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLiteralStringValueExpr" desc="()Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;" line="271"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLongLiteralExpr" desc="()Z" line="276"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLongLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/LongLiteralExpr;" line="281"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMarkerAnnotationExpr" desc="()Z" line="286"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMarkerAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;" line="291"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethodCallExpr" desc="()Z" line="296"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodCallExpr" desc="()Lcom/github/javaparser/ast/expr/MethodCallExpr;" line="301"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethodReferenceExpr" desc="()Z" line="306"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodReferenceExpr" desc="()Lcom/github/javaparser/ast/expr/MethodReferenceExpr;" line="311"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNameExpr" desc="()Z" line="316"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNameExpr" desc="()Lcom/github/javaparser/ast/expr/NameExpr;" line="321"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNormalAnnotationExpr" desc="()Z" line="326"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNormalAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="331"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullLiteralExpr" desc="()Z" line="336"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNullLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/NullLiteralExpr;" line="341"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isObjectCreationExpr" desc="()Z" line="346"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asObjectCreationExpr" desc="()Lcom/github/javaparser/ast/expr/ObjectCreationExpr;" line="351"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingleMemberAnnotationExpr" desc="()Z" line="356"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSingleMemberAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;" line="361"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStringLiteralExpr" desc="()Z" line="366"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asStringLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/StringLiteralExpr;" line="371"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuperExpr" desc="()Z" line="376"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSuperExpr" desc="()Lcom/github/javaparser/ast/expr/SuperExpr;" line="381"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThisExpr" desc="()Z" line="386"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asThisExpr" desc="()Lcom/github/javaparser/ast/expr/ThisExpr;" line="391"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeExpr" desc="()Z" line="396"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeExpr" desc="()Lcom/github/javaparser/ast/expr/TypeExpr;" line="401"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnaryExpr" desc="()Z" line="406"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnaryExpr" desc="()Lcom/github/javaparser/ast/expr/UnaryExpr;" line="411"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVariableDeclarationExpr" desc="()Z" line="416"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asVariableDeclarationExpr" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="421"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="426"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayAccessExpr" desc="(Ljava/util/function/Consumer;)V" line="430"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayCreationExpr" desc="(Ljava/util/function/Consumer;)V" line="434"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayInitializerExpr" desc="(Ljava/util/function/Consumer;)V" line="438"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAssignExpr" desc="(Ljava/util/function/Consumer;)V" line="442"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBinaryExpr" desc="(Ljava/util/function/Consumer;)V" line="446"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBooleanLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="450"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifCastExpr" desc="(Ljava/util/function/Consumer;)V" line="454"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifCharLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="458"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifClassExpr" desc="(Ljava/util/function/Consumer;)V" line="462"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifConditionalExpr" desc="(Ljava/util/function/Consumer;)V" line="466"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifDoubleLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="470"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEnclosedExpr" desc="(Ljava/util/function/Consumer;)V" line="474"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFieldAccessExpr" desc="(Ljava/util/function/Consumer;)V" line="478"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifInstanceOfExpr" desc="(Ljava/util/function/Consumer;)V" line="482"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIntegerLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="486"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLambdaExpr" desc="(Ljava/util/function/Consumer;)V" line="490"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="494"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLiteralStringValueExpr" desc="(Ljava/util/function/Consumer;)V" line="498"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLongLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="502"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMarkerAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="506"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMethodCallExpr" desc="(Ljava/util/function/Consumer;)V" line="510"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMethodReferenceExpr" desc="(Ljava/util/function/Consumer;)V" line="514"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNameExpr" desc="(Ljava/util/function/Consumer;)V" line="518"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNormalAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="522"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="526"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifObjectCreationExpr" desc="(Ljava/util/function/Consumer;)V" line="530"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSingleMemberAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="534"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifStringLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="538"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSuperExpr" desc="(Ljava/util/function/Consumer;)V" line="542"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifThisExpr" desc="(Ljava/util/function/Consumer;)V" line="546"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeExpr" desc="(Ljava/util/function/Consumer;)V" line="550"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnaryExpr" desc="(Ljava/util/function/Consumer;)V" line="554"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifVariableDeclarationExpr" desc="(Ljava/util/function/Consumer;)V" line="558"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateResolvedType" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="564"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationExpr" desc="()Ljava/util/Optional;" line="569"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayAccessExpr" desc="()Ljava/util/Optional;" line="574"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayCreationExpr" desc="()Ljava/util/Optional;" line="579"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayInitializerExpr" desc="()Ljava/util/Optional;" line="584"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAssignExpr" desc="()Ljava/util/Optional;" line="589"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBinaryExpr" desc="()Ljava/util/Optional;" line="594"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBooleanLiteralExpr" desc="()Ljava/util/Optional;" line="599"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCastExpr" desc="()Ljava/util/Optional;" line="604"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharLiteralExpr" desc="()Ljava/util/Optional;" line="609"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassExpr" desc="()Ljava/util/Optional;" line="614"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toConditionalExpr" desc="()Ljava/util/Optional;" line="619"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDoubleLiteralExpr" desc="()Ljava/util/Optional;" line="624"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnclosedExpr" desc="()Ljava/util/Optional;" line="629"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFieldAccessExpr" desc="()Ljava/util/Optional;" line="634"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInstanceOfExpr" desc="()Ljava/util/Optional;" line="639"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntegerLiteralExpr" desc="()Ljava/util/Optional;" line="644"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLambdaExpr" desc="()Ljava/util/Optional;" line="649"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLiteralExpr" desc="()Ljava/util/Optional;" line="654"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLiteralStringValueExpr" desc="()Ljava/util/Optional;" line="659"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLongLiteralExpr" desc="()Ljava/util/Optional;" line="664"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMarkerAnnotationExpr" desc="()Ljava/util/Optional;" line="669"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodCallExpr" desc="()Ljava/util/Optional;" line="674"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodReferenceExpr" desc="()Ljava/util/Optional;" line="679"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNameExpr" desc="()Ljava/util/Optional;" line="684"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNormalAnnotationExpr" desc="()Ljava/util/Optional;" line="689"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNullLiteralExpr" desc="()Ljava/util/Optional;" line="694"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toObjectCreationExpr" desc="()Ljava/util/Optional;" line="699"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSingleMemberAnnotationExpr" desc="()Ljava/util/Optional;" line="704"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toStringLiteralExpr" desc="()Ljava/util/Optional;" line="709"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSuperExpr" desc="()Ljava/util/Optional;" line="714"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toThisExpr" desc="()Ljava/util/Optional;" line="719"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeExpr" desc="()Ljava/util/Optional;" line="724"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnaryExpr" desc="()Ljava/util/Optional;" line="729"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVariableDeclarationExpr" desc="()Ljava/util/Optional;" line="734"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSwitchExpr" desc="()Z" line="739"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSwitchExpr" desc="()Lcom/github/javaparser/ast/expr/SwitchExpr;" line="744"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSwitchExpr" desc="()Ljava/util/Optional;" line="749"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSwitchExpr" desc="(Ljava/util/function/Consumer;)V" line="754"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="629" covered="8"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="150" covered="4"/><counter type="COMPLEXITY" missed="147" covered="2"/><counter type="METHOD" missed="145" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/BinaryExpr$Operator" sourcefilename="BinaryExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toAssignOperator" desc="()Ljava/util/Optional;" line="81"><counter type="INSTRUCTION" missed="32" covered="8"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="232"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="26"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/LongLiteralExpr" sourcefilename="LongLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLong" desc="()J" line="93"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLong" desc="(J)Lcom/github/javaparser/ast/expr/LongLiteralExpr;" line="111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/LongLiteralExpr;" line="118"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LongLiteralExprMetaModel;" line="124"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="130"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLongLiteralExpr" desc="()Z" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLongLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/LongLiteralExpr;" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLongLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="149"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLongLiteralExpr" desc="()Ljava/util/Optional;" line="155"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="97"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="17" covered="21"/><counter type="COMPLEXITY" missed="13" covered="13"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/BinaryExpr" sourcefilename="BinaryExpr.java"><method name="&lt;init&gt;" desc="()V" line="117"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/BinaryExpr$Operator;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/BinaryExpr$Operator;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Lcom/github/javaparser/ast/expr/BinaryExpr$Operator;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLeft" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/BinaryExpr;" line="166"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOperator" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr$Operator;)Lcom/github/javaparser/ast/expr/BinaryExpr;" line="180"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRight" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/BinaryExpr;" line="191"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="206"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/BinaryExpr;" line="214"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BinaryExprMetaModel;" line="220"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="226"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBinaryExpr" desc="()Z" line="242"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBinaryExpr" desc="()Lcom/github/javaparser/ast/expr/BinaryExpr;" line="248"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifBinaryExpr" desc="(Ljava/util/function/Consumer;)V" line="253"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBinaryExpr" desc="()Ljava/util/Optional;" line="259"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="119"/><counter type="BRANCH" missed="12" covered="6"/><counter type="LINE" missed="23" covered="36"/><counter type="COMPLEXITY" missed="15" covered="13"/><counter type="METHOD" missed="7" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/UnaryExpr" sourcefilename="UnaryExpr.java"><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/UnaryExpr$Operator;)V" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/UnaryExpr$Operator;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Lcom/github/javaparser/ast/expr/UnaryExpr$Operator;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/UnaryExpr;" line="133"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOperator" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr$Operator;)Lcom/github/javaparser/ast/expr/UnaryExpr;" line="147"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="159"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPostfix" desc="()Z" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrefix" desc="()Z" line="171"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/UnaryExpr;" line="177"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/UnaryExprMetaModel;" line="183"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="189"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnaryExpr" desc="()Z" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnaryExpr" desc="()Lcom/github/javaparser/ast/expr/UnaryExpr;" line="207"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifUnaryExpr" desc="(Ljava/util/function/Consumer;)V" line="212"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnaryExpr" desc="()Ljava/util/Optional;" line="218"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="87"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="21" covered="26"/><counter type="COMPLEXITY" missed="14" covered="12"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/MarkerAnnotationExpr" sourcefilename="MarkerAnnotationExpr.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/MarkerAnnotationExprMetaModel;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMarkerAnnotationExpr" desc="()Z" line="109"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMarkerAnnotationExpr" desc="()Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMarkerAnnotationExpr" desc="(Ljava/util/function/Consumer;)V" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMarkerAnnotationExpr" desc="()Ljava/util/Optional;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="30"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="11"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/AssignExpr$Operator" sourcefilename="AssignExpr.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinaryOperator" desc="()Ljava/util/Optional;" line="76"><counter type="INSTRUCTION" missed="32" covered="8"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="155"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="19"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/NullLiteralExpr" sourcefilename="NullLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/NullLiteralExpr;" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/NullLiteralExprMetaModel;" line="86"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullLiteralExpr" desc="()Z" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNullLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/NullLiteralExpr;" line="106"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifNullLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNullLiteralExpr" desc="()Ljava/util/Optional;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="22"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="9"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/FieldAccessExpr" sourcefilename="FieldAccessExpr.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="72"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="106"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getField" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScope" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setField" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="136"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldExpr" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="145"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setScope" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="156"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="170"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="181"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="195"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/FieldAccessExprMetaModel;" line="201"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="207"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="223"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFieldAccessExpr" desc="()Z" line="247"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asFieldAccessExpr" desc="()Lcom/github/javaparser/ast/expr/FieldAccessExpr;" line="253"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFieldAccessExpr" desc="(Ljava/util/function/Consumer;)V" line="258"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedValueDeclaration;" line="276"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFieldAccessExpr" desc="()Ljava/util/Optional;" line="282"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInternal" desc="()Z" line="289"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTopLevel" desc="()Z" line="296"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="188" covered="123"/><counter type="BRANCH" missed="31" covered="7"/><counter type="LINE" missed="43" covered="37"/><counter type="COMPLEXITY" missed="32" covered="13"/><counter type="METHOD" missed="14" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/InstanceOfExpr" sourcefilename="InstanceOfExpr.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/ReferenceType;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/InstanceOfExpr;" line="97"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/expr/InstanceOfExpr;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/InstanceOfExpr;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/InstanceOfExprMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstanceOfExpr" desc="()Z" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInstanceOfExpr" desc="()Lcom/github/javaparser/ast/expr/InstanceOfExpr;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifInstanceOfExpr" desc="(Ljava/util/function/Consumer;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInstanceOfExpr" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/AssignExpr" sourcefilename="AssignExpr.java"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/AssignExpr$Operator;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/AssignExpr$Operator;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Lcom/github/javaparser/ast/expr/AssignExpr$Operator;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOperator" desc="(Lcom/github/javaparser/ast/expr/AssignExpr$Operator;)Lcom/github/javaparser/ast/expr/AssignExpr;" line="161"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTarget" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/AssignExpr;" line="172"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/AssignExpr;" line="186"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="201"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/AssignExpr;" line="209"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/AssignExprMetaModel;" line="215"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="221"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignExpr" desc="()Z" line="237"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAssignExpr" desc="()Lcom/github/javaparser/ast/expr/AssignExpr;" line="243"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifAssignExpr" desc="(Ljava/util/function/Consumer;)V" line="248"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAssignExpr" desc="()Ljava/util/Optional;" line="254"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="123"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="21" covered="38"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="7" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/expr/CharLiteralExpr" sourcefilename="CharLiteralExpr.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(C)V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escape" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/CharLiteralExpr;" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asChar" desc="()C" line="107"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setChar" desc="(C)Lcom/github/javaparser/ast/expr/CharLiteralExpr;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/expr/CharLiteralExpr;" line="124"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CharLiteralExprMetaModel;" line="130"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="136"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCharLiteralExpr" desc="()Z" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCharLiteralExpr" desc="()Lcom/github/javaparser/ast/expr/CharLiteralExpr;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifCharLiteralExpr" desc="(Ljava/util/function/Consumer;)V" line="155"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCharLiteralExpr" desc="()Ljava/util/Optional;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="11"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NormalAnnotationExpr.java"><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="2" cb="0"/><line nr="122" mi="6" ci="0" mb="2" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="9" ci="0" mb="2" cb="0"/><line nr="148" mi="6" ci="0" mb="2" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="120" covered="56"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="28" covered="18"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullLiteralExpr.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="22"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="9"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableDeclarationExpr.java"><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="20" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="27" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="23" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="1" cb="1"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="1" cb="1"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="1" cb="1"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="9" ci="0" mb="2" cb="0"/><line nr="194" mi="6" ci="0" mb="2" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="9" ci="0" mb="2" cb="0"/><line nr="200" mi="6" ci="0" mb="2" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="9" ci="0" mb="2" cb="0"/><line nr="206" mi="6" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="8" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="2" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="9" ci="0" mb="2" cb="0"/><line nr="232" mi="6" ci="0" mb="2" cb="0"/><line nr="233" mi="7" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="9" ci="0" mb="2" cb="0"/><line nr="238" mi="6" ci="0" mb="2" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="9" ci="0" mb="2" cb="0"/><line nr="244" mi="6" ci="0" mb="2" cb="0"/><line nr="245" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="291" covered="145"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="52" covered="40"/><counter type="COMPLEXITY" missed="33" covered="14"/><counter type="METHOD" missed="13" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayInitializerExpr.java"><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="9" ci="0" mb="2" cb="0"/><line nr="106" mi="6" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="2" cb="0"/><line nr="132" mi="6" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="51"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="25" covered="17"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeExpr.java"><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleName.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="1" cb="1"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="56"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanLiteralExpr.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="39"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuperExpr.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="46"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="26" covered="16"/><counter type="COMPLEXITY" missed="17" covered="7"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryExpr.java"><line nr="48" mi="0" ci="80" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="11" cb="1"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="1" cb="1"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="1" cb="1"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="2" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="8" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="2" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="2" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="2" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="351"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="34" covered="62"/><counter type="COMPLEXITY" missed="26" covered="17"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SwitchExpr.java"><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="9" ci="0" mb="2" cb="0"/><line nr="160" mi="6" ci="0" mb="2" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="8" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="9" ci="0" mb="2" cb="0"/><line nr="180" mi="6" ci="0" mb="2" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="81"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="23" covered="8"/><counter type="METHOD" missed="12" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnaryExpr.java"><line nr="52" mi="0" ci="36" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="2" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="211"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="21" covered="42"/><counter type="COMPLEXITY" missed="14" covered="18"/><counter type="METHOD" missed="9" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MethodCallExpr.java"><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="13" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="9" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="1" cb="1"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="1" cb="1"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="9" ci="0" mb="2" cb="0"/><line nr="210" mi="6" ci="0" mb="2" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="2" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="2" cb="0"/><line nr="222" mi="9" ci="0" mb="2" cb="0"/><line nr="223" mi="6" ci="0" mb="2" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="1" cb="1"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="7" mb="1" cb="1"/><line nr="255" mi="0" ci="6" mb="1" cb="1"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="2" cb="0"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="4" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="2" cb="0"/><line nr="271" mi="9" ci="0" mb="2" cb="0"/><line nr="272" mi="6" ci="0" mb="2" cb="0"/><line nr="273" mi="7" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="222" covered="217"/><counter type="BRANCH" missed="34" covered="16"/><counter type="LINE" missed="51" covered="58"/><counter type="COMPLEXITY" missed="32" covered="23"/><counter type="METHOD" missed="12" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Expression.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="12" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="12" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="12" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="12" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="12" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="12" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="12" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="12" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="12" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="12" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="12" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="12" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="12" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="12" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="12" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="301" mi="12" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="12" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="12" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="331" mi="12" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="12" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="12" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="12" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="12" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="12" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="12" ci="0" mb="0" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="12" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="411" mi="12" ci="0" mb="0" cb="0"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="12" ci="0" mb="0" cb="0"/><line nr="426" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="438" mi="1" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="450" mi="1" ci="0" mb="0" cb="0"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="1" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="1" ci="0" mb="0" cb="0"/><line nr="490" mi="1" ci="0" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="498" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="1" ci="0" mb="0" cb="0"/><line nr="506" mi="1" ci="0" mb="0" cb="0"/><line nr="510" mi="1" ci="0" mb="0" cb="0"/><line nr="514" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="1" ci="0" mb="0" cb="0"/><line nr="522" mi="1" ci="0" mb="0" cb="0"/><line nr="526" mi="1" ci="0" mb="0" cb="0"/><line nr="530" mi="1" ci="0" mb="0" cb="0"/><line nr="534" mi="1" ci="0" mb="0" cb="0"/><line nr="538" mi="1" ci="0" mb="0" cb="0"/><line nr="542" mi="1" ci="0" mb="0" cb="0"/><line nr="546" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="1" ci="0" mb="0" cb="0"/><line nr="554" mi="1" ci="0" mb="0" cb="0"/><line nr="558" mi="1" ci="0" mb="0" cb="0"/><line nr="564" mi="5" ci="0" mb="0" cb="0"/><line nr="569" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="579" mi="2" ci="0" mb="0" cb="0"/><line nr="584" mi="2" ci="0" mb="0" cb="0"/><line nr="589" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="609" mi="2" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="0" cb="0"/><line nr="619" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="2" ci="0" mb="0" cb="0"/><line nr="634" mi="2" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="2" ci="0" mb="0" cb="0"/><line nr="654" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="0" mb="0" cb="0"/><line nr="679" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="0" cb="0"/><line nr="694" mi="2" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><line nr="704" mi="2" ci="0" mb="0" cb="0"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="714" mi="2" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="729" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="0" cb="0"/><line nr="744" mi="12" ci="0" mb="0" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="629" covered="8"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="150" covered="4"/><counter type="COMPLEXITY" missed="147" covered="2"/><counter type="METHOD" missed="145" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectCreationExpr.java"><line nr="76" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="1" cb="1"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="1" cb="1"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="1" cb="1"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="1" cb="1"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="2" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="245" mi="9" ci="0" mb="2" cb="0"/><line nr="246" mi="6" ci="0" mb="2" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="9" ci="0" mb="2" cb="0"/><line nr="253" mi="6" ci="0" mb="2" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="2" cb="0"/><line nr="259" mi="4" ci="0" mb="2" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="2" cb="0"/><line nr="265" mi="9" ci="0" mb="2" cb="0"/><line nr="266" mi="6" ci="0" mb="2" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="8" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="2" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="2" cb="0"/><line nr="298" mi="9" ci="0" mb="2" cb="0"/><line nr="299" mi="6" ci="0" mb="2" cb="0"/><line nr="300" mi="7" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="9" ci="0" mb="2" cb="0"/><line nr="306" mi="6" ci="0" mb="2" cb="0"/><line nr="307" mi="7" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="2" cb="0"/><line nr="312" mi="4" ci="0" mb="2" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="4" ci="0" mb="2" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="2" cb="0"/><line nr="322" mi="9" ci="0" mb="2" cb="0"/><line nr="323" mi="6" ci="0" mb="2" cb="0"/><line nr="324" mi="7" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="7" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="197"/><counter type="BRANCH" missed="55" covered="13"/><counter type="LINE" missed="67" covered="56"/><counter type="COMPLEXITY" missed="43" covered="19"/><counter type="METHOD" missed="12" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayAccessExpr.java"><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="1" cb="1"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongLiteralExpr.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="1" cb="3"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="4"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="4"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="4"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="97"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="17" covered="21"/><counter type="COMPLEXITY" missed="13" covered="13"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayCreationExpr.java"><line nr="63" mi="12" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="1" cb="1"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="9" mb="0" cb="2"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="6" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="2" cb="0"/><line nr="202" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="9" ci="0" mb="2" cb="0"/><line nr="208" mi="6" ci="0" mb="2" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="2" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="2" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="2" cb="0"/><line nr="243" mi="4" ci="0" mb="2" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="9" ci="0" mb="2" cb="0"/><line nr="249" mi="6" ci="0" mb="2" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="195" covered="142"/><counter type="BRANCH" missed="27" covered="9"/><counter type="LINE" missed="47" covered="40"/><counter type="COMPLEXITY" missed="29" covered="14"/><counter type="METHOD" missed="13" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InstanceOfExpr.java"><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThisExpr.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="4" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="58"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="23" covered="20"/><counter type="COMPLEXITY" missed="15" covered="10"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemberValuePair.java"><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="1" cb="1"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="24" covered="24"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionalExpr.java"><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="1" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="1" cb="1"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="2" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="2" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="113"/><counter type="BRANCH" missed="14" covered="8"/><counter type="LINE" missed="30" covered="35"/><counter type="COMPLEXITY" missed="19" covered="11"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassExpr.java"><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="51"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="14" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleMemberAnnotationExpr.java"><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="58"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="18" covered="19"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="7" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralStringValueExpr.java"><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="1" cb="1"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="31"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="16" covered="10"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerLiteralExpr.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="4"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="4"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="4"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="81"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="16" covered="19"/><counter type="COMPLEXITY" missed="11" covered="13"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnclosedExpr.java"><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="2" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="16" covered="5"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Name.java"><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="14" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="2" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="2" cb="0"/><line nr="193" mi="4" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="128"/><counter type="BRANCH" missed="14" covered="8"/><counter type="LINE" missed="20" covered="34"/><counter type="COMPLEXITY" missed="13" covered="18"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldAccessExpr.java"><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="1" cb="1"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="2" cb="0"/><line nr="210" mi="9" ci="0" mb="2" cb="0"/><line nr="211" mi="6" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="2" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="2" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="2" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="2" cb="0"/><line nr="234" mi="9" ci="0" mb="2" cb="0"/><line nr="235" mi="6" ci="0" mb="2" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="13" ci="0" mb="4" cb="0"/><line nr="296" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="188" covered="123"/><counter type="BRANCH" missed="31" covered="7"/><counter type="LINE" missed="43" covered="37"/><counter type="COMPLEXITY" missed="32" covered="13"/><counter type="METHOD" missed="14" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodReferenceExpr.java"><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="9" ci="0" mb="2" cb="0"/><line nr="164" mi="6" ci="0" mb="2" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="2" cb="0"/><line nr="195" mi="9" ci="0" mb="2" cb="0"/><line nr="196" mi="6" ci="0" mb="2" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="109"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="32" covered="33"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LambdaExpr.java"><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="14" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="17" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="9" ci="0" mb="2" cb="0"/><line nr="192" mi="6" ci="0" mb="2" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="2"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="2" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="2" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="9" ci="0" mb="2" cb="0"/><line nr="235" mi="6" ci="0" mb="2" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="179"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="27" covered="47"/><counter type="COMPLEXITY" missed="16" covered="21"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkerAnnotationExpr.java"><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="30"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="11"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharLiteralExpr.java"><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="11"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringLiteralExpr.java"><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="12" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssignExpr.java"><line nr="50" mi="0" ci="52" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="11" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="1" cb="1"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="2" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="2" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="2" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="2" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="278"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="32" covered="57"/><counter type="COMPLEXITY" missed="24" covered="19"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CastExpr.java"><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="1" cb="1"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="1" cb="1"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="108"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="17" covered="34"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameExpr.java"><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="80"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="17" covered="24"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralExpr.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationExpr.java"><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="1" cb="1"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="37"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="23" covered="12"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="11" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleLiteralExpr.java"><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4293" covered="3605"/><counter type="BRANCH" missed="510" covered="188"/><counter type="LINE" missed="1129" covered="989"/><counter type="COMPLEXITY" missed="807" covered="386"/><counter type="METHOD" missed="497" covered="337"/><counter type="CLASS" missed="0" covered="42"/></package><package name="com/github/javaparser/resolution/types/parametrization"><class name="com/github/javaparser/resolution/types/parametrization/ResolvedTypeParameterValueProvider" sourcefilename="ResolvedTypeParameterValueProvider.java"><method name="useThisTypeParametersOnTheGivenType" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="46"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap" sourcefilename="ResolvedTypeParametersMap.java"><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="empty" desc="()Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;)V" line="99"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="107"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueBySignature" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="116"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNames" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypes" desc="()Ljava/util/List;" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBuilder" desc="()Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap$Builder;" line="132"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="136"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceAll" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="140"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap$Builder" sourcefilename="ResolvedTypeParametersMap.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;)V" line="47"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap$Builder;" line="61"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ResolvedTypeParameterValueProvider.java"><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="4" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedTypeParametersMap.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="16" ci="0" mb="4" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="2" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="12" ci="0" mb="2" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="218" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="274" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="com/github/javaparser/printer"><class name="com/github/javaparser/printer/DotPrinter" sourcefilename="DotPrinter.java"><method name="&lt;init&gt;" desc="(Z)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="275"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNodeName" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escape" desc="(Ljava/lang/String;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/JsonPrinter" sourcefilename="JsonPrinter.java"><method name="&lt;init&gt;" desc="(Z)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;I)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="q" desc="(Ljava/lang/String;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="245"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/SourcePrinter" sourcefilename="SourcePrinter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/PrettyPrinterConfiguration;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="()Lcom/github/javaparser/printer/SourcePrinter;" line="63"><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indentWithAlignTo" desc="(I)Lcom/github/javaparser/printer/SourcePrinter;" line="85"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateIndentWithAlignTo" desc="(I)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="24" covered="92"/><counter type="BRANCH" missed="4" covered="13"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unindent" desc="()Lcom/github/javaparser/printer/SourcePrinter;" line="137"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/String;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Ljava/lang/String;)Lcom/github/javaparser/printer/SourcePrinter;" line="165"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Ljava/lang/String;)Lcom/github/javaparser/printer/SourcePrinter;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="()Lcom/github/javaparser/printer/SourcePrinter;" line="197"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCursor" desc="()Lcom/github/javaparser/Position;" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Ljava/lang/String;" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="229"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalizeEolInTextBlock" desc="(Ljava/lang/String;)Ljava/lang/String;" line="236"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reindentWithAlignToCursor" desc="()V" line="244"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reindentToPreviousLevel" desc="()V" line="254"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="duplicateIndent" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="327"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="9" covered="75"/><counter type="COMPLEXITY" missed="8" covered="23"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/PrettyPrinterConfiguration$IndentType" sourcefilename="PrettyPrinterConfiguration.java"><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/PrettyPrinter" sourcefilename="PrettyPrinter.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/PrettyPrinterConfiguration;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/ConcreteSyntaxModel" sourcefilename="ConcreteSyntaxModel.java"><method name="modifiers" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mix" desc="([Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="memberAnnotations" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotations" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeParameters" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="75"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeArguments" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="80"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genericPrettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="946"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genericPrettyPrint" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="950"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forClass" desc="(Ljava/lang/Class;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="956"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forClass$2" desc="(Ljava/lang/String;)V" line="957"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$1" desc="(Lcom/github/javaparser/metamodel/BaseNodeMetaModel;)Ljava/lang/String;" line="932"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Lcom/github/javaparser/metamodel/BaseNodeMetaModel;)Z" line="931"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="12" covered="4332"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="665"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="4455"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="681"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/PrettyPrintVisitor" sourcefilename="PrettyPrintVisitor.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/PrettyPrinterConfiguration;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printMembers" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printMemberAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;ZLjava/lang/Void;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printTypeArgs" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithTypeArguments;Ljava/lang/Void;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printTypeParameters" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printArguments" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printPrePostFixOptionalList" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printPrePostFixRequiredList" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printComment" desc="(Ljava/util/Optional;Ljava/lang/Void;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Void;)V" line="192"><counter type="INSTRUCTION" missed="6" covered="68"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Void;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Void;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Void;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Void;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Void;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Void;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Void;)V" line="350"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Void;)V" line="368"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Void;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Void;)V" line="392"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Void;)V" line="409"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Void;)V" line="419"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Void;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Void;)V" line="449"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Void;)V" line="465"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Void;)V" line="469"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;)V" line="496"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Void;)V" line="526"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Void;)V" line="545"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Void;)V" line="552"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Void;)V" line="559"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Void;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Void;)V" line="574"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Void;)V" line="588"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Void;)V" line="598"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Void;)V" line="608"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Void;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Void;)V" line="624"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Void;)V" line="634"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Void;)V" line="642"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Void;)V" line="650"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Void;)V" line="658"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Void;)V" line="666"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Void;)V" line="672"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Void;)V" line="678"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Void;)V" line="684"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Void;)V" line="692"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Void;)V" line="698"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Void;)V" line="704"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Void;)V" line="714"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Void;)V" line="724"><counter type="INSTRUCTION" missed="0" covered="223"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Void;)V" line="827"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Void;)V" line="855"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Void;)V" line="869"><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Void;)V" line="907"><counter type="INSTRUCTION" missed="0" covered="147"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Void;)V" line="959"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Void;)V" line="975"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Void;)V" line="984"><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Void;)V" line="1002"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Void;)V" line="1026"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Void;)V" line="1032"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Void;)V" line="1044"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Void;)V" line="1061"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Void;)V" line="1069"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Void;)V" line="1075"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Void;)V" line="1083"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Void;)V" line="1088"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printSwitchNode" desc="(Lcom/github/javaparser/ast/nodeTypes/SwitchNode;Ljava/lang/Void;)V" line="1092"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Void;)V" line="1108"><counter type="INSTRUCTION" missed="5" covered="80"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Void;)V" line="1136"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Void;)V" line="1147"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Void;)V" line="1158"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Void;)V" line="1211"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Void;)V" line="1230"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Void;)V" line="1239"><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Void;)V" line="1274"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Void;)V" line="1283"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Void;)V" line="1291"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Void;)V" line="1301"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Void;)V" line="1312"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Void;)V" line="1343"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Void;)V" line="1351"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Void;)V" line="1360"><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Void;)V" line="1394"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Void;)V" line="1403"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Void;)V" line="1420"><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Void;)V" line="1437"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Void;)V" line="1444"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Void;)V" line="1454"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Void;)V" line="1472"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Void;)V" line="1480"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Void;)V" line="1490"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Void;)V" line="1506"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Void;)V" line="1537"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Void;)V" line="1553"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)V" line="1561"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Void;)V" line="1579"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Void;)V" line="1596"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Void;)V" line="1609"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Void;)V" line="1617"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Void;)V" line="1625"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Void;)V" line="1633"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Void;)V" line="1640"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Void;)V" line="1648"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printOrphanCommentsBeforeThisChildNode" desc="(Lcom/github/javaparser/ast/Node;)V" line="1652"><counter type="INSTRUCTION" missed="28" covered="86"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printOrphanCommentsEnding" desc="(Lcom/github/javaparser/ast/Node;)V" line="1681"><counter type="INSTRUCTION" missed="1" covered="63"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$13" desc="(Lcom/github/javaparser/ast/ImportDeclaration;)I" line="1565"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$12" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)V" line="1285"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$11" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;)Z" line="1183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$10" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/expr/Expression;)V" line="1139"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$9" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/type/Type;)V" line="1011"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$8" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/body/MethodDeclaration;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="923"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$7" desc="(Ljava/lang/Void;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/github/javaparser/ast/expr/Expression;)V" line="792"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$6" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Ljava/lang/Boolean;" line="733"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$5" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;Lcom/github/javaparser/ast/nodeTypes/NodeWithVariables;)V" line="500"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$4" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;Lcom/github/javaparser/ast/type/Type;)V" line="502"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$3" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/type/Type;)V" line="476"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$2" desc="(Ljava/lang/String;)Z" line="325"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$1" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/modules/ModuleDeclaration;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$printComment$0" desc="(Ljava/lang/Void;Lcom/github/javaparser/ast/comments/Comment;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="4563"/><counter type="BRANCH" missed="35" covered="407"/><counter type="LINE" missed="17" covered="1055"/><counter type="COMPLEXITY" missed="37" covered="307"/><counter type="METHOD" missed="2" covered="121"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/YamlPrinter" sourcefilename="YamlPrinter.java"><method name="&lt;init&gt;" desc="(Z)V" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;ILjava/lang/StringBuilder;)V" line="55"><counter type="INSTRUCTION" missed="1" covered="225"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="(I)Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="escapeValue" desc="(Ljava/lang/String;)Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="316"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/PrettyPrinterConfiguration" sourcefilename="PrettyPrinterConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIndent" desc="(Ljava/lang/String;)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="94"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndent" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIndentSize" desc="(I)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="140"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentType" desc="()Lcom/github/javaparser/printer/PrettyPrinterConfiguration$IndentType;" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIndentType" desc="(Lcom/github/javaparser/printer/PrettyPrinterConfiguration$IndentType;)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="155"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTabWidth" desc="()I" line="163"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTabWidth" desc="(I)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="170"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOrderImports" desc="()Z" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNormalizeEolInComment" desc="()Z" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNormalizeEolInComment" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrintComments" desc="()Z" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoreComments" desc="()Z" line="199"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrintJavadoc" desc="()Z" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isColumnAlignParameters" desc="()Z" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isColumnAlignFirstMethodChain" desc="()Z" line="211"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrintComments" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrintJavadoc" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="227"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setColumnAlignParameters" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setColumnAlignFirstMethodChain" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="237"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitorFactory" desc="()Ljava/util/function/Function;" line="242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVisitorFactory" desc="(Ljava/util/function/Function;)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="250"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndOfLineCharacter" desc="()Ljava/lang/String;" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEndOfLineCharacter" desc="(Ljava/lang/String;)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="262"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOrderImports" desc="(Z)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="270"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxEnumConstantsToAlignHorizontally" desc="()I" line="275"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxEnumConstantsToAlignHorizontally" desc="(I)Lcom/github/javaparser/printer/PrettyPrinterConfiguration;" line="302"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="152"/><counter type="BRANCH" missed="5" covered="6"/><counter type="LINE" missed="19" covered="48"/><counter type="COMPLEXITY" missed="10" covered="24"/><counter type="METHOD" missed="7" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/XmlPrinter" sourcefilename="XmlPrinter.java"><method name="&lt;init&gt;" desc="(Z)V" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="output" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;ILjava/lang/StringBuilder;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="(Ljava/lang/String;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attribute" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="220"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="YamlPrinter.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="23" mb="0" cb="0"/><line nr="68" mi="0" ci="17" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="25" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="4"/><line nr="84" mi="0" ci="18" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="1" ci="14" mb="1" cb="1"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="16" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="7" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="316"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonPrinter.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="48" mi="0" ci="19" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="4"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="20" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="17" mb="0" cb="0"/><line nr="76" mi="0" ci="20" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="245"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConcreteSyntaxModel.java"><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="21" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="21" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="21" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="21" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="23" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="14" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="28" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="21" mb="0" cb="0"/><line nr="159" mi="0" ci="25" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="12" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="20" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="11" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="204" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="9" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="11" mb="0" cb="0"/><line nr="216" mi="0" ci="20" mb="0" cb="0"/><line nr="217" mi="0" ci="14" mb="0" cb="0"/><line nr="218" mi="0" ci="9" mb="0" cb="0"/><line nr="219" mi="0" ci="34" mb="0" cb="0"/><line nr="220" mi="0" ci="11" mb="0" cb="0"/><line nr="223" mi="0" ci="9" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="11" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="10" mb="0" cb="0"/><line nr="246" mi="0" ci="17" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="9" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="10" mb="0" cb="0"/><line nr="268" mi="0" ci="10" mb="0" cb="0"/><line nr="271" mi="0" ci="9" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="9" mb="0" cb="0"/><line nr="274" mi="0" ci="13" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="9" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="9" mb="0" cb="0"/><line nr="315" mi="0" ci="17" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="9" mb="0" cb="0"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="0" ci="9" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="9" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="9" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="9" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="9" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="10" mb="0" cb="0"/><line nr="366" mi="0" ci="14" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="9" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="21" mb="0" cb="0"/><line nr="381" mi="0" ci="14" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="9" mb="0" cb="0"/><line nr="389" mi="0" ci="11" mb="0" cb="0"/><line nr="390" mi="0" ci="12" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="9" mb="0" cb="0"/><line nr="394" mi="0" ci="14" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="9" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="9" mb="0" cb="0"/><line nr="409" mi="0" ci="11" mb="0" cb="0"/><line nr="410" mi="0" ci="13" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="9" mb="0" cb="0"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="0" ci="9" mb="0" cb="0"/><line nr="422" mi="0" ci="5" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="9" mb="0" cb="0"/><line nr="426" mi="0" ci="12" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="9" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="9" mb="0" cb="0"/><line nr="436" mi="0" ci="11" mb="0" cb="0"/><line nr="437" mi="0" ci="13" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="9" mb="0" cb="0"/><line nr="440" mi="0" ci="17" mb="0" cb="0"/><line nr="441" mi="0" ci="6" mb="0" cb="0"/><line nr="442" mi="0" ci="5" mb="0" cb="0"/><line nr="443" mi="0" ci="9" mb="0" cb="0"/><line nr="444" mi="0" ci="14" mb="0" cb="0"/><line nr="445" mi="0" ci="10" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="1" mb="0" cb="0"/><line nr="448" mi="0" ci="18" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="9" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="0"/><line nr="465" mi="0" ci="5" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="2" mb="0" cb="0"/><line nr="469" mi="0" ci="9" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="9" mb="0" cb="0"/><line nr="475" mi="0" ci="11" mb="0" cb="0"/><line nr="476" mi="0" ci="13" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="9" mb="0" cb="0"/><line nr="481" mi="0" ci="11" mb="0" cb="0"/><line nr="482" mi="0" ci="13" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="0" ci="9" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="12" mb="0" cb="0"/><line nr="492" mi="0" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="9" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="7" mb="0" cb="0"/><line nr="500" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="9" mb="0" cb="0"/><line nr="503" mi="0" ci="9" mb="0" cb="0"/><line nr="510" mi="0" ci="9" mb="0" cb="0"/><line nr="511" mi="0" ci="5" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="514" mi="0" ci="10" mb="0" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="9" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="529" mi="0" ci="17" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="534" mi="0" ci="9" mb="0" cb="0"/><line nr="535" mi="0" ci="5" mb="0" cb="0"/><line nr="536" mi="0" ci="10" mb="0" cb="0"/><line nr="537" mi="0" ci="12" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="9" mb="0" cb="0"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="546" mi="0" ci="5" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="5" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="9" mb="0" cb="0"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="555" mi="0" ci="10" mb="0" cb="0"/><line nr="556" mi="0" ci="12" mb="0" cb="0"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="9" mb="0" cb="0"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="4" mb="0" cb="0"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="4" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="0" cb="0"/><line nr="571" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="0" ci="9" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="9" mb="0" cb="0"/><line nr="580" mi="0" ci="5" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="0" ci="9" mb="0" cb="0"/><line nr="585" mi="0" ci="10" mb="0" cb="0"/><line nr="586" mi="0" ci="5" mb="0" cb="0"/><line nr="587" mi="0" ci="19" mb="0" cb="0"/><line nr="588" mi="0" ci="1" mb="0" cb="0"/><line nr="589" mi="0" ci="12" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="9" mb="0" cb="0"/><line nr="594" mi="0" ci="12" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="9" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="0" cb="0"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="4" mb="0" cb="0"/><line nr="603" mi="0" ci="2" mb="0" cb="0"/><line nr="606" mi="0" ci="9" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="0"/><line nr="615" mi="0" ci="5" mb="0" cb="0"/><line nr="616" mi="0" ci="4" mb="0" cb="0"/><line nr="617" mi="0" ci="5" mb="0" cb="0"/><line nr="618" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="0" ci="9" mb="0" cb="0"/><line nr="622" mi="0" ci="5" mb="0" cb="0"/><line nr="623" mi="0" ci="4" mb="0" cb="0"/><line nr="624" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="9" mb="0" cb="0"/><line nr="626" mi="0" ci="11" mb="0" cb="0"/><line nr="627" mi="0" ci="4" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="9" mb="0" cb="0"/><line nr="632" mi="0" ci="12" mb="0" cb="0"/><line nr="633" mi="0" ci="4" mb="0" cb="0"/><line nr="634" mi="0" ci="5" mb="0" cb="0"/><line nr="635" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="9" mb="0" cb="0"/><line nr="639" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="5" mb="0" cb="0"/><line nr="643" mi="0" ci="5" mb="0" cb="0"/><line nr="644" mi="0" ci="10" mb="0" cb="0"/><line nr="645" mi="0" ci="11" mb="0" cb="0"/><line nr="646" mi="0" ci="16" mb="0" cb="0"/><line nr="647" mi="0" ci="3" mb="0" cb="0"/><line nr="648" mi="0" ci="16" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="15" mb="0" cb="0"/><line nr="653" mi="0" ci="8" mb="0" cb="0"/><line nr="654" mi="0" ci="12" mb="0" cb="0"/><line nr="655" mi="0" ci="16" mb="0" cb="0"/><line nr="658" mi="0" ci="9" mb="0" cb="0"/><line nr="659" mi="0" ci="5" mb="0" cb="0"/><line nr="660" mi="0" ci="5" mb="0" cb="0"/><line nr="661" mi="0" ci="4" mb="0" cb="0"/><line nr="662" mi="0" ci="5" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="0" ci="9" mb="0" cb="0"/><line nr="667" mi="0" ci="5" mb="0" cb="0"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="24" mb="0" cb="0"/><line nr="672" mi="0" ci="12" mb="0" cb="0"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="675" mi="0" ci="9" mb="0" cb="0"/><line nr="676" mi="0" ci="11" mb="0" cb="0"/><line nr="677" mi="0" ci="4" mb="0" cb="0"/><line nr="678" mi="0" ci="22" mb="0" cb="0"/><line nr="679" mi="0" ci="8" mb="0" cb="0"/><line nr="680" mi="0" ci="4" mb="0" cb="0"/><line nr="681" mi="0" ci="5" mb="0" cb="0"/><line nr="682" mi="0" ci="7" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="9" mb="0" cb="0"/><line nr="687" mi="0" ci="5" mb="0" cb="0"/><line nr="688" mi="0" ci="5" mb="0" cb="0"/><line nr="689" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="5" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="0" cb="0"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="5" mb="0" cb="0"/><line nr="695" mi="0" ci="8" mb="0" cb="0"/><line nr="696" mi="0" ci="2" mb="0" cb="0"/><line nr="699" mi="0" ci="9" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="5" mb="0" cb="0"/><line nr="703" mi="0" ci="5" mb="0" cb="0"/><line nr="704" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="5" mb="0" cb="0"/><line nr="708" mi="0" ci="8" mb="0" cb="0"/><line nr="709" mi="0" ci="2" mb="0" cb="0"/><line nr="712" mi="0" ci="9" mb="0" cb="0"/><line nr="713" mi="0" ci="5" mb="0" cb="0"/><line nr="714" mi="0" ci="4" mb="0" cb="0"/><line nr="715" mi="0" ci="5" mb="0" cb="0"/><line nr="716" mi="0" ci="5" mb="0" cb="0"/><line nr="717" mi="0" ci="5" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="5" mb="0" cb="0"/><line nr="720" mi="0" ci="2" mb="0" cb="0"/><line nr="723" mi="0" ci="9" mb="0" cb="0"/><line nr="724" mi="0" ci="5" mb="0" cb="0"/><line nr="725" mi="0" ci="4" mb="0" cb="0"/><line nr="726" mi="0" ci="5" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="0" cb="0"/><line nr="728" mi="0" ci="2" mb="0" cb="0"/><line nr="731" mi="0" ci="9" mb="0" cb="0"/><line nr="732" mi="0" ci="5" mb="0" cb="0"/><line nr="733" mi="0" ci="4" mb="0" cb="0"/><line nr="734" mi="0" ci="11" mb="0" cb="0"/><line nr="735" mi="0" ci="6" mb="0" cb="0"/><line nr="736" mi="0" ci="9" mb="0" cb="0"/><line nr="737" mi="0" ci="14" mb="0" cb="0"/><line nr="738" mi="0" ci="4" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="0" ci="5" mb="0" cb="0"/><line nr="741" mi="0" ci="10" mb="0" cb="0"/><line nr="742" mi="0" ci="19" mb="0" cb="0"/><line nr="745" mi="0" ci="9" mb="0" cb="0"/><line nr="746" mi="0" ci="5" mb="0" cb="0"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="5" mb="0" cb="0"/><line nr="749" mi="0" ci="5" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="751" mi="0" ci="4" mb="0" cb="0"/><line nr="752" mi="0" ci="5" mb="0" cb="0"/><line nr="753" mi="0" ci="2" mb="0" cb="0"/><line nr="760" mi="0" ci="10" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="762" mi="0" ci="5" mb="0" cb="0"/><line nr="763" mi="0" ci="5" mb="0" cb="0"/><line nr="764" mi="0" ci="2" mb="0" cb="0"/><line nr="766" mi="0" ci="20" mb="0" cb="0"/><line nr="767" mi="0" ci="13" mb="0" cb="0"/><line nr="768" mi="0" ci="6" mb="0" cb="0"/><line nr="769" mi="0" ci="11" mb="0" cb="0"/><line nr="770" mi="0" ci="2" mb="0" cb="0"/><line nr="771" mi="0" ci="13" mb="0" cb="0"/><line nr="772" mi="0" ci="12" mb="0" cb="0"/><line nr="774" mi="0" ci="9" mb="0" cb="0"/><line nr="775" mi="0" ci="4" mb="0" cb="0"/><line nr="776" mi="0" ci="9" mb="0" cb="0"/><line nr="777" mi="0" ci="14" mb="0" cb="0"/><line nr="779" mi="0" ci="9" mb="0" cb="0"/><line nr="780" mi="0" ci="5" mb="0" cb="0"/><line nr="781" mi="0" ci="5" mb="0" cb="0"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="9" mb="0" cb="0"/><line nr="785" mi="0" ci="4" mb="0" cb="0"/><line nr="786" mi="0" ci="5" mb="0" cb="0"/><line nr="787" mi="0" ci="9" mb="0" cb="0"/><line nr="788" mi="0" ci="2" mb="0" cb="0"/><line nr="789" mi="0" ci="5" mb="0" cb="0"/><line nr="790" mi="0" ci="5" mb="0" cb="0"/><line nr="791" mi="0" ci="4" mb="0" cb="0"/><line nr="792" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="1" mb="0" cb="0"/><line nr="794" mi="0" ci="5" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="2" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="800" mi="0" ci="9" mb="0" cb="0"/><line nr="801" mi="0" ci="4" mb="0" cb="0"/><line nr="802" mi="0" ci="9" mb="0" cb="0"/><line nr="803" mi="0" ci="14" mb="0" cb="0"/><line nr="806" mi="0" ci="5" mb="0" cb="0"/><line nr="808" mi="0" ci="20" mb="0" cb="0"/><line nr="810" mi="0" ci="21" mb="0" cb="0"/><line nr="812" mi="0" ci="28" mb="0" cb="0"/><line nr="813" mi="0" ci="27" mb="0" cb="0"/><line nr="814" mi="0" ci="19" mb="0" cb="0"/><line nr="820" mi="0" ci="9" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><line nr="822" mi="0" ci="5" mb="0" cb="0"/><line nr="823" mi="0" ci="5" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="827" mi="0" ci="9" mb="0" cb="0"/><line nr="828" mi="0" ci="5" mb="0" cb="0"/><line nr="829" mi="0" ci="5" mb="0" cb="0"/><line nr="830" mi="0" ci="18" mb="0" cb="0"/><line nr="831" mi="0" ci="9" mb="0" cb="0"/><line nr="832" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="0" ci="9" mb="0" cb="0"/><line nr="836" mi="0" ci="5" mb="0" cb="0"/><line nr="837" mi="0" ci="4" mb="0" cb="0"/><line nr="838" mi="0" ci="11" mb="0" cb="0"/><line nr="839" mi="0" ci="12" mb="0" cb="0"/><line nr="840" mi="0" ci="11" mb="0" cb="0"/><line nr="841" mi="0" ci="12" mb="0" cb="0"/><line nr="842" mi="0" ci="4" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="0"/><line nr="846" mi="0" ci="9" mb="0" cb="0"/><line nr="847" mi="0" ci="4" mb="0" cb="0"/><line nr="848" mi="0" ci="5" mb="0" cb="0"/><line nr="849" mi="0" ci="4" mb="0" cb="0"/><line nr="850" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="4" mb="0" cb="0"/><line nr="852" mi="0" ci="4" mb="0" cb="0"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="4" mb="0" cb="0"/><line nr="855" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="9" mb="0" cb="0"/><line nr="862" mi="0" ci="11" mb="0" cb="0"/><line nr="863" mi="0" ci="12" mb="0" cb="0"/><line nr="864" mi="0" ci="4" mb="0" cb="0"/><line nr="865" mi="0" ci="5" mb="0" cb="0"/><line nr="866" mi="0" ci="4" mb="0" cb="0"/><line nr="867" mi="0" ci="5" mb="0" cb="0"/><line nr="868" mi="0" ci="4" mb="0" cb="0"/><line nr="869" mi="0" ci="4" mb="0" cb="0"/><line nr="870" mi="0" ci="5" mb="0" cb="0"/><line nr="871" mi="0" ci="4" mb="0" cb="0"/><line nr="872" mi="0" ci="5" mb="0" cb="0"/><line nr="873" mi="0" ci="4" mb="0" cb="0"/><line nr="874" mi="0" ci="2" mb="0" cb="0"/><line nr="877" mi="0" ci="10" mb="0" cb="0"/><line nr="878" mi="0" ci="4" mb="0" cb="0"/><line nr="879" mi="0" ci="5" mb="0" cb="0"/><line nr="880" mi="0" ci="9" mb="0" cb="0"/><line nr="881" mi="0" ci="4" mb="0" cb="0"/><line nr="882" mi="0" ci="11" mb="0" cb="0"/><line nr="883" mi="0" ci="12" mb="0" cb="0"/><line nr="884" mi="0" ci="1" mb="0" cb="0"/><line nr="885" mi="0" ci="4" mb="0" cb="0"/><line nr="886" mi="0" ci="2" mb="0" cb="0"/><line nr="889" mi="0" ci="10" mb="0" cb="0"/><line nr="890" mi="0" ci="4" mb="0" cb="0"/><line nr="891" mi="0" ci="5" mb="0" cb="0"/><line nr="892" mi="0" ci="9" mb="0" cb="0"/><line nr="893" mi="0" ci="4" mb="0" cb="0"/><line nr="894" mi="0" ci="11" mb="0" cb="0"/><line nr="895" mi="0" ci="12" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="897" mi="0" ci="4" mb="0" cb="0"/><line nr="898" mi="0" ci="2" mb="0" cb="0"/><line nr="901" mi="0" ci="10" mb="0" cb="0"/><line nr="902" mi="0" ci="4" mb="0" cb="0"/><line nr="903" mi="0" ci="5" mb="0" cb="0"/><line nr="904" mi="0" ci="9" mb="0" cb="0"/><line nr="905" mi="0" ci="4" mb="0" cb="0"/><line nr="906" mi="0" ci="11" mb="0" cb="0"/><line nr="907" mi="0" ci="12" mb="0" cb="0"/><line nr="908" mi="0" ci="1" mb="0" cb="0"/><line nr="909" mi="0" ci="4" mb="0" cb="0"/><line nr="910" mi="0" ci="2" mb="0" cb="0"/><line nr="913" mi="0" ci="10" mb="0" cb="0"/><line nr="914" mi="0" ci="4" mb="0" cb="0"/><line nr="915" mi="0" ci="4" mb="0" cb="0"/><line nr="916" mi="0" ci="5" mb="0" cb="0"/><line nr="917" mi="0" ci="4" mb="0" cb="0"/><line nr="918" mi="0" ci="4" mb="0" cb="0"/><line nr="919" mi="0" ci="2" mb="0" cb="0"/><line nr="922" mi="0" ci="10" mb="0" cb="0"/><line nr="923" mi="0" ci="4" mb="0" cb="0"/><line nr="924" mi="0" ci="5" mb="0" cb="0"/><line nr="925" mi="0" ci="4" mb="0" cb="0"/><line nr="926" mi="0" ci="4" mb="0" cb="0"/><line nr="927" mi="0" ci="2" mb="0" cb="0"/><line nr="930" mi="0" ci="3" mb="0" cb="0"/><line nr="931" mi="2" ci="17" mb="1" cb="5"/><line nr="932" mi="4" ci="1" mb="0" cb="0"/><line nr="933" mi="0" ci="4" mb="0" cb="0"/><line nr="934" mi="0" ci="3" mb="1" cb="1"/><line nr="935" mi="0" ci="3" mb="0" cb="0"/><line nr="937" mi="12" ci="0" mb="0" cb="0"/><line nr="939" mi="0" ci="1" mb="0" cb="0"/><line nr="946" mi="0" ci="6" mb="0" cb="0"/><line nr="947" mi="0" ci="1" mb="0" cb="0"/><line nr="950" mi="0" ci="4" mb="0" cb="0"/><line nr="951" mi="0" ci="6" mb="0" cb="0"/><line nr="952" mi="0" ci="3" mb="0" cb="0"/><line nr="956" mi="0" ci="3" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="959" mi="0" ci="4" mb="1" cb="1"/><line nr="960" mi="6" ci="0" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="4455"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="681"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlPrinter.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="2"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="1" cb="3"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="220"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrettyPrinterConfiguration.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="16" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="2" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="14" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="1" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="186"/><counter type="BRANCH" missed="5" covered="6"/><counter type="LINE" missed="19" covered="52"/><counter type="COMPLEXITY" missed="10" covered="25"/><counter type="METHOD" missed="7" covered="22"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DotPrinter.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="24" mb="0" cb="0"/><line nr="72" mi="0" ci="18" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="20" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="17" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="4"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="19" mb="0" cb="0"/><line nr="96" mi="0" ci="17" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="15" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="332"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SourcePrinter.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="1" cb="2"/><line nr="67" mi="0" ci="12" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="1" cb="1"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="1" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="1" cb="1"/><line nr="119" mi="0" ci="8" mb="1" cb="1"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="1" cb="1"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="327"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="9" covered="75"/><counter type="COMPLEXITY" missed="8" covered="23"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrettyPrintVisitor.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="21" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="12" mb="0" cb="4"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="1" cb="1"/><line nr="175" mi="0" ci="6" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="1" cb="1"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="2"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="2"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="2"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="2"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="1" cb="3"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="16" mb="0" cb="2"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="2"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="16" mb="0" cb="4"/><line nr="326" mi="0" ci="10" mb="0" cb="2"/><line nr="327" mi="0" ci="3" mb="0" cb="2"/><line nr="328" mi="0" ci="2" mb="0" cb="2"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="2"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="2"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="2"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="357" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="2"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="2"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="2"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="2"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="2"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="10" mb="0" cb="2"/><line nr="402" mi="0" ci="6" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="2"/><line nr="412" mi="0" ci="7" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="6" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="11" mb="0" cb="2"/><line nr="423" mi="0" ci="2" mb="0" cb="2"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="11" mb="0" cb="2"/><line nr="438" mi="0" ci="2" mb="0" cb="2"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="2"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="7" mb="0" cb="0"/><line nr="456" mi="0" ci="4" mb="0" cb="2"/><line nr="457" mi="0" ci="5" mb="0" cb="0"/><line nr="458" mi="0" ci="7" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="1" cb="1"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="476" mi="0" ci="10" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="2"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="5" mb="0" cb="0"/><line nr="483" mi="0" ci="7" mb="0" cb="2"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="2"/><line nr="487" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="8" mb="0" cb="0"/><line nr="500" mi="0" ci="7" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="9" mb="0" cb="2"/><line nr="507" mi="0" ci="2" mb="0" cb="2"/><line nr="508" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="4" mb="0" cb="2"/><line nr="519" mi="0" ci="5" mb="0" cb="0"/><line nr="520" mi="0" ci="7" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="2"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="7" mb="0" cb="2"/><line nr="531" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="533" mi="0" ci="3" mb="0" cb="2"/><line nr="534" mi="0" ci="5" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="5" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="5" mb="0" cb="0"/><line nr="577" mi="0" ci="11" mb="0" cb="2"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="2"/><line nr="581" mi="0" ci="5" mb="0" cb="0"/><line nr="582" mi="0" ci="7" mb="0" cb="0"/><line nr="584" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="5" mb="0" cb="0"/><line nr="591" mi="0" ci="7" mb="0" cb="0"/><line nr="592" mi="0" ci="5" mb="0" cb="0"/><line nr="593" mi="0" ci="5" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="5" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="7" mb="0" cb="0"/><line nr="602" mi="0" ci="5" mb="0" cb="0"/><line nr="603" mi="0" ci="5" mb="0" cb="0"/><line nr="604" mi="0" ci="1" mb="0" cb="0"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="612" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="5" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="624" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="0"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="5" mb="0" cb="0"/><line nr="635" mi="0" ci="5" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="5" mb="0" cb="0"/><line nr="638" mi="0" ci="1" mb="0" cb="0"/><line nr="642" mi="0" ci="5" mb="0" cb="0"/><line nr="643" mi="0" ci="5" mb="0" cb="0"/><line nr="644" mi="0" ci="5" mb="0" cb="0"/><line nr="645" mi="0" ci="5" mb="0" cb="0"/><line nr="646" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="0" ci="5" mb="0" cb="0"/><line nr="651" mi="0" ci="5" mb="0" cb="0"/><line nr="652" mi="0" ci="5" mb="0" cb="0"/><line nr="653" mi="0" ci="5" mb="0" cb="0"/><line nr="654" mi="0" ci="1" mb="0" cb="0"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="659" mi="0" ci="5" mb="0" cb="0"/><line nr="660" mi="0" ci="6" mb="0" cb="0"/><line nr="661" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="0" ci="1" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="667" mi="0" ci="6" mb="0" cb="0"/><line nr="668" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="0" ci="5" mb="0" cb="0"/><line nr="673" mi="0" ci="6" mb="0" cb="0"/><line nr="674" mi="0" ci="1" mb="0" cb="0"/><line nr="678" mi="0" ci="5" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="680" mi="0" ci="1" mb="0" cb="0"/><line nr="684" mi="0" ci="5" mb="0" cb="0"/><line nr="685" mi="0" ci="5" mb="0" cb="0"/><line nr="686" mi="0" ci="6" mb="0" cb="0"/><line nr="687" mi="0" ci="5" mb="0" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="693" mi="0" ci="7" mb="0" cb="0"/><line nr="694" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="5" mb="0" cb="0"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="700" mi="0" ci="1" mb="0" cb="0"/><line nr="704" mi="0" ci="5" mb="0" cb="0"/><line nr="705" mi="0" ci="4" mb="0" cb="2"/><line nr="706" mi="0" ci="7" mb="0" cb="0"/><line nr="707" mi="0" ci="5" mb="0" cb="0"/><line nr="709" mi="0" ci="5" mb="0" cb="0"/><line nr="710" mi="0" ci="1" mb="0" cb="0"/><line nr="714" mi="0" ci="5" mb="0" cb="0"/><line nr="715" mi="0" ci="4" mb="0" cb="2"/><line nr="716" mi="0" ci="7" mb="0" cb="0"/><line nr="717" mi="0" ci="5" mb="0" cb="0"/><line nr="719" mi="0" ci="5" mb="0" cb="0"/><line nr="720" mi="0" ci="1" mb="0" cb="0"/><line nr="724" mi="0" ci="5" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="0" cb="0"/><line nr="731" mi="0" ci="4" mb="0" cb="2"/><line nr="733" mi="0" ci="14" mb="0" cb="4"/><line nr="734" mi="0" ci="3" mb="1" cb="1"/><line nr="735" mi="0" ci="3" mb="1" cb="1"/><line nr="736" mi="0" ci="8" mb="0" cb="2"/><line nr="738" mi="0" ci="2" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="12" mb="1" cb="1"/><line nr="741" mi="0" ci="5" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="5" mb="0" cb="0"/><line nr="744" mi="0" ci="5" mb="0" cb="2"/><line nr="745" mi="0" ci="4" mb="0" cb="0"/><line nr="746" mi="0" ci="4" mb="0" cb="0"/><line nr="750" mi="0" ci="14" mb="0" cb="2"/><line nr="756" mi="0" ci="5" mb="0" cb="0"/><line nr="757" mi="0" ci="3" mb="0" cb="2"/><line nr="758" mi="0" ci="2" mb="0" cb="0"/><line nr="759" mi="0" ci="6" mb="0" cb="2"/><line nr="760" mi="0" ci="6" mb="0" cb="0"/><line nr="761" mi="0" ci="5" mb="0" cb="0"/><line nr="762" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="5" mb="0" cb="0"/><line nr="764" mi="0" ci="3" mb="0" cb="0"/><line nr="765" mi="0" ci="6" mb="0" cb="0"/><line nr="766" mi="0" ci="3" mb="0" cb="2"/><line nr="767" mi="0" ci="3" mb="0" cb="0"/><line nr="768" mi="0" ci="1" mb="0" cb="0"/><line nr="775" mi="0" ci="4" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="2"/><line nr="777" mi="0" ci="3" mb="0" cb="0"/><line nr="778" mi="0" ci="9" mb="0" cb="2"/><line nr="779" mi="0" ci="8" mb="0" cb="0"/><line nr="780" mi="0" ci="2" mb="0" cb="0"/><line nr="781" mi="0" ci="12" mb="0" cb="4"/><line nr="782" mi="0" ci="3" mb="0" cb="0"/><line nr="783" mi="0" ci="1" mb="0" cb="0"/><line nr="785" mi="0" ci="2" mb="0" cb="0"/><line nr="786" mi="0" ci="1" mb="0" cb="0"/><line nr="791" mi="0" ci="9" mb="0" cb="0"/><line nr="792" mi="0" ci="4" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="0" cb="2"/><line nr="794" mi="0" ci="3" mb="0" cb="2"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="802" mi="0" ci="3" mb="0" cb="2"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="811" mi="0" ci="5" mb="0" cb="0"/><line nr="812" mi="0" ci="1" mb="0" cb="0"/><line nr="814" mi="0" ci="4" mb="0" cb="0"/><line nr="815" mi="0" ci="5" mb="0" cb="0"/><line nr="816" mi="0" ci="3" mb="0" cb="0"/><line nr="817" mi="0" ci="5" mb="0" cb="0"/><line nr="818" mi="0" ci="4" mb="0" cb="0"/><line nr="819" mi="0" ci="9" mb="0" cb="6"/><line nr="821" mi="0" ci="3" mb="0" cb="0"/><line nr="823" mi="0" ci="1" mb="0" cb="0"/><line nr="827" mi="0" ci="5" mb="0" cb="0"/><line nr="828" mi="0" ci="4" mb="0" cb="2"/><line nr="829" mi="0" ci="7" mb="0" cb="0"/><line nr="830" mi="0" ci="5" mb="0" cb="0"/><line nr="833" mi="0" ci="5" mb="0" cb="0"/><line nr="835" mi="0" ci="4" mb="0" cb="0"/><line nr="836" mi="0" ci="7" mb="0" cb="2"/><line nr="837" mi="0" ci="5" mb="0" cb="0"/><line nr="840" mi="0" ci="5" mb="0" cb="0"/><line nr="842" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="0" ci="4" mb="0" cb="2"/><line nr="845" mi="0" ci="5" mb="0" cb="0"/><line nr="846" mi="0" ci="4" mb="0" cb="0"/><line nr="847" mi="0" ci="7" mb="0" cb="0"/><line nr="848" mi="0" ci="4" mb="0" cb="0"/><line nr="849" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="1" mb="0" cb="0"/><line nr="855" mi="0" ci="5" mb="0" cb="0"/><line nr="856" mi="0" ci="4" mb="0" cb="2"/><line nr="857" mi="0" ci="7" mb="0" cb="0"/><line nr="860" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="4" mb="0" cb="2"/><line nr="863" mi="0" ci="7" mb="0" cb="0"/><line nr="865" mi="0" ci="1" mb="0" cb="0"/><line nr="869" mi="0" ci="5" mb="0" cb="0"/><line nr="870" mi="0" ci="5" mb="0" cb="0"/><line nr="871" mi="0" ci="4" mb="0" cb="0"/><line nr="873" mi="0" ci="5" mb="0" cb="0"/><line nr="874" mi="0" ci="3" mb="0" cb="2"/><line nr="875" mi="0" ci="5" mb="0" cb="0"/><line nr="877" mi="0" ci="5" mb="0" cb="0"/><line nr="879" mi="0" ci="5" mb="0" cb="0"/><line nr="880" mi="0" ci="4" mb="0" cb="2"/><line nr="881" mi="0" ci="7" mb="0" cb="2"/><line nr="882" mi="0" ci="4" mb="0" cb="0"/><line nr="883" mi="0" ci="4" mb="0" cb="0"/><line nr="884" mi="0" ci="3" mb="0" cb="2"/><line nr="885" mi="0" ci="5" mb="0" cb="0"/><line nr="887" mi="0" ci="1" mb="0" cb="0"/><line nr="889" mi="0" ci="5" mb="0" cb="0"/><line nr="891" mi="0" ci="4" mb="0" cb="2"/><line nr="892" mi="0" ci="5" mb="0" cb="0"/><line nr="893" mi="0" ci="7" mb="0" cb="2"/><line nr="894" mi="0" ci="4" mb="0" cb="0"/><line nr="895" mi="0" ci="4" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="2"/><line nr="897" mi="0" ci="5" mb="0" cb="0"/><line nr="899" mi="0" ci="1" mb="0" cb="0"/><line nr="901" mi="0" ci="5" mb="0" cb="0"/><line nr="902" mi="0" ci="5" mb="0" cb="0"/><line nr="903" mi="0" ci="1" mb="0" cb="0"/><line nr="907" mi="0" ci="3" mb="0" cb="0"/><line nr="909" mi="0" ci="5" mb="0" cb="0"/><line nr="910" mi="0" ci="5" mb="0" cb="0"/><line nr="911" mi="0" ci="4" mb="0" cb="0"/><line nr="912" mi="0" ci="5" mb="0" cb="0"/><line nr="913" mi="0" ci="4" mb="0" cb="2"/><line nr="914" mi="0" ci="5" mb="0" cb="0"/><line nr="917" mi="0" ci="5" mb="0" cb="0"/><line nr="918" mi="0" ci="5" mb="0" cb="0"/><line nr="919" mi="0" ci="5" mb="0" cb="0"/><line nr="921" mi="0" ci="5" mb="0" cb="0"/><line nr="922" mi="0" ci="7" mb="0" cb="0"/><line nr="923" mi="0" ci="4" mb="0" cb="0"/><line nr="924" mi="0" ci="4" mb="0" cb="2"/><line nr="925" mi="0" ci="5" mb="0" cb="0"/><line nr="927" mi="0" ci="1" mb="0" cb="0"/><line nr="928" mi="0" ci="4" mb="0" cb="2"/><line nr="929" mi="0" ci="7" mb="0" cb="2"/><line nr="930" mi="0" ci="4" mb="0" cb="0"/><line nr="931" mi="0" ci="4" mb="0" cb="0"/><line nr="932" mi="0" ci="3" mb="0" cb="2"/><line nr="933" mi="0" ci="5" mb="0" cb="0"/><line nr="935" mi="0" ci="1" mb="0" cb="0"/><line nr="937" mi="0" ci="5" mb="0" cb="0"/><line nr="939" mi="0" ci="4" mb="0" cb="2"/><line nr="940" mi="0" ci="5" mb="0" cb="0"/><line nr="941" mi="0" ci="7" mb="0" cb="2"/><line nr="942" mi="0" ci="4" mb="0" cb="0"/><line nr="943" mi="0" ci="4" mb="0" cb="0"/><line nr="944" mi="0" ci="3" mb="0" cb="2"/><line nr="945" mi="0" ci="5" mb="0" cb="0"/><line nr="947" mi="0" ci="1" mb="0" cb="0"/><line nr="949" mi="0" ci="4" mb="0" cb="2"/><line nr="950" mi="0" ci="6" mb="0" cb="0"/><line nr="952" mi="0" ci="5" mb="0" cb="0"/><line nr="953" mi="0" ci="7" mb="0" cb="0"/><line nr="955" mi="0" ci="1" mb="0" cb="0"/><line nr="959" mi="0" ci="5" mb="0" cb="0"/><line nr="960" mi="0" ci="6" mb="0" cb="0"/><line nr="961" mi="0" ci="4" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><line nr="963" mi="0" ci="3" mb="0" cb="2"/><line nr="964" mi="0" ci="6" mb="0" cb="0"/><line nr="965" mi="0" ci="5" mb="0" cb="0"/><line nr="967" mi="0" ci="4" mb="0" cb="2"/><line nr="968" mi="0" ci="5" mb="0" cb="0"/><line nr="970" mi="0" ci="5" mb="0" cb="0"/><line nr="971" mi="0" ci="1" mb="0" cb="0"/><line nr="975" mi="0" ci="5" mb="0" cb="0"/><line nr="976" mi="0" ci="6" mb="0" cb="0"/><line nr="977" mi="0" ci="5" mb="0" cb="0"/><line nr="978" mi="0" ci="5" mb="0" cb="0"/><line nr="979" mi="0" ci="5" mb="0" cb="0"/><line nr="980" mi="0" ci="1" mb="0" cb="0"/><line nr="984" mi="0" ci="5" mb="0" cb="0"/><line nr="985" mi="0" ci="3" mb="0" cb="2"/><line nr="986" mi="0" ci="4" mb="0" cb="0"/><line nr="987" mi="0" ci="6" mb="0" cb="0"/><line nr="989" mi="0" ci="4" mb="1" cb="1"/><line nr="990" mi="7" ci="0" mb="0" cb="0"/><line nr="991" mi="5" ci="0" mb="0" cb="0"/><line nr="993" mi="0" ci="4" mb="0" cb="0"/><line nr="994" mi="0" ci="5" mb="0" cb="0"/><line nr="996" mi="0" ci="5" mb="0" cb="0"/><line nr="997" mi="0" ci="5" mb="0" cb="0"/><line nr="998" mi="0" ci="1" mb="0" cb="0"/><line nr="1002" mi="0" ci="5" mb="0" cb="0"/><line nr="1003" mi="0" ci="14" mb="0" cb="2"/><line nr="1004" mi="0" ci="6" mb="0" cb="0"/><line nr="1006" mi="0" ci="6" mb="0" cb="0"/><line nr="1008" mi="0" ci="4" mb="0" cb="0"/><line nr="1010" mi="0" ci="4" mb="1" cb="1"/><line nr="1011" mi="0" ci="11" mb="0" cb="0"/><line nr="1013" mi="0" ci="5" mb="0" cb="0"/><line nr="1015" mi="0" ci="7" mb="0" cb="2"/><line nr="1016" mi="0" ci="4" mb="0" cb="0"/><line nr="1017" mi="0" ci="4" mb="0" cb="0"/><line nr="1018" mi="0" ci="3" mb="0" cb="2"/><line nr="1019" mi="0" ci="5" mb="0" cb="0"/><line nr="1021" mi="0" ci="1" mb="0" cb="0"/><line nr="1022" mi="0" ci="1" mb="0" cb="0"/><line nr="1026" mi="0" ci="5" mb="0" cb="0"/><line nr="1027" mi="0" ci="5" mb="0" cb="0"/><line nr="1028" mi="0" ci="1" mb="0" cb="0"/><line nr="1032" mi="0" ci="5" mb="0" cb="0"/><line nr="1033" mi="0" ci="5" mb="0" cb="0"/><line nr="1034" mi="0" ci="5" mb="0" cb="0"/><line nr="1035" mi="0" ci="4" mb="0" cb="2"/><line nr="1036" mi="0" ci="5" mb="0" cb="0"/><line nr="1037" mi="0" ci="7" mb="0" cb="0"/><line nr="1039" mi="0" ci="5" mb="0" cb="0"/><line nr="1040" mi="0" ci="1" mb="0" cb="0"/><line nr="1044" mi="0" ci="3" mb="0" cb="0"/><line nr="1045" mi="0" ci="5" mb="0" cb="0"/><line nr="1046" mi="0" ci="5" mb="0" cb="0"/><line nr="1047" mi="0" ci="3" mb="1" cb="1"/><line nr="1048" mi="0" ci="4" mb="0" cb="0"/><line nr="1049" mi="0" ci="11" mb="0" cb="2"/><line nr="1050" mi="0" ci="4" mb="0" cb="0"/><line nr="1051" mi="0" ci="4" mb="0" cb="0"/><line nr="1052" mi="0" ci="1" mb="0" cb="0"/><line nr="1053" mi="0" ci="4" mb="0" cb="0"/><line nr="1055" mi="0" ci="3" mb="0" cb="0"/><line nr="1056" mi="0" ci="5" mb="0" cb="0"/><line nr="1057" mi="0" ci="1" mb="0" cb="0"/><line nr="1061" mi="0" ci="5" mb="0" cb="0"/><line nr="1062" mi="0" ci="5" mb="0" cb="0"/><line nr="1063" mi="0" ci="5" mb="0" cb="0"/><line nr="1064" mi="0" ci="5" mb="0" cb="0"/><line nr="1065" mi="0" ci="1" mb="0" cb="0"/><line nr="1069" mi="0" ci="5" mb="0" cb="0"/><line nr="1070" mi="0" ci="5" mb="0" cb="0"/><line nr="1071" mi="0" ci="1" mb="0" cb="0"/><line nr="1075" mi="0" ci="3" mb="0" cb="0"/><line nr="1076" mi="0" ci="5" mb="0" cb="0"/><line nr="1077" mi="0" ci="5" mb="0" cb="0"/><line nr="1078" mi="0" ci="5" mb="0" cb="0"/><line nr="1079" mi="0" ci="1" mb="0" cb="0"/><line nr="1083" mi="0" ci="4" mb="0" cb="0"/><line nr="1084" mi="0" ci="1" mb="0" cb="0"/><line nr="1088" mi="4" ci="0" mb="0" cb="0"/><line nr="1089" mi="1" ci="0" mb="0" cb="0"/><line nr="1092" mi="0" ci="5" mb="0" cb="0"/><line nr="1093" mi="0" ci="5" mb="0" cb="0"/><line nr="1094" mi="0" ci="5" mb="0" cb="0"/><line nr="1095" mi="0" ci="5" mb="0" cb="0"/><line nr="1096" mi="0" ci="3" mb="1" cb="1"/><line nr="1097" mi="0" ci="4" mb="0" cb="0"/><line nr="1098" mi="0" ci="11" mb="0" cb="2"/><line nr="1099" mi="0" ci="4" mb="0" cb="0"/><line nr="1100" mi="0" ci="1" mb="0" cb="0"/><line nr="1101" mi="0" ci="4" mb="0" cb="0"/><line nr="1103" mi="0" ci="5" mb="0" cb="0"/><line nr="1104" mi="0" ci="1" mb="0" cb="0"/><line nr="1108" mi="0" ci="5" mb="0" cb="0"/><line nr="1110" mi="0" ci="4" mb="0" cb="2"/><line nr="1111" mi="0" ci="6" mb="0" cb="0"/><line nr="1113" mi="0" ci="5" mb="0" cb="0"/><line nr="1114" mi="0" ci="7" mb="0" cb="2"/><line nr="1115" mi="0" ci="4" mb="0" cb="0"/><line nr="1116" mi="0" ci="4" mb="0" cb="0"/><line nr="1117" mi="0" ci="3" mb="1" cb="1"/><line nr="1118" mi="5" ci="0" mb="0" cb="0"/><line nr="1120" mi="0" ci="1" mb="0" cb="0"/><line nr="1121" mi="0" ci="5" mb="0" cb="0"/><line nr="1123" mi="0" ci="4" mb="0" cb="0"/><line nr="1124" mi="0" ci="4" mb="0" cb="0"/><line nr="1125" mi="0" ci="3" mb="1" cb="1"/><line nr="1126" mi="0" ci="11" mb="0" cb="2"/><line nr="1127" mi="0" ci="4" mb="0" cb="0"/><line nr="1128" mi="0" ci="4" mb="0" cb="0"/><line nr="1129" mi="0" ci="1" mb="0" cb="0"/><line nr="1131" mi="0" ci="4" mb="0" cb="0"/><line nr="1132" mi="0" ci="1" mb="0" cb="0"/><line nr="1136" mi="0" ci="5" mb="0" cb="0"/><line nr="1137" mi="0" ci="5" mb="0" cb="0"/><line nr="1138" mi="0" ci="6" mb="0" cb="0"/><line nr="1139" mi="0" ci="5" mb="0" cb="0"/><line nr="1140" mi="0" ci="4" mb="0" cb="0"/><line nr="1141" mi="0" ci="1" mb="0" cb="0"/><line nr="1142" mi="0" ci="5" mb="0" cb="0"/><line nr="1143" mi="0" ci="1" mb="0" cb="0"/><line nr="1147" mi="0" ci="5" mb="0" cb="0"/><line nr="1148" mi="0" ci="5" mb="0" cb="0"/><line nr="1149" mi="0" ci="4" mb="1" cb="1"/><line nr="1150" mi="0" ci="5" mb="0" cb="0"/><line nr="1151" mi="0" ci="7" mb="0" cb="0"/><line nr="1153" mi="0" ci="5" mb="0" cb="0"/><line nr="1154" mi="0" ci="1" mb="0" cb="0"/><line nr="1158" mi="0" ci="5" mb="0" cb="0"/><line nr="1159" mi="0" ci="5" mb="0" cb="0"/><line nr="1160" mi="0" ci="4" mb="0" cb="0"/><line nr="1162" mi="0" ci="5" mb="0" cb="0"/><line nr="1163" mi="0" ci="5" mb="0" cb="0"/><line nr="1165" mi="0" ci="4" mb="0" cb="2"/><line nr="1166" mi="0" ci="5" mb="0" cb="0"/><line nr="1167" mi="0" ci="7" mb="0" cb="2"/><line nr="1168" mi="0" ci="4" mb="0" cb="0"/><line nr="1169" mi="0" ci="4" mb="0" cb="0"/><line nr="1170" mi="0" ci="3" mb="0" cb="2"/><line nr="1171" mi="0" ci="5" mb="0" cb="0"/><line nr="1173" mi="0" ci="1" mb="0" cb="0"/><line nr="1176" mi="0" ci="5" mb="0" cb="0"/><line nr="1177" mi="0" ci="4" mb="0" cb="0"/><line nr="1178" mi="0" ci="4" mb="0" cb="2"/><line nr="1179" mi="0" ci="1" mb="0" cb="0"/><line nr="1181" mi="0" ci="7" mb="0" cb="2"/><line nr="1183" mi="0" ci="13" mb="0" cb="2"/><line nr="1184" mi="0" ci="4" mb="0" cb="0"/><line nr="1185" mi="0" ci="7" mb="0" cb="2"/><line nr="1186" mi="0" ci="4" mb="0" cb="0"/><line nr="1187" mi="0" ci="4" mb="0" cb="0"/><line nr="1188" mi="0" ci="3" mb="0" cb="2"/><line nr="1189" mi="0" ci="2" mb="0" cb="2"/><line nr="1190" mi="0" ci="6" mb="0" cb="0"/><line nr="1192" mi="0" ci="5" mb="0" cb="0"/><line nr="1195" mi="0" ci="1" mb="0" cb="0"/><line nr="1197" mi="0" ci="4" mb="0" cb="2"/><line nr="1198" mi="0" ci="5" mb="0" cb="0"/><line nr="1199" mi="0" ci="6" mb="0" cb="0"/><line nr="1201" mi="0" ci="4" mb="0" cb="2"/><line nr="1202" mi="0" ci="4" mb="0" cb="0"/><line nr="1205" mi="0" ci="4" mb="0" cb="0"/><line nr="1206" mi="0" ci="5" mb="0" cb="0"/><line nr="1207" mi="0" ci="1" mb="0" cb="0"/><line nr="1211" mi="0" ci="5" mb="0" cb="0"/><line nr="1212" mi="0" ci="5" mb="0" cb="0"/><line nr="1213" mi="0" ci="5" mb="0" cb="0"/><line nr="1215" mi="0" ci="4" mb="0" cb="2"/><line nr="1216" mi="0" ci="5" mb="0" cb="0"/><line nr="1219" mi="0" ci="4" mb="0" cb="2"/><line nr="1220" mi="0" ci="5" mb="0" cb="0"/><line nr="1221" mi="0" ci="4" mb="0" cb="0"/><line nr="1222" mi="0" ci="5" mb="0" cb="0"/><line nr="1223" mi="0" ci="4" mb="0" cb="0"/><line nr="1224" mi="0" ci="5" mb="0" cb="0"/><line nr="1226" mi="0" ci="1" mb="0" cb="0"/><line nr="1230" mi="0" ci="5" mb="0" cb="0"/><line nr="1231" mi="0" ci="3" mb="0" cb="2"/><line nr="1232" mi="0" ci="5" mb="0" cb="0"/><line nr="1234" mi="0" ci="5" mb="0" cb="0"/><line nr="1235" mi="0" ci="1" mb="0" cb="0"/><line nr="1239" mi="0" ci="5" mb="0" cb="0"/><line nr="1240" mi="0" ci="5" mb="0" cb="0"/><line nr="1241" mi="0" ci="5" mb="0" cb="0"/><line nr="1242" mi="0" ci="4" mb="0" cb="0"/><line nr="1243" mi="0" ci="2" mb="0" cb="2"/><line nr="1244" mi="0" ci="6" mb="0" cb="0"/><line nr="1246" mi="0" ci="5" mb="0" cb="0"/><line nr="1247" mi="0" ci="4" mb="0" cb="0"/><line nr="1249" mi="0" ci="5" mb="0" cb="0"/><line nr="1250" mi="0" ci="2" mb="0" cb="2"/><line nr="1251" mi="0" ci="4" mb="0" cb="0"/><line nr="1252" mi="0" ci="4" mb="0" cb="2"/><line nr="1253" mi="0" ci="2" mb="0" cb="2"/><line nr="1254" mi="0" ci="6" mb="0" cb="0"/><line nr="1256" mi="0" ci="4" mb="0" cb="0"/><line nr="1257" mi="0" ci="6" mb="0" cb="0"/><line nr="1258" mi="0" ci="6" mb="0" cb="0"/><line nr="1259" mi="0" ci="4" mb="0" cb="4"/><line nr="1260" mi="0" ci="6" mb="0" cb="0"/><line nr="1262" mi="0" ci="5" mb="0" cb="0"/><line nr="1263" mi="0" ci="4" mb="0" cb="0"/><line nr="1265" mi="0" ci="4" mb="1" cb="1"/><line nr="1266" mi="0" ci="7" mb="0" cb="0"/><line nr="1267" mi="0" ci="4" mb="0" cb="4"/><line nr="1268" mi="0" ci="4" mb="0" cb="0"/><line nr="1270" mi="0" ci="1" mb="0" cb="0"/><line nr="1274" mi="0" ci="5" mb="0" cb="0"/><line nr="1275" mi="0" ci="5" mb="0" cb="0"/><line nr="1276" mi="0" ci="5" mb="0" cb="0"/><line nr="1277" mi="0" ci="5" mb="0" cb="0"/><line nr="1278" mi="0" ci="5" mb="0" cb="0"/><line nr="1279" mi="0" ci="1" mb="0" cb="0"/><line nr="1283" mi="0" ci="5" mb="0" cb="0"/><line nr="1284" mi="0" ci="5" mb="0" cb="0"/><line nr="1285" mi="0" ci="14" mb="0" cb="0"/><line nr="1286" mi="0" ci="5" mb="0" cb="0"/><line nr="1287" mi="0" ci="1" mb="0" cb="0"/><line nr="1291" mi="0" ci="5" mb="0" cb="0"/><line nr="1292" mi="0" ci="5" mb="0" cb="0"/><line nr="1293" mi="0" ci="5" mb="0" cb="0"/><line nr="1294" mi="0" ci="5" mb="0" cb="0"/><line nr="1295" mi="0" ci="5" mb="0" cb="0"/><line nr="1296" mi="0" ci="5" mb="0" cb="0"/><line nr="1297" mi="0" ci="1" mb="0" cb="0"/><line nr="1301" mi="0" ci="5" mb="0" cb="0"/><line nr="1302" mi="0" ci="5" mb="0" cb="0"/><line nr="1303" mi="0" ci="5" mb="0" cb="0"/><line nr="1304" mi="0" ci="5" mb="0" cb="0"/><line nr="1305" mi="0" ci="5" mb="0" cb="0"/><line nr="1306" mi="0" ci="5" mb="0" cb="0"/><line nr="1307" mi="0" ci="5" mb="0" cb="0"/><line nr="1308" mi="0" ci="1" mb="0" cb="0"/><line nr="1312" mi="0" ci="5" mb="0" cb="0"/><line nr="1313" mi="0" ci="5" mb="0" cb="0"/><line nr="1314" mi="0" ci="3" mb="1" cb="1"/><line nr="1315" mi="0" ci="7" mb="0" cb="2"/><line nr="1316" mi="0" ci="4" mb="0" cb="0"/><line nr="1317" mi="0" ci="4" mb="0" cb="0"/><line nr="1318" mi="0" ci="3" mb="0" cb="2"/><line nr="1319" mi="0" ci="5" mb="0" cb="0"/><line nr="1321" mi="0" ci="1" mb="0" cb="0"/><line nr="1323" mi="0" ci="5" mb="0" cb="0"/><line nr="1324" mi="0" ci="4" mb="1" cb="1"/><line nr="1325" mi="0" ci="7" mb="0" cb="0"/><line nr="1327" mi="0" ci="5" mb="0" cb="0"/><line nr="1328" mi="0" ci="3" mb="1" cb="1"/><line nr="1329" mi="0" ci="7" mb="0" cb="2"/><line nr="1330" mi="0" ci="4" mb="0" cb="0"/><line nr="1331" mi="0" ci="4" mb="0" cb="0"/><line nr="1332" mi="0" ci="3" mb="0" cb="2"/><line nr="1333" mi="0" ci="5" mb="0" cb="0"/><line nr="1335" mi="0" ci="1" mb="0" cb="0"/><line nr="1337" mi="0" ci="5" mb="0" cb="0"/><line nr="1338" mi="0" ci="5" mb="0" cb="0"/><line nr="1339" mi="0" ci="1" mb="0" cb="0"/><line nr="1343" mi="0" ci="5" mb="0" cb="0"/><line nr="1344" mi="0" ci="5" mb="0" cb="0"/><line nr="1345" mi="0" ci="5" mb="0" cb="0"/><line nr="1346" mi="0" ci="5" mb="0" cb="0"/><line nr="1347" mi="0" ci="1" mb="0" cb="0"/><line nr="1351" mi="0" ci="5" mb="0" cb="0"/><line nr="1352" mi="0" ci="5" mb="0" cb="0"/><line nr="1353" mi="0" ci="5" mb="0" cb="0"/><line nr="1354" mi="0" ci="5" mb="0" cb="0"/><line nr="1355" mi="0" ci="5" mb="0" cb="0"/><line nr="1356" mi="0" ci="1" mb="0" cb="0"/><line nr="1360" mi="0" ci="5" mb="0" cb="0"/><line nr="1361" mi="0" ci="5" mb="0" cb="0"/><line nr="1362" mi="0" ci="4" mb="0" cb="2"/><line nr="1363" mi="0" ci="5" mb="0" cb="0"/><line nr="1364" mi="0" ci="4" mb="0" cb="0"/><line nr="1365" mi="0" ci="2" mb="0" cb="0"/><line nr="1366" mi="0" ci="3" mb="0" cb="2"/><line nr="1367" mi="0" ci="6" mb="0" cb="0"/><line nr="1368" mi="0" ci="3" mb="0" cb="2"/><line nr="1369" mi="0" ci="5" mb="0" cb="0"/><line nr="1370" mi="0" ci="4" mb="0" cb="0"/><line nr="1371" mi="0" ci="2" mb="1" cb="1"/><line nr="1372" mi="0" ci="4" mb="0" cb="0"/><line nr="1375" mi="0" ci="3" mb="0" cb="0"/><line nr="1377" mi="0" ci="5" mb="0" cb="2"/><line nr="1378" mi="0" ci="4" mb="0" cb="0"/><line nr="1380" mi="0" ci="5" mb="0" cb="0"/><line nr="1382" mi="0" ci="5" mb="0" cb="0"/><line nr="1383" mi="0" ci="11" mb="0" cb="2"/><line nr="1384" mi="0" ci="4" mb="0" cb="0"/><line nr="1385" mi="0" ci="1" mb="0" cb="0"/><line nr="1386" mi="0" ci="4" mb="0" cb="2"/><line nr="1387" mi="0" ci="5" mb="0" cb="0"/><line nr="1388" mi="0" ci="7" mb="0" cb="0"/><line nr="1390" mi="0" ci="1" mb="0" cb="0"/><line nr="1394" mi="0" ci="5" mb="0" cb="0"/><line nr="1395" mi="0" ci="5" mb="0" cb="0"/><line nr="1396" mi="0" ci="5" mb="0" cb="0"/><line nr="1397" mi="0" ci="5" mb="0" cb="0"/><line nr="1398" mi="0" ci="5" mb="0" cb="0"/><line nr="1399" mi="0" ci="1" mb="0" cb="0"/><line nr="1403" mi="0" ci="5" mb="0" cb="0"/><line nr="1404" mi="0" ci="5" mb="0" cb="0"/><line nr="1405" mi="0" ci="4" mb="0" cb="0"/><line nr="1407" mi="0" ci="5" mb="0" cb="0"/><line nr="1408" mi="0" ci="5" mb="0" cb="0"/><line nr="1409" mi="0" ci="5" mb="0" cb="0"/><line nr="1410" mi="0" ci="4" mb="0" cb="0"/><line nr="1411" mi="0" ci="3" mb="1" cb="1"/><line nr="1412" mi="0" ci="5" mb="0" cb="0"/><line nr="1414" mi="0" ci="4" mb="0" cb="0"/><line nr="1415" mi="0" ci="5" mb="0" cb="0"/><line nr="1416" mi="0" ci="1" mb="0" cb="0"/><line nr="1420" mi="0" ci="5" mb="0" cb="0"/><line nr="1421" mi="0" ci="5" mb="0" cb="0"/><line nr="1422" mi="0" ci="4" mb="0" cb="0"/><line nr="1424" mi="0" ci="5" mb="0" cb="0"/><line nr="1425" mi="0" ci="5" mb="0" cb="0"/><line nr="1426" mi="0" ci="5" mb="0" cb="0"/><line nr="1427" mi="0" ci="5" mb="0" cb="0"/><line nr="1428" mi="0" ci="4" mb="1" cb="1"/><line nr="1429" mi="5" ci="0" mb="0" cb="0"/><line nr="1430" mi="7" ci="0" mb="0" cb="0"/><line nr="1432" mi="0" ci="5" mb="0" cb="0"/><line nr="1433" mi="0" ci="1" mb="0" cb="0"/><line nr="1437" mi="0" ci="5" mb="0" cb="0"/><line nr="1438" mi="0" ci="5" mb="0" cb="0"/><line nr="1439" mi="0" ci="5" mb="0" cb="0"/><line nr="1440" mi="0" ci="1" mb="0" cb="0"/><line nr="1444" mi="0" ci="5" mb="0" cb="0"/><line nr="1445" mi="0" ci="5" mb="0" cb="0"/><line nr="1446" mi="0" ci="5" mb="0" cb="0"/><line nr="1447" mi="0" ci="5" mb="0" cb="0"/><line nr="1448" mi="0" ci="5" mb="0" cb="0"/><line nr="1449" mi="0" ci="5" mb="0" cb="0"/><line nr="1450" mi="0" ci="1" mb="0" cb="0"/><line nr="1454" mi="0" ci="5" mb="0" cb="0"/><line nr="1455" mi="0" ci="5" mb="0" cb="0"/><line nr="1456" mi="0" ci="5" mb="0" cb="0"/><line nr="1457" mi="0" ci="5" mb="0" cb="0"/><line nr="1458" mi="0" ci="3" mb="1" cb="1"/><line nr="1459" mi="0" ci="7" mb="0" cb="2"/><line nr="1460" mi="0" ci="4" mb="0" cb="0"/><line nr="1461" mi="0" ci="4" mb="0" cb="0"/><line nr="1462" mi="0" ci="3" mb="1" cb="1"/><line nr="1463" mi="5" ci="0" mb="0" cb="0"/><line nr="1465" mi="0" ci="1" mb="0" cb="0"/><line nr="1467" mi="0" ci="5" mb="0" cb="0"/><line nr="1468" mi="0" ci="1" mb="0" cb="0"/><line nr="1472" mi="0" ci="5" mb="0" cb="0"/><line nr="1473" mi="0" ci="5" mb="0" cb="0"/><line nr="1474" mi="0" ci="5" mb="0" cb="0"/><line nr="1475" mi="0" ci="5" mb="0" cb="0"/><line nr="1476" mi="0" ci="1" mb="0" cb="0"/><line nr="1480" mi="0" ci="4" mb="1" cb="1"/><line nr="1481" mi="1" ci="0" mb="0" cb="0"/><line nr="1483" mi="0" ci="3" mb="0" cb="0"/><line nr="1484" mi="0" ci="2" mb="0" cb="0"/><line nr="1485" mi="0" ci="6" mb="0" cb="0"/><line nr="1486" mi="0" ci="1" mb="0" cb="0"/><line nr="1490" mi="0" ci="4" mb="0" cb="2"/><line nr="1491" mi="0" ci="1" mb="0" cb="0"/><line nr="1493" mi="0" ci="7" mb="0" cb="0"/><line nr="1494" mi="0" ci="5" mb="0" cb="0"/><line nr="1495" mi="0" ci="5" mb="0" cb="0"/><line nr="1496" mi="0" ci="10" mb="0" cb="2"/><line nr="1497" mi="0" ci="7" mb="0" cb="0"/><line nr="1498" mi="0" ci="7" mb="0" cb="0"/><line nr="1500" mi="0" ci="10" mb="0" cb="0"/><line nr="1501" mi="0" ci="5" mb="0" cb="0"/><line nr="1502" mi="0" ci="1" mb="0" cb="0"/><line nr="1506" mi="0" ci="5" mb="0" cb="0"/><line nr="1508" mi="0" ci="3" mb="0" cb="0"/><line nr="1509" mi="0" ci="3" mb="0" cb="0"/><line nr="1511" mi="0" ci="2" mb="0" cb="2"/><line nr="1512" mi="0" ci="5" mb="0" cb="0"/><line nr="1514" mi="0" ci="6" mb="0" cb="2"/><line nr="1515" mi="0" ci="4" mb="0" cb="0"/><line nr="1516" mi="0" ci="4" mb="0" cb="0"/><line nr="1517" mi="0" ci="3" mb="0" cb="2"/><line nr="1518" mi="0" ci="5" mb="0" cb="0"/><line nr="1520" mi="0" ci="1" mb="0" cb="0"/><line nr="1521" mi="0" ci="2" mb="0" cb="2"/><line nr="1522" mi="0" ci="5" mb="0" cb="0"/><line nr="1525" mi="0" ci="5" mb="0" cb="0"/><line nr="1526" mi="0" ci="3" mb="0" cb="0"/><line nr="1527" mi="0" ci="3" mb="0" cb="2"/><line nr="1529" mi="0" ci="7" mb="0" cb="0"/><line nr="1531" mi="0" ci="4" mb="0" cb="0"/><line nr="1533" mi="0" ci="1" mb="0" cb="0"/><line nr="1537" mi="0" ci="5" mb="0" cb="0"/><line nr="1538" mi="0" ci="3" mb="0" cb="0"/><line nr="1539" mi="0" ci="3" mb="0" cb="0"/><line nr="1540" mi="0" ci="2" mb="1" cb="1"/><line nr="1541" mi="0" ci="5" mb="0" cb="0"/><line nr="1544" mi="0" ci="5" mb="0" cb="0"/><line nr="1545" mi="0" ci="4" mb="0" cb="0"/><line nr="1546" mi="0" ci="2" mb="1" cb="1"/><line nr="1547" mi="0" ci="5" mb="0" cb="0"/><line nr="1549" mi="0" ci="1" mb="0" cb="0"/><line nr="1553" mi="0" ci="5" mb="0" cb="0"/><line nr="1554" mi="0" ci="3" mb="1" cb="1"/><line nr="1555" mi="0" ci="5" mb="0" cb="0"/><line nr="1557" mi="0" ci="1" mb="0" cb="0"/><line nr="1561" mi="0" ci="12" mb="2" cb="4"/><line nr="1563" mi="0" ci="5" mb="0" cb="0"/><line nr="1564" mi="0" ci="3" mb="0" cb="0"/><line nr="1565" mi="0" ci="9" mb="0" cb="2"/><line nr="1566" mi="0" ci="1" mb="0" cb="0"/><line nr="1567" mi="0" ci="9" mb="0" cb="2"/><line nr="1568" mi="0" ci="5" mb="0" cb="0"/><line nr="1569" mi="0" ci="1" mb="0" cb="0"/><line nr="1570" mi="0" ci="1" mb="0" cb="0"/><line nr="1571" mi="0" ci="9" mb="0" cb="2"/><line nr="1572" mi="0" ci="5" mb="0" cb="0"/><line nr="1573" mi="0" ci="1" mb="0" cb="0"/><line nr="1575" mi="0" ci="1" mb="0" cb="0"/><line nr="1579" mi="0" ci="5" mb="0" cb="0"/><line nr="1580" mi="0" ci="5" mb="0" cb="0"/><line nr="1581" mi="0" ci="3" mb="0" cb="2"/><line nr="1582" mi="0" ci="5" mb="0" cb="0"/><line nr="1584" mi="0" ci="5" mb="0" cb="0"/><line nr="1585" mi="0" ci="3" mb="0" cb="2"/><line nr="1586" mi="0" ci="5" mb="0" cb="0"/><line nr="1588" mi="0" ci="5" mb="0" cb="0"/><line nr="1590" mi="0" ci="3" mb="0" cb="0"/><line nr="1591" mi="0" ci="1" mb="0" cb="0"/><line nr="1596" mi="0" ci="5" mb="0" cb="0"/><line nr="1597" mi="0" ci="3" mb="1" cb="1"/><line nr="1598" mi="5" ci="0" mb="0" cb="0"/><line nr="1600" mi="0" ci="5" mb="0" cb="0"/><line nr="1601" mi="0" ci="5" mb="0" cb="0"/><line nr="1602" mi="0" ci="6" mb="0" cb="0"/><line nr="1603" mi="0" ci="5" mb="0" cb="0"/><line nr="1604" mi="0" ci="6" mb="0" cb="0"/><line nr="1605" mi="0" ci="1" mb="0" cb="0"/><line nr="1609" mi="0" ci="5" mb="0" cb="0"/><line nr="1610" mi="0" ci="4" mb="0" cb="0"/><line nr="1611" mi="0" ci="5" mb="0" cb="0"/><line nr="1612" mi="0" ci="5" mb="0" cb="0"/><line nr="1613" mi="0" ci="1" mb="0" cb="0"/><line nr="1617" mi="0" ci="5" mb="0" cb="0"/><line nr="1618" mi="0" ci="5" mb="0" cb="0"/><line nr="1619" mi="0" ci="8" mb="0" cb="0"/><line nr="1620" mi="0" ci="5" mb="0" cb="0"/><line nr="1621" mi="0" ci="1" mb="0" cb="0"/><line nr="1625" mi="0" ci="5" mb="0" cb="0"/><line nr="1626" mi="0" ci="5" mb="0" cb="0"/><line nr="1627" mi="0" ci="8" mb="0" cb="0"/><line nr="1628" mi="0" ci="5" mb="0" cb="0"/><line nr="1629" mi="0" ci="1" mb="0" cb="0"/><line nr="1633" mi="0" ci="5" mb="0" cb="0"/><line nr="1634" mi="0" ci="5" mb="0" cb="0"/><line nr="1635" mi="0" ci="5" mb="0" cb="0"/><line nr="1636" mi="0" ci="1" mb="0" cb="0"/><line nr="1640" mi="0" ci="5" mb="0" cb="0"/><line nr="1641" mi="0" ci="5" mb="0" cb="0"/><line nr="1642" mi="0" ci="8" mb="0" cb="0"/><line nr="1643" mi="0" ci="5" mb="0" cb="0"/><line nr="1644" mi="0" ci="1" mb="0" cb="0"/><line nr="1648" mi="5" ci="0" mb="0" cb="0"/><line nr="1649" mi="1" ci="0" mb="0" cb="0"/><line nr="1652" mi="1" ci="4" mb="1" cb="1"/><line nr="1653" mi="1" ci="3" mb="1" cb="1"/><line nr="1655" mi="0" ci="6" mb="0" cb="0"/><line nr="1656" mi="0" ci="3" mb="0" cb="2"/><line nr="1657" mi="0" ci="6" mb="0" cb="0"/><line nr="1658" mi="0" ci="2" mb="0" cb="0"/><line nr="1659" mi="0" ci="2" mb="0" cb="0"/><line nr="1660" mi="0" ci="8" mb="0" cb="2"/><line nr="1661" mi="0" ci="7" mb="0" cb="2"/><line nr="1663" mi="0" ci="3" mb="1" cb="1"/><line nr="1664" mi="5" ci="0" mb="0" cb="0"/><line nr="1666" mi="0" ci="2" mb="0" cb="0"/><line nr="1667" mi="0" ci="11" mb="0" cb="4"/><line nr="1668" mi="0" ci="7" mb="0" cb="2"/><line nr="1670" mi="0" ci="9" mb="0" cb="2"/><line nr="1671" mi="0" ci="5" mb="0" cb="0"/><line nr="1672" mi="0" ci="3" mb="1" cb="1"/><line nr="1673" mi="8" ci="0" mb="0" cb="0"/><line nr="1674" mi="13" ci="0" mb="0" cb="0"/><line nr="1676" mi="0" ci="4" mb="0" cb="0"/><line nr="1678" mi="0" ci="1" mb="0" cb="0"/><line nr="1681" mi="1" ci="4" mb="1" cb="1"/><line nr="1683" mi="0" ci="6" mb="0" cb="0"/><line nr="1684" mi="0" ci="2" mb="0" cb="0"/><line nr="1685" mi="0" ci="3" mb="0" cb="2"/><line nr="1686" mi="0" ci="1" mb="0" cb="0"/><line nr="1689" mi="0" ci="2" mb="0" cb="0"/><line nr="1690" mi="0" ci="2" mb="0" cb="0"/><line nr="1691" mi="0" ci="6" mb="0" cb="4"/><line nr="1692" mi="0" ci="10" mb="0" cb="0"/><line nr="1693" mi="0" ci="3" mb="0" cb="0"/><line nr="1694" mi="0" ci="2" mb="0" cb="2"/><line nr="1695" mi="0" ci="1" mb="0" cb="0"/><line nr="1697" mi="0" ci="1" mb="0" cb="0"/><line nr="1698" mi="0" ci="7" mb="0" cb="2"/><line nr="1699" mi="0" ci="12" mb="0" cb="0"/><line nr="1701" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="4563"/><counter type="BRANCH" missed="35" covered="407"/><counter type="LINE" missed="17" covered="1055"/><counter type="COMPLEXITY" missed="37" covered="307"/><counter type="METHOD" missed="2" covered="121"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrettyPrinter.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="234" covered="10671"/><counter type="BRANCH" missed="52" covered="511"/><counter type="LINE" missed="48" covered="2044"/><counter type="COMPLEXITY" missed="62" covered="425"/><counter type="METHOD" missed="12" covered="192"/><counter type="CLASS" missed="0" covered="10"/></package><package name="com/github/javaparser/ast/type"><class name="com/github/javaparser/ast/type/PrimitiveType$Primitive" sourcefilename="PrimitiveType.java"><method name="toBoxedType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="108"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/ArrayType" sourcefilename="ArrayType.java"><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedArrayType;" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/type/ArrayType$Origin;Lcom/github/javaparser/ast/NodeList;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;[Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/type/ArrayType$Origin;Lcom/github/javaparser/ast/NodeList;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComponentType" desc="()Lcom/github/javaparser/ast/type/Type;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setComponentType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/type/ArrayType;" line="114"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapInArrayTypes" desc="(Lcom/github/javaparser/ast/type/Type;[Ljava/util/List;)Lcom/github/javaparser/ast/type/Type;" line="133"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unwrapArrayTypes" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/utils/Pair;" line="158"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ArrayType;" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrigin" desc="()Lcom/github/javaparser/ast/type/ArrayType$Origin;" line="220"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOrigin" desc="(Lcom/github/javaparser/ast/type/ArrayType$Origin;)Lcom/github/javaparser/ast/type/ArrayType;" line="225"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="237"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="244"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/ArrayType;" line="250"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ArrayTypeMetaModel;" line="256"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="262"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayType" desc="()Z" line="274"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArrayType" desc="()Lcom/github/javaparser/ast/type/ArrayType;" line="280"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifArrayType" desc="(Ljava/util/function/Consumer;)V" line="285"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArrayType" desc="()Ljava/util/Optional;" line="291"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="238"/><counter type="BRANCH" missed="10" covered="16"/><counter type="LINE" missed="10" covered="57"/><counter type="COMPLEXITY" missed="13" covered="22"/><counter type="METHOD" missed="4" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/UnionType" sourcefilename="UnionType.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElements" desc="()Lcom/github/javaparser/ast/NodeList;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElements" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/UnionType;" line="91"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/UnionType;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="123"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/UnionType;" line="142"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/UnionTypeMetaModel;" line="148"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="154"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnionType" desc="()Z" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnionType" desc="()Lcom/github/javaparser/ast/type/UnionType;" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnionType" desc="(Ljava/util/function/Consumer;)V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedUnionType;" line="184"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnionType" desc="()Ljava/util/Optional;" line="190"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="56"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="27" covered="18"/><counter type="COMPLEXITY" missed="19" covered="7"/><counter type="METHOD" missed="11" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/WildcardType" sourcefilename="WildcardType.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)V" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/ReferenceType;Lcom/github/javaparser/ast/type/ReferenceType;Lcom/github/javaparser/ast/NodeList;)V" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/ReferenceType;Lcom/github/javaparser/ast/type/ReferenceType;Lcom/github/javaparser/ast/NodeList;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtendedType" desc="()Ljava/util/Optional;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuperType" desc="()Ljava/util/Optional;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtendedTypes" desc="()Ljava/util/Optional;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSuperTypes" desc="()Ljava/util/Optional;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setExtendedType" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/WildcardType;" line="127"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtendedTypes" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/WildcardType;" line="147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSuperType" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/WildcardType;" line="158"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSuperTypes" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/WildcardType;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/WildcardType;" line="183"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="189"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="208"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeExtendedTypes" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="216"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeSuperTypes" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="221"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeExtendedType" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeSuperType" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="231"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="237"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/WildcardTypeMetaModel;" line="243"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="249"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/ReferenceType;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="271"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWildcardType" desc="()Z" line="280"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWildcardType" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="286"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifWildcardType" desc="(Ljava/util/function/Consumer;)V" line="291"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedWildcard;" line="296"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toWildcardType" desc="()Ljava/util/Optional;" line="302"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$1" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="210"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$0" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="182" covered="112"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="50" covered="30"/><counter type="COMPLEXITY" missed="33" covered="13"/><counter type="METHOD" missed="21" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/VarType" sourcefilename="VarType.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/VarType;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/VarType;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/VarTypeMetaModel;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="95"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="102"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVarType" desc="()Z" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asVarType" desc="()Lcom/github/javaparser/ast/type/VarType;" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVarType" desc="()Ljava/util/Optional;" line="132"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifVarType" desc="(Ljava/util/function/Consumer;)V" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="7"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/UnknownType" sourcefilename="UnknownType.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/UnknownType;" line="78"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/UnknownType;" line="100"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/UnknownTypeMetaModel;" line="106"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="112"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnknownType" desc="()Z" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnknownType" desc="()Lcom/github/javaparser/ast/type/UnknownType;" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnknownType" desc="(Ljava/util/function/Consumer;)V" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="136"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnknownType" desc="()Ljava/util/Optional;" line="142"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="30"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/Type" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotation" desc="(I)Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/Type;" line="83"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementType" desc="()Lcom/github/javaparser/ast/type/Type;" line="101"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArrayLevel" desc="()I" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="118"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/Type;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/TypeMetaModel;" line="140"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArrayType" desc="()Z" line="159"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArrayType" desc="()Lcom/github/javaparser/ast/type/ArrayType;" line="164"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassOrInterfaceType" desc="()Z" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassOrInterfaceType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="174"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntersectionType" desc="()Z" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIntersectionType" desc="()Lcom/github/javaparser/ast/type/IntersectionType;" line="184"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitiveType" desc="()Z" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asPrimitiveType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="194"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="199"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asReferenceType" desc="()Lcom/github/javaparser/ast/type/ReferenceType;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeParameter" desc="()Z" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeParameter" desc="()Lcom/github/javaparser/ast/type/TypeParameter;" line="214"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnionType" desc="()Z" line="219"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnionType" desc="()Lcom/github/javaparser/ast/type/UnionType;" line="224"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnknownType" desc="()Z" line="229"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnknownType" desc="()Lcom/github/javaparser/ast/type/UnknownType;" line="234"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVoidType" desc="()Z" line="239"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asVoidType" desc="()Lcom/github/javaparser/ast/type/VoidType;" line="244"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWildcardType" desc="()Z" line="249"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWildcardType" desc="()Lcom/github/javaparser/ast/type/WildcardType;" line="254"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifArrayType" desc="(Ljava/util/function/Consumer;)V" line="259"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifClassOrInterfaceType" desc="(Ljava/util/function/Consumer;)V" line="263"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIntersectionType" desc="(Ljava/util/function/Consumer;)V" line="267"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifPrimitiveType" desc="(Ljava/util/function/Consumer;)V" line="271"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifReferenceType" desc="(Ljava/util/function/Consumer;)V" line="275"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeParameter" desc="(Ljava/util/function/Consumer;)V" line="279"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnionType" desc="(Ljava/util/function/Consumer;)V" line="283"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnknownType" desc="(Ljava/util/function/Consumer;)V" line="287"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifVoidType" desc="(Ljava/util/function/Consumer;)V" line="291"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifWildcardType" desc="(Ljava/util/function/Consumer;)V" line="295"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArrayType" desc="()Ljava/util/Optional;" line="302"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassOrInterfaceType" desc="()Ljava/util/Optional;" line="307"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntersectionType" desc="()Ljava/util/Optional;" line="312"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrimitiveType" desc="()Ljava/util/Optional;" line="317"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toReferenceType" desc="()Ljava/util/Optional;" line="322"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeParameter" desc="()Ljava/util/Optional;" line="327"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnionType" desc="()Ljava/util/Optional;" line="332"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnknownType" desc="()Ljava/util/Optional;" line="337"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVoidType" desc="()Ljava/util/Optional;" line="342"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toWildcardType" desc="()Ljava/util/Optional;" line="347"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVarType" desc="()Z" line="352"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asVarType" desc="()Lcom/github/javaparser/ast/type/VarType;" line="357"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVarType" desc="()Ljava/util/Optional;" line="362"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifVarType" desc="(Ljava/util/function/Consumer;)V" line="367"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="269" covered="75"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="62" covered="23"/><counter type="COMPLEXITY" missed="55" covered="11"/><counter type="METHOD" missed="49" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/VoidType" sourcefilename="VoidType.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/VoidType;" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/VoidType;" line="95"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/VoidTypeMetaModel;" line="101"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVoidType" desc="()Z" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asVoidType" desc="()Lcom/github/javaparser/ast/type/VoidType;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifVoidType" desc="(Ljava/util/function/Consumer;)V" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedVoidType;" line="131"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toVoidType" desc="()Ljava/util/Optional;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="11"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/ArrayType$ArrayBracketPair" sourcefilename="ArrayType.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/ArrayType$Origin;Lcom/github/javaparser/ast/NodeList;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ArrayType$ArrayBracketPair;" line="190"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenRange" desc="(Lcom/github/javaparser/TokenRange;)Lcom/github/javaparser/ast/type/ArrayType$ArrayBracketPair;" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenRange" desc="()Ljava/util/Optional;" line="200"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrigin" desc="()Lcom/github/javaparser/ast/type/ArrayType$Origin;" line="204"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOrigin" desc="(Lcom/github/javaparser/ast/type/ArrayType$Origin;)Lcom/github/javaparser/ast/type/ArrayType$ArrayBracketPair;" line="208"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/PrimitiveType" sourcefilename="PrimitiveType.java"><method name="booleanType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="125"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/PrimitiveType$Primitive;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/PrimitiveType$Primitive;Lcom/github/javaparser/ast/NodeList;)V" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/PrimitiveType$Primitive;Lcom/github/javaparser/ast/NodeList;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType$Primitive;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBoxedType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/PrimitiveType$Primitive;)Lcom/github/javaparser/ast/type/PrimitiveType;" line="170"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/PrimitiveType;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="192"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="200"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/PrimitiveTypeMetaModel;" line="206"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="212"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitiveType" desc="()Z" line="220"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asPrimitiveType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="226"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifPrimitiveType" desc="(Ljava/util/function/Consumer;)V" line="231"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedPrimitiveType;" line="236"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrimitiveType" desc="()Ljava/util/Optional;" line="242"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="113"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="22" covered="27"/><counter type="COMPLEXITY" missed="17" covered="16"/><counter type="METHOD" missed="14" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/IntersectionType" sourcefilename="IntersectionType.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Lcom/github/javaparser/ast/NodeList;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElements" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/IntersectionType;" line="94"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/IntersectionType;" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="114"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/IntersectionType;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/IntersectionTypeMetaModel;" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIntersectionType" desc="()Z" line="159"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIntersectionType" desc="()Lcom/github/javaparser/ast/type/IntersectionType;" line="165"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifIntersectionType" desc="(Ljava/util/function/Consumer;)V" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedIntersectionType;" line="175"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntersectionType" desc="()Ljava/util/Optional;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="58"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="24" covered="19"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="9" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/TypeParameter" sourcefilename="TypeParameter.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="68"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/NodeList;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Range;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="80"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeBound" desc="()Lcom/github/javaparser/ast/NodeList;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/type/TypeParameter;" line="135"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeBound" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/TypeParameter;" line="149"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/TypeParameter;" line="163"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="170"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/TypeParameter;" line="191"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/TypeParameterMetaModel;" line="197"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="203"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeParameter" desc="()Z" line="221"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeParameter" desc="()Lcom/github/javaparser/ast/type/TypeParameter;" line="227"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeParameter" desc="(Ljava/util/function/Consumer;)V" line="232"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedTypeVariable;" line="237"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeParameter" desc="()Ljava/util/Optional;" line="243"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$0" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/ast/NodeList;)V" line="184"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="189" covered="99"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="40" covered="29"/><counter type="COMPLEXITY" missed="25" covered="10"/><counter type="METHOD" missed="14" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/ArrayType$Origin" sourcefilename="ArrayType.java"><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/ReferenceType" sourcefilename="ReferenceType.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/ReferenceType;" line="71"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ReferenceTypeMetaModel;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="83"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="91"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asReferenceType" desc="()Lcom/github/javaparser/ast/type/ReferenceType;" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifReferenceType" desc="(Ljava/util/function/Consumer;)V" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toReferenceType" desc="()Ljava/util/Optional;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="3"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/type/ClassOrInterfaceType" sourcefilename="ClassOrInterfaceType.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="76"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="84"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Ljava/util/Optional;" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBoxedType" desc="()Z" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnboxedType" desc="()Lcom/github/javaparser/ast/type/PrimitiveType;" line="131"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="139"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScope" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="159"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="183"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="202"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="223"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeScope" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="232"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="238"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ClassOrInterfaceTypeMetaModel;" line="244"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="250"><counter type="INSTRUCTION" missed="27" covered="34"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClassOrInterfaceType" desc="()Z" line="276"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassOrInterfaceType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="282"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifClassOrInterfaceType" desc="(Ljava/util/function/Consumer;)V" line="287"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/types/ResolvedReferenceType;" line="292"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassOrInterfaceType" desc="()Ljava/util/Optional;" line="298"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$1" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/ast/NodeList;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$asString$0" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="224"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="217"/><counter type="BRANCH" missed="24" covered="16"/><counter type="LINE" missed="39" covered="54"/><counter type="COMPLEXITY" missed="29" covered="21"/><counter type="METHOD" missed="13" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ReferenceType.java"><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="3"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnionType.java"><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="6" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="9" ci="0" mb="2" cb="0"/><line nr="157" mi="6" ci="0" mb="2" cb="0"/><line nr="158" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="56"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="27" covered="18"/><counter type="COMPLEXITY" missed="19" covered="7"/><counter type="METHOD" missed="11" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VarType.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="7"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="11" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeParameter.java"><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="1" cb="1"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="1" cb="1"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="9" ci="0" mb="2" cb="0"/><line nr="173" mi="6" ci="0" mb="2" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="19" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="8" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="2" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="9" ci="0" mb="2" cb="0"/><line nr="210" mi="6" ci="0" mb="2" cb="0"/><line nr="211" mi="7" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="7" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="99"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="40" covered="29"/><counter type="COMPLEXITY" missed="25" covered="10"/><counter type="METHOD" missed="14" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Type.java"><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="2" cb="0"/><line nr="121" mi="6" ci="0" mb="2" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="9" ci="0" mb="2" cb="0"/><line nr="149" mi="6" ci="0" mb="2" cb="0"/><line nr="150" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="12" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="12" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="12" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="12" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="12" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="12" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="12" ci="0" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="269" covered="75"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="62" covered="23"/><counter type="COMPLEXITY" missed="55" covered="11"/><counter type="METHOD" missed="49" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayType.java"><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="1" cb="1"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="1" cb="1"/><line nr="136" mi="0" ci="9" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="2" cb="2"/><line nr="140" mi="0" ci="14" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="1" cb="1"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="15" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="1" cb="1"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="2" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="11" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="1" cb="1"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="1" cb="1"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="311"/><counter type="BRANCH" missed="10" covered="16"/><counter type="LINE" missed="10" covered="75"/><counter type="COMPLEXITY" missed="13" covered="30"/><counter type="METHOD" missed="4" covered="26"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ClassOrInterfaceType.java"><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="2" cb="0"/><line nr="132" mi="13" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="4" ci="0" mb="2" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="2" cb="0"/><line nr="211" mi="9" ci="0" mb="2" cb="0"/><line nr="212" mi="6" ci="0" mb="2" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="8" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="19" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="1" cb="1"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="1" cb="1"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="1" cb="1"/><line nr="257" mi="4" ci="0" mb="2" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="1" cb="1"/><line nr="263" mi="2" ci="7" mb="1" cb="1"/><line nr="264" mi="0" ci="6" mb="1" cb="1"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="7" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="187" covered="217"/><counter type="BRANCH" missed="24" covered="16"/><counter type="LINE" missed="39" covered="54"/><counter type="COMPLEXITY" missed="29" covered="21"/><counter type="METHOD" missed="13" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WildcardType.java"><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="1" cb="1"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="4" ci="0" mb="2" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="2" cb="0"/><line nr="198" mi="4" ci="0" mb="2" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="13" mb="0" cb="0"/><line nr="210" mi="8" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="8" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="2" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="4" ci="0" mb="2" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="2" cb="0"/><line nr="258" mi="4" ci="0" mb="2" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="7" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="182" covered="112"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="50" covered="30"/><counter type="COMPLEXITY" missed="33" covered="13"/><counter type="METHOD" missed="21" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnknownType.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="30"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitiveType.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="36" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="16" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="1" cb="1"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="2" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="221"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="23" covered="41"/><counter type="COMPLEXITY" missed="18" covered="19"/><counter type="METHOD" missed="15" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VoidType.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="11"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionType.java"><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="117" mi="6" ci="0" mb="2" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="9" ci="0" mb="2" cb="0"/><line nr="148" mi="6" ci="0" mb="2" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="58"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="24" covered="19"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="9" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1363" covered="1239"/><counter type="BRANCH" missed="135" covered="59"/><counter type="LINE" missed="337" covered="321"/><counter type="COMPLEXITY" missed="255" covered="138"/><counter type="METHOD" missed="174" covered="122"/><counter type="CLASS" missed="0" covered="15"/></package><package name="com/github/javaparser/printer/lexicalpreservation/changes"><class name="com/github/javaparser/printer/lexicalpreservation/changes/NoChange" sourcefilename="NoChange.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/changes/PropertyChange" sourcefilename="PropertyChange.java"><method name="getProperty" desc="()Lcom/github/javaparser/ast/observer/ObservableProperty;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOldValue" desc="()Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewValue" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/changes/ListAdditionChange" sourcefilename="ListAdditionChange.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;ILcom/github/javaparser/ast/Node;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="14" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/changes/ListRemovalChange" sourcefilename="ListRemovalChange.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;I)V" line="14"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="14" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/changes/ListReplacementChange" sourcefilename="ListReplacementChange.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;ILcom/github/javaparser/ast/Node;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="21" covered="43"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="55"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/changes/Change" sourcefilename="Change.java"><method name="evaluate" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional;Lcom/github/javaparser/ast/Node;)Z" line="14"><counter type="INSTRUCTION" missed="18" covered="43"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$evaluate$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;)Z" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ListRemovalChange.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="1" cb="1"/><line nr="25" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListAdditionChange.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="1" cb="1"/><line nr="27" mi="14" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Change.java"><line nr="14" mi="0" ci="6" mb="1" cb="4"/><line nr="16" mi="0" ci="15" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="2"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="2"/><line nr="24" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListReplacementChange.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="55"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyChange.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoChange.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="70" covered="241"/><counter type="BRANCH" missed="5" covered="20"/><counter type="LINE" missed="7" covered="59"/><counter type="COMPLEXITY" missed="6" covered="23"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/github/javaparser/resolution"><class name="com/github/javaparser/resolution/MethodUsage" sourcefilename="MethodUsage.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;)V" line="42"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedType;)V" line="61"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/List;)V" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/List;Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;)V" line="42"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeclaration" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaringType" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnType" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParamTypes" desc="()Ljava/util/List;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceParamType" desc="(ILcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/MethodUsage;" line="108"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceExceptionType" desc="(ILcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/MethodUsage;" line="120"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceReturnType" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/MethodUsage;" line="132"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNoParams" desc="()I" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParamType" desc="(I)Lcom/github/javaparser/resolution/types/ResolvedType;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeParameter" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/MethodUsage;" line="154"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParametersMap" desc="()Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedSignature" desc="()Ljava/lang/String;" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exceptionTypes" desc="()Ljava/util/List;" line="190"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="353" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="68" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/UnsolvedSymbolException" sourcefilename="UnsolvedSymbolException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V" line="61"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/MethodAmbiguityException" sourcefilename="MethodAmbiguityException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MethodAmbiguityException.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MethodUsage.java"><line nr="42" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="2" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="17" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="4" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="13" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="4" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="13" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="13" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="12" ci="0" mb="0" cb="0"/><line nr="160" mi="7" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="9" ci="0" mb="2" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="9" ci="0" mb="2" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="353" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="68" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnsolvedSymbolException.java"><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="26" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="436" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="83" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="26" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="com/github/javaparser/javadoc"><class name="com/github/javaparser/javadoc/Javadoc" sourcefilename="Javadoc.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/javadoc/description/JavadocDescription;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlockTag" desc="(Lcom/github/javaparser/javadoc/JavadocBlockTag;)Lcom/github/javaparser/javadoc/Javadoc;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlockTag" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/javadoc/Javadoc;" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlockTag" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/javadoc/Javadoc;" line="71"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addBlockTag" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/Javadoc;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toText" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toComment" desc="()Lcom/github/javaparser/ast/comments/JavadocComment;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toComment" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/comments/JavadocComment;" line="109"><counter type="INSTRUCTION" missed="5" covered="82"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Lcom/github/javaparser/javadoc/description/JavadocDescription;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockTags" desc="()Ljava/util/List;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="143"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="154"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toText$0" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/javadoc/JavadocBlockTag;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="186"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="8" covered="38"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/javadoc/JavadocBlockTag$Type" sourcefilename="JavadocBlockTag.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasName" desc="()Z" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromName" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/JavadocBlockTag$Type;" line="73"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="176"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/javadoc/JavadocBlockTag" sourcefilename="JavadocBlockTag.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/javadoc/JavadocBlockTag$Type;Ljava/lang/String;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createParamBlockTag" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/javadoc/JavadocBlockTag;" line="104"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/javadoc/JavadocBlockTag$Type;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Lcom/github/javaparser/javadoc/description/JavadocDescription;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/util/Optional;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTagName" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toText" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="137"><counter type="INSTRUCTION" missed="6" covered="32"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="149"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toText$0" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="135"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="8" covered="28"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavadocBlockTag.java"><line nr="47" mi="0" ci="56" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="16" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="15" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="2"/><line nr="138" mi="2" ci="7" mb="2" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="2" ci="5" mb="1" cb="1"/><line nr="143" mi="2" ci="6" mb="1" cb="1"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="24" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="311"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="8" covered="50"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Javadoc.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="17" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="18" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="2" ci="3" mb="1" cb="1"/><line nr="144" mi="2" ci="7" mb="2" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="1" ci="15" mb="2" cb="2"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="186"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="8" covered="38"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="125" covered="497"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="16" covered="88"/><counter type="COMPLEXITY" missed="21" covered="30"/><counter type="METHOD" missed="10" covered="20"/><counter type="CLASS" missed="0" covered="3"/></package><package name="com/github/javaparser/printer/lexicalpreservation"><class name="com/github/javaparser/printer/lexicalpreservation/TextElementMatchers$1" sourcefilename="TextElementMatchers.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="11"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/WrappingRangeIterator" sourcefilename="WrappingRangeIterator.java"><method name="&lt;init&gt;" desc="(I)V" line="7"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="15"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Integer;" line="20"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$EmptyIterator" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Reshuffled" sourcefilename="Reshuffled.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="25"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="36"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPreviousOrder" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextOrder" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdded" desc="()Z" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRemoved" desc="()Z" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="15"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Difference" sourcefilename="Difference.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Lcom/github/javaparser/ast/Node;)V" line="31"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processIndentation" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indentationBlock" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAfterLBrace" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;I)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="considerEnforcingIndentation" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;I)I" line="93"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()V" line="123"><counter type="INSTRUCTION" missed="16" covered="86"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyLeftOverOriginalElements" desc="()Z" line="154"><counter type="INSTRUCTION" missed="21" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyLeftOverDiffElements" desc="()Z" line="171"><counter type="INSTRUCTION" missed="24" covered="74"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractReshuffledDiffElements" desc="(Ljava/util/List;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="271"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineRemovedElementsToRemovedGroups" desc="()Ljava/util/Map;" line="309"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupConsecutiveRemovedElements" desc="()Ljava/util/Map;" line="327"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyRemovedDiffElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/RemovedGroup;Lcom/github/javaparser/printer/lexicalpreservation/Removed;Lcom/github/javaparser/printer/lexicalpreservation/TextElement;ZZ)V" line="347"><counter type="INSTRUCTION" missed="62" covered="189"/><counter type="BRANCH" missed="11" covered="37"/><counter type="LINE" missed="5" covered="31"/><counter type="COMPLEXITY" missed="8" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanTheLineOfLeftOverSpace" desc="(Lcom/github/javaparser/printer/lexicalpreservation/RemovedGroup;Lcom/github/javaparser/printer/lexicalpreservation/Removed;)V" line="406"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyKeptDiffElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/Kept;Lcom/github/javaparser/printer/lexicalpreservation/TextElement;ZZ)V" line="436"><counter type="INSTRUCTION" missed="51" covered="189"/><counter type="BRANCH" missed="5" covered="37"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openBraceWasOnSameLine" desc="()Z" line="489"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wasSpaceBetweenBraces" desc="()Z" line="500"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doWeHaveLeftBraceFollowedBySpace" desc="(I)Z" line="506"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rewindSpace" desc="(I)I" line="511"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAddedDiffElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/Added;)V" line="522"><counter type="INSTRUCTION" missed="0" covered="295"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrespondanceBetweenNextOrderAndPreviousOrder" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmMix;)Ljava/util/Map;" line="588"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFollowedByUnindent" desc="(Ljava/util/List;I)Z" line="613"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIndexOfCorrespondingNodeTextElement" desc="(Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;ILcom/github/javaparser/ast/Node;)Ljava/util/List;" line="619"><counter type="INSTRUCTION" missed="5" covered="171"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCorrespondingElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/Node;)Z" line="691"><counter type="INSTRUCTION" missed="4" covered="53"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlmostCorrespondingElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/Node;)Z" line="711"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustIndentation" desc="(Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;IZ)I" line="718"><counter type="INSTRUCTION" missed="16" covered="71"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAReplacement" desc="(I)Z" line="738"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReplaced" desc="(I)Z" line="742"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveType" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="746"><counter type="INSTRUCTION" missed="12" covered="24"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="762"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$groupConsecutiveRemovedElements$0" desc="(Ljava/lang/Integer;)Ljava/util/List;" line="337"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="300" covered="2052"/><counter type="BRANCH" missed="68" covered="332"/><counter type="LINE" missed="32" covered="370"/><counter type="COMPLEXITY" missed="60" covered="170"/><counter type="METHOD" missed="4" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculator" sourcefilename="DifferenceElementCalculator.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matching" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Z" line="13"><counter type="INSTRUCTION" missed="54" covered="81"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replacement" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Z" line="50"><counter type="INSTRUCTION" missed="38" covered="63"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findChildrenPositions" desc="(Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;)Ljava/util/Map;" line="79"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;)Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="considerRemoval" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Ljava/util/List;)V" line="137"><counter type="INSTRUCTION" missed="6" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="considerRemoval" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;ILjava/util/List;)I" line="151"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateImpl" desc="(Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;)Ljava/util/List;" line="171"><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cost" desc="(Ljava/util/List;)J" line="230"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIndentationElements" desc="(Ljava/util/List;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeIndentationElements$2" desc="(Lcom/github/javaparser/printer/lexicalpreservation/DifferenceElement;)Z" line="239"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cost$1" desc="(Lcom/github/javaparser/printer/lexicalpreservation/DifferenceElement;)Z" line="230"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculateImpl$0" desc="(Ljava/util/List;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="101" covered="621"/><counter type="BRANCH" missed="10" covered="102"/><counter type="LINE" missed="7" covered="132"/><counter type="COMPLEXITY" missed="11" covered="58"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TokenTextElement" sourcefilename="TokenTextElement.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/JavaToken;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenKind" desc="()I" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getToken" desc="()Lcom/github/javaparser/JavaToken;" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isToken" desc="(I)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNode" desc="(Lcom/github/javaparser/ast/Node;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpace" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSpaceOrTab" desc="()Z" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="()Z" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNewline" desc="()Z" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChildOfClass" desc="(Ljava/lang/Class;)Z" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRange" desc="()Ljava/util/Optional;" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="91"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/RemovedGroup" sourcefilename="RemovedGroup.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/util/List;)V" line="32"><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Integer;Ljava/util/List;)Lcom/github/javaparser/printer/lexicalpreservation/RemovedGroup;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processed" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProcessed" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndicesBeingRemoved" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastElementIndex" desc="()Ljava/lang/Integer;" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstElement" desc="()Lcom/github/javaparser/printer/lexicalpreservation/Removed;" line="97"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastElement" desc="()Lcom/github/javaparser/printer/lexicalpreservation/Removed;" line="106"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isACompleteLine" desc="()Z" line="123"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyWhitespace" desc="(Lcom/github/javaparser/printer/lexicalpreservation/Removed;Ljava/util/function/Function;)Z" line="133"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyWhiteSpaceForTokenFunction" desc="(Lcom/github/javaparser/JavaToken;Ljava/util/function/Function;)Z" line="152"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentation" desc="()Ljava/util/Optional;" line="174"><counter type="INSTRUCTION" missed="2" covered="71"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lcom/github/javaparser/TokenRange;)Ljava/lang/Boolean;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lcom/github/javaparser/TokenRange;)Ljava/lang/Boolean;" line="129"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lcom/github/javaparser/JavaToken;)Ljava/lang/Boolean;" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/JavaToken;)Ljava/util/Optional;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/JavaToken;)Ljava/lang/Boolean;" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/JavaToken;)Ljava/util/Optional;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="292"/><counter type="BRANCH" missed="8" covered="30"/><counter type="LINE" missed="3" covered="63"/><counter type="COMPLEXITY" missed="8" covered="30"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$SingleElementIterator" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="109"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="121"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$ComposedIterator" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="155"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="47"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$CascadingIterator" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;Lcom/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$CascadingIterator$Provider;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="75"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="60"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Added" sourcefilename="Added.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="22"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdded" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRemoved" desc="()Z" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIndent" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnindent" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTextElement" desc="()Lcom/github/javaparser/printer/lexicalpreservation/TextElement;" line="55"><counter type="INSTRUCTION" missed="8" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="67"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator" sourcefilename="LexicalDifferenceCalculator.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateListRemovalDifference" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;I)Ljava/util/List;" line="90"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateListAdditionDifference" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;)Ljava/util/List;" line="98"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateListReplacementDifference" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;)Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatePropertyChange" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="114"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelForNode" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="127"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelForNode" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="133"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelForNode" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/Node;Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/changes/Change;)V" line="137"><counter type="INSTRUCTION" missed="125" covered="316"/><counter type="BRANCH" missed="15" covered="53"/><counter type="LINE" missed="21" covered="66"/><counter type="COMPLEXITY" missed="10" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toToken" desc="(Lcom/github/javaparser/ast/Modifier;)I" line="255"><counter type="INSTRUCTION" missed="11" covered="14"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterPropertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="279"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterPropertyChange" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="284"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterListRemoval" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;I)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="291"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterListAddition" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="299"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterListAddition" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;ILcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="307"><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterListRemoval" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;I)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="318"><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculatedSyntaxModelAfterListReplacement" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="329"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculatedSyntaxModelForNode$1" desc="(Lcom/github/javaparser/ast/Node;Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/changes/Change;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculatedSyntaxModelForNode$0" desc="(Lcom/github/javaparser/ast/Node;Ljava/util/List;Lcom/github/javaparser/printer/lexicalpreservation/changes/Change;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="168" covered="616"/><counter type="BRANCH" missed="21" covered="60"/><counter type="LINE" missed="27" covered="125"/><counter type="COMPLEXITY" missed="16" covered="45"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Removed" sourcefilename="Removed.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="22"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChild" desc="()Lcom/github/javaparser/ast/Node;" line="41"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTokenType" desc="()I" line="50"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdded" desc="()Z" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isToken" desc="()Z" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChild" desc="()Z" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveType" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpace" desc="()Z" line="77"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRemoved" desc="()Z" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="73"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Difference$MatchClassification" sourcefilename="Difference.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="681"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="686"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="677"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory$1" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TokenTextElement;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;I)V" line="162"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter$1" sourcefilename="LexicalPreservingPrinter.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter$2" sourcefilename="LexicalPreservingPrinter.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="266"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/github/javaparser/ast/Node;)V" line="269"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel" sourcefilename="LexicalDifferenceCalculator.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(I)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="31"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sub" desc="(II)Lcom/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CalculatedSyntaxModel;" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIndentationElements" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeIndentationElements$0" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory" sourcefilename="TextElementIteratorsFactory.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseIterator" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;I)Ljava/util/Iterator;" line="160"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseIterator" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;)Ljava/util/Iterator;" line="178"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partialReverseIterator" desc="(Lcom/github/javaparser/printer/lexicalpreservation/NodeText;I)Ljava/util/Iterator;" line="182"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="55"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElement" sourcefilename="TextElement.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCommentToken" desc="()Z" line="37"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpaceOrComment" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChild" desc="()Z" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchByRange" desc="()Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matchByRange$0" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="81"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="39"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/PhantomNodeLogic$1" sourcefilename="PhantomNodeLogic.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator$CsmChild" sourcefilename="LexicalDifferenceCalculator.java"><method name="getChild" desc="()Lcom/github/javaparser/ast/Node;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="75"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="32"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/PhantomNodeLogic" sourcefilename="PhantomNodeLogic.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPhantomNode" desc="(Lcom/github/javaparser/ast/Node;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inPhantomNode" desc="(Lcom/github/javaparser/ast/Node;I)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="84"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter$Observer" sourcefilename="LexicalPreservingPrinter.java"><method name="concretePropertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="142"><counter type="INSTRUCTION" missed="20" covered="138"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchingTokenTextElements" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;)Ljava/util/List;" line="193"><counter type="INSTRUCTION" missed="15" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualRange" desc="(Ljava/util/Optional;Ljava/util/Optional;)Z" line="214"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concreteListChange" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/observer/AstObserver$ListChangeType;ILcom/github/javaparser/ast/Node;)V" line="223"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concreteListReplacement" desc="(Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMatchingTokenTextElements$3" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/printer/lexicalpreservation/TokenTextElement;)Z" line="203"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getMatchingTokenTextElements$2" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/printer/lexicalpreservation/TokenTextElement;)Z" line="197"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMatchingTokenTextElements$1" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Lcom/github/javaparser/printer/lexicalpreservation/TokenTextElement;" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMatchingTokenTextElements$0" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="247"/><counter type="BRANCH" missed="14" covered="26"/><counter type="LINE" missed="13" covered="51"/><counter type="COMPLEXITY" missed="14" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/RemovedGroup$1" sourcefilename="RemovedGroup.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/lexicalpreservation/RemovedGroup;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="217"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/github/javaparser/printer/lexicalpreservation/Removed;" line="222"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementMatcher" sourcefilename="TextElementMatcher.java"><method name="and" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;)Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$and$0" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/NodeText" sourcefilename="NodeText.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addElement" desc="(ILcom/github/javaparser/printer/lexicalpreservation/TextElement;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lcom/github/javaparser/ast/Node;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(ILcom/github/javaparser/ast/Node;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToken" desc="(ILjava/lang/String;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToken" desc="(IILjava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;)I" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;I)I" line="104"><counter type="INSTRUCTION" missed="22" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToFindElement" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;I)I" line="115"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findChild" desc="(Lcom/github/javaparser/ast/Node;)I" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findChild" desc="(Lcom/github/javaparser/ast/Node;I)I" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToFindChild" desc="(Lcom/github/javaparser/ast/Node;)I" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToFindChild" desc="(Lcom/github/javaparser/ast/Node;I)I" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;)V" line="145"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;Z)V" line="149"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeElement" desc="(I)V" line="173"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="()Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfElements" desc="()I" line="202"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTextElement" desc="(I)Lcom/github/javaparser/printer/lexicalpreservation/TextElement;" line="207"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Ljava/util/List;" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endWithSpace" desc="()Z" line="221"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLastElement" desc="()V" line="233"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expand$0" desc="(Ljava/lang/StringBuffer;Lcom/github/javaparser/printer/lexicalpreservation/TextElement;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="104" covered="212"/><counter type="BRANCH" missed="14" covered="10"/><counter type="LINE" missed="21" covered="49"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/ChildTextElement" sourcefilename="ChildTextElement.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChild" desc="()Lcom/github/javaparser/ast/Node;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isToken" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNode" desc="(Lcom/github/javaparser/ast/Node;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeTextForWrappedNode" desc="()Lcom/github/javaparser/printer/lexicalpreservation/NodeText;" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhiteSpace" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSpaceOrTab" desc="()Z" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNewline" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="()Z" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChildOfClass" desc="(Ljava/lang/Class;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="()Ljava/util/Optional;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="42"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter" sourcefilename="LexicalPreservingPrinter.java"><method name="setup" desc="(Lcom/github/javaparser/ParseStart;Lcom/github/javaparser/Provider;)Lcom/github/javaparser/utils/Pair;" line="86"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setup" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="108"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="130"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createObserver" desc="()Lcom/github/javaparser/ast/observer/AstObserver;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="storeInitialText" desc="(Lcom/github/javaparser/ast/Node;)V" line="248"><counter type="INSTRUCTION" missed="12" covered="56"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNodeForToken" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/Range;)Lcom/github/javaparser/ast/Node;" line="277"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="storeInitialTextForOneNode" desc="(Lcom/github/javaparser/ast/Node;Ljava/util/List;)V" line="294"><counter type="INSTRUCTION" missed="12" covered="84"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokensPreceeding" desc="(Lcom/github/javaparser/ast/Node;)Ljava/util/Iterator;" line="318"><counter type="INSTRUCTION" missed="22" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="349"><counter type="INSTRUCTION" missed="7" covered="11"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lcom/github/javaparser/ast/Node;Ljava/io/Writer;)V" line="362"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrintingTextNode" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;)V" line="374"><counter type="INSTRUCTION" missed="22" covered="120"/><counter type="BRANCH" missed="4" covered="15"/><counter type="LINE" missed="7" covered="29"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpret" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;)Lcom/github/javaparser/printer/lexicalpreservation/NodeText;" line="431"><counter type="INSTRUCTION" missed="7" covered="128"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrCreateNodeText" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/NodeText;" line="489"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIndentation" desc="(Lcom/github/javaparser/ast/Node;)Ljava/util/List;" line="499"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReturningOptionalNodeList" desc="(Ljava/lang/reflect/Method;)Z" line="524"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNodeListName" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/observer/ObservableProperty;" line="536"><counter type="INSTRUCTION" missed="70" covered="69"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$interpret$7" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Lcom/github/javaparser/ast/Node;)V" line="475"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$interpret$6" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Lcom/github/javaparser/ast/type/Type;)V" line="476"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$interpret$5" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/lexicalpreservation/NodeText;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="451"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tokensPreceeding$4" desc="(Lcom/github/javaparser/ast/Node;)Ljava/util/Iterator;" line="338"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$storeInitialTextForOneNode$3" desc="(Lcom/github/javaparser/utils/Pair;)Lcom/github/javaparser/printer/lexicalpreservation/TextElement;" line="310"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$storeInitialTextForOneNode$2" desc="(Lcom/github/javaparser/utils/Pair;)Lcom/github/javaparser/Position;" line="309"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$storeInitialText$1" desc="(Lcom/github/javaparser/JavaToken;)Ljava/lang/RuntimeException;" line="254"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setup$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/TokenRange;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="209" covered="751"/><counter type="BRANCH" missed="21" covered="100"/><counter type="LINE" missed="38" covered="167"/><counter type="COMPLEXITY" missed="20" covered="69"/><counter type="METHOD" missed="3" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/DifferenceElement" sourcefilename="DifferenceElement.java"><method name="added" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/lexicalpreservation/DifferenceElement;" line="7"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removed" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/lexicalpreservation/DifferenceElement;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kept" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/lexicalpreservation/DifferenceElement;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/NodeText$Option" sourcefilename="NodeText.java"><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/printer/lexicalpreservation/TextElementMatchers" sourcefilename="TextElementMatchers.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byTokenType" desc="(I)Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byNode" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/printer/lexicalpreservation/TextElementMatcher;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$byTokenType$0" desc="(ILcom/github/javaparser/printer/lexicalpreservation/TextElement;)Z" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/lexicalpreservation/Kept" sourcefilename="Kept.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="24"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenType" desc="()I" line="43"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdded" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndent" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnindent" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isToken" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChild" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveType" desc="()Z" line="65"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpace" desc="()Z" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpaceOrComment" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNewLine" desc="()Z" line="92"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRemoved" desc="()Z" line="102"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="102"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="6" covered="30"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TextElementMatchers.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="16"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TextElementMatcher.java"><line nr="36" mi="0" ci="16" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LexicalPreservingPrinter.java"><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="2" cb="6"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="1" cb="3"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="1" cb="1"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="2"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="21" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="1" cb="1"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="16" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="1" cb="1"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="9" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="1" cb="1"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="4" cb="0"/><line nr="215" mi="7" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="1" cb="1"/><line nr="228" mi="0" ci="9" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="8" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="13" mb="0" cb="2"/><line nr="254" mi="12" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="1" cb="1"/><line nr="257" mi="12" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="2"/><line nr="260" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="2"/><line nr="281" mi="0" ci="11" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="2"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="2"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="11" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="0" ci="4" mb="1" cb="1"/><line nr="301" mi="12" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="14" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="2"/><line nr="307" mi="0" ci="14" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="17" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="2"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="2"/><line nr="327" mi="0" ci="5" mb="1" cb="1"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="12" ci="0" mb="0" cb="0"/><line nr="331" mi="3" ci="0" mb="0" cb="0"/><line nr="332" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="0" ci="7" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="2"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="6" mb="4" cb="5"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="5" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="5" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="2"/><line nr="407" mi="0" ci="15" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="2"/><line nr="411" mi="0" ci="15" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="2"/><line nr="415" mi="0" ci="13" mb="0" cb="0"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="2"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="7" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="7" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="11" mb="0" cb="2"/><line nr="437" mi="0" ci="9" mb="0" cb="6"/><line nr="438" mi="0" ci="7" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="2"/><line nr="442" mi="0" ci="6" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="2"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="2"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="2"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="12" mb="0" cb="0"/><line nr="456" mi="0" ci="4" mb="0" cb="2"/><line nr="457" mi="0" ci="8" mb="0" cb="2"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="1" cb="1"/><line nr="461" mi="0" ci="8" mb="0" cb="2"/><line nr="462" mi="0" ci="3" mb="0" cb="2"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="0" cb="0"/><line nr="469" mi="0" ci="1" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="0" ci="6" mb="0" cb="0"/><line nr="475" mi="0" ci="8" mb="0" cb="0"/><line nr="476" mi="0" ci="7" mb="0" cb="0"/><line nr="477" mi="0" ci="7" mb="0" cb="2"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="2"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="4" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="2"/><line nr="502" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="2"/><line nr="504" mi="0" ci="2" mb="0" cb="2"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><line nr="510" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="8" mb="0" cb="2"/><line nr="512" mi="0" ci="6" mb="0" cb="2"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="7" mb="0" cb="2"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="1" cb="1"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="18" mb="1" cb="1"/><line nr="538" mi="0" ci="10" mb="0" cb="4"/><line nr="540" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="1" cb="1"/><line nr="542" mi="14" ci="0" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="2"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="1" cb="1"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="5" ci="0" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="0" ci="6" mb="1" cb="3"/><line nr="557" mi="7" ci="0" mb="0" cb="0"/><line nr="558" mi="7" ci="0" mb="4" cb="0"/><line nr="559" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="2" cb="0"/><line nr="561" mi="5" ci="0" mb="0" cb="0"/><line nr="563" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="1" ci="0" mb="0" cb="0"/><line nr="566" mi="5" ci="0" mb="0" cb="0"/><line nr="567" mi="1" ci="0" mb="0" cb="0"/><line nr="570" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="271" covered="1018"/><counter type="BRANCH" missed="35" covered="128"/><counter type="LINE" missed="51" covered="221"/><counter type="COMPLEXITY" missed="34" covered="88"/><counter type="METHOD" missed="5" covered="32"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ChildTextElement.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="9" ci="0" mb="4" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="42"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenTextElement.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="1" cb="3"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="91"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DifferenceElement.java"><line nr="7" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Kept.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="12" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="3" mb="1" cb="1"/><line nr="25" mi="2" ci="7" mb="2" cb="2"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="13" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="102"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="6" covered="30"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DifferenceElementCalculator.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="2"/><line nr="14" mi="0" ci="3" mb="0" cb="2"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="2"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="2"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="1" cb="1"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="18" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="2"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="2"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="18" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="18" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="8"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="18" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="7" mb="1" cb="1"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="18" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="4"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="10" mb="0" cb="4"/><line nr="131" mi="0" ci="16" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="13" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="4"/><line nr="155" mi="0" ci="5" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="4"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="1" cb="3"/><line nr="184" mi="0" ci="11" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="1" cb="3"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="193" mi="0" ci="15" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="2"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="215" mi="0" ci="8" mb="0" cb="4"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="0" cb="4"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="13" mb="0" cb="2"/><line nr="239" mi="0" ci="16" mb="0" cb="4"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="621"/><counter type="BRANCH" missed="10" covered="102"/><counter type="LINE" missed="7" covered="132"/><counter type="COMPLEXITY" missed="11" covered="58"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextElement.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="4" ci="0" mb="2" cb="0"/><line nr="39" mi="5" ci="0" mb="2" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="1" cb="3"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="2" cb="2"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="39"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LexicalDifferenceCalculator.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="15" mb="0" cb="4"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="14" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="3" mb="1" cb="1"/><line nr="76" mi="2" ci="7" mb="2" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="15" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="4"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="1" cb="1"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="1" cb="1"/><line nr="168" mi="15" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="14" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="2"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="2" cb="0"/><line nr="201" mi="2" ci="0" mb="2" cb="0"/><line nr="202" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="2" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="8" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="7" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="2"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="13" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="1" cb="3"/><line nr="240" mi="0" ci="14" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="15" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="1" cb="1"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="16" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="3" cb="4"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="10" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="11" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="10" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="1" cb="1"/><line nr="310" mi="14" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="8" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="1" cb="1"/><line nr="321" mi="14" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="11" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="698"/><counter type="BRANCH" missed="24" covered="67"/><counter type="LINE" missed="30" covered="143"/><counter type="COMPLEXITY" missed="22" covered="56"/><counter type="METHOD" missed="3" covered="27"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Removed.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="12" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="3" mb="1" cb="1"/><line nr="23" mi="2" ci="7" mb="2" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="13" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="73"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeText.java"><line nr="40" mi="16" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="2" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="5" ci="0" mb="2" cb="0"/><line nr="155" mi="7" ci="0" mb="2" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="11" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="12" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="1" cb="1"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="1" cb="1"/><line nr="226" mi="0" ci="9" mb="0" cb="2"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="1" cb="1"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="138" covered="212"/><counter type="BRANCH" missed="14" covered="10"/><counter type="LINE" missed="25" covered="49"/><counter type="COMPLEXITY" missed="13" covered="27"/><counter type="METHOD" missed="4" covered="24"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="RemovedGroup.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="2" cb="2"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="13" mb="0" cb="0"/><line nr="128" mi="0" ci="13" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="2"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="1" cb="1"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="1" cb="1"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="4"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="6" mb="1" cb="1"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="18" mb="1" cb="3"/><line nr="222" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="332"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PhantomNodeLogic.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="14" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="11" mb="1" cb="1"/><counter type="INSTRUCTION" missed="3" covered="92"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="WrappingRangeIterator.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TextElementIteratorsFactory.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="18" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="196"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="17" covered="51"/><counter type="COMPLEXITY" missed="11" covered="23"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Difference.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="1" cb="1"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="4"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="6"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="4"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="4"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="6"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="11" mb="0" cb="4"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="4"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="1" cb="1"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="16" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="12" mb="0" cb="4"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="4"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="1" cb="1"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="21" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="12" mb="0" cb="4"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="2" cb="4"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="17" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="1" cb="1"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="2"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="11" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="1" cb="1"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="2"/><line nr="231" mi="0" ci="5" mb="0" cb="2"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="13" mb="0" cb="4"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="2"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="2"/><line nr="264" mi="0" ci="8" mb="0" cb="2"/><line nr="266" mi="0" ci="5" mb="0" cb="2"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="2"/><line nr="269" mi="0" ci="14" mb="0" cb="2"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="2"/><line nr="277" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="10" mb="0" cb="2"/><line nr="289" mi="0" ci="8" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="11" mb="0" cb="2"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="2"/><line nr="318" mi="0" ci="10" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="9" mb="0" cb="2"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="2"/><line nr="333" mi="0" ci="2" mb="0" cb="2"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="11" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="4"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="2"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="12" ci="3" mb="5" cb="1"/><line nr="354" mi="6" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="6" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="18" mb="0" cb="4"/><line nr="362" mi="0" ci="2" mb="0" cb="2"/><line nr="363" mi="0" ci="8" mb="0" cb="0"/><line nr="366" mi="0" ci="9" mb="0" cb="4"/><line nr="367" mi="0" ci="14" mb="0" cb="2"/><line nr="368" mi="0" ci="4" mb="1" cb="1"/><line nr="370" mi="0" ci="17" mb="1" cb="3"/><line nr="371" mi="0" ci="11" mb="0" cb="0"/><line nr="376" mi="0" ci="6" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="4"/><line nr="379" mi="0" ci="5" mb="0" cb="2"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="4"/><line nr="383" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="2"/><line nr="385" mi="0" ci="4" mb="1" cb="1"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="389" mi="17" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="1" cb="1"/><line nr="392" mi="0" ci="7" mb="0" cb="0"/><line nr="393" mi="3" ci="0" mb="2" cb="0"/><line nr="394" mi="7" ci="0" mb="0" cb="0"/><line nr="396" mi="17" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="2"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="4" mb="0" cb="2"/><line nr="412" mi="0" ci="4" mb="0" cb="2"/><line nr="413" mi="0" ci="2" mb="0" cb="2"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="8" mb="0" cb="4"/><line nr="418" mi="0" ci="10" mb="0" cb="2"/><line nr="419" mi="0" ci="8" mb="0" cb="2"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="422" mi="0" ci="14" mb="1" cb="3"/><line nr="424" mi="0" ci="7" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="2"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="438" mi="0" ci="5" mb="0" cb="4"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="7" mb="0" cb="0"/><line nr="441" mi="0" ci="5" mb="1" cb="3"/><line nr="442" mi="0" ci="3" mb="0" cb="2"/><line nr="443" mi="0" ci="7" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="1" cb="1"/><line nr="446" mi="0" ci="6" mb="0" cb="0"/><line nr="447" mi="0" ci="7" mb="0" cb="0"/><line nr="449" mi="17" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="4"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="5" mb="0" cb="2"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="7" mb="0" cb="0"/><line nr="458" mi="0" ci="6" mb="0" cb="4"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="460" mi="0" ci="7" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="2"/><line nr="462" mi="0" ci="7" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="1" cb="1"/><line nr="464" mi="0" ci="7" mb="0" cb="0"/><line nr="466" mi="17" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="2"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="7" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="1" cb="1"/><line nr="477" mi="0" ci="6" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="2"/><line nr="479" mi="0" ci="21" mb="1" cb="5"/><line nr="480" mi="0" ci="10" mb="0" cb="0"/><line nr="484" mi="17" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="8" mb="1" cb="3"/><line nr="491" mi="0" ci="7" mb="0" cb="2"/><line nr="492" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="14" ci="0" mb="2" cb="0"/><line nr="501" mi="12" ci="0" mb="4" cb="0"/><line nr="502" mi="7" ci="0" mb="2" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="507" mi="9" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="8" ci="0" mb="2" cb="0"/><line nr="515" mi="6" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="2"/><line nr="523" mi="0" ci="7" mb="0" cb="2"/><line nr="524" mi="0" ci="8" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="2"/><line nr="531" mi="0" ci="11" mb="1" cb="3"/><line nr="532" mi="0" ci="9" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="13" mb="0" cb="4"/><line nr="542" mi="0" ci="21" mb="0" cb="2"/><line nr="543" mi="0" ci="14" mb="1" cb="3"/><line nr="544" mi="0" ci="7" mb="0" cb="0"/><line nr="546" mi="0" ci="11" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="0"/><line nr="549" mi="0" ci="12" mb="0" cb="4"/><line nr="550" mi="0" ci="3" mb="0" cb="2"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="14" mb="0" cb="0"/><line nr="555" mi="0" ci="14" mb="1" cb="3"/><line nr="556" mi="0" ci="8" mb="0" cb="0"/><line nr="557" mi="0" ci="7" mb="0" cb="0"/><line nr="559" mi="0" ci="21" mb="0" cb="2"/><line nr="560" mi="0" ci="11" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="567" mi="0" ci="3" mb="0" cb="2"/><line nr="568" mi="0" ci="11" mb="0" cb="2"/><line nr="569" mi="0" ci="11" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="2" mb="0" cb="2"/><line nr="575" mi="0" ci="6" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="2"/><line nr="580" mi="0" ci="7" mb="0" cb="0"/><line nr="581" mi="0" ci="11" mb="0" cb="0"/><line nr="584" mi="0" ci="6" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="4" mb="0" cb="0"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="6" mb="0" cb="0"/><line nr="594" mi="0" ci="8" mb="0" cb="2"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="5" mb="0" cb="0"/><line nr="598" mi="0" ci="10" mb="0" cb="4"/><line nr="599" mi="0" ci="3" mb="0" cb="0"/><line nr="600" mi="0" ci="6" mb="0" cb="0"/><line nr="601" mi="0" ci="7" mb="0" cb="2"/><line nr="602" mi="0" ci="2" mb="0" cb="2"/><line nr="603" mi="0" ci="2" mb="0" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="0"/><line nr="609" mi="0" ci="2" mb="0" cb="0"/><line nr="613" mi="0" ci="11" mb="1" cb="1"/><line nr="614" mi="0" ci="8" mb="0" cb="2"/><line nr="615" mi="0" ci="8" mb="0" cb="2"/><line nr="619" mi="0" ci="4" mb="0" cb="0"/><line nr="620" mi="0" ci="6" mb="0" cb="2"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="4" mb="0" cb="0"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="9" mb="0" cb="2"/><line nr="628" mi="0" ci="5" mb="0" cb="2"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="6" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="0" cb="2"/><line nr="634" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="5" mb="0" cb="4"/><line nr="636" mi="0" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="9" mb="0" cb="0"/><line nr="641" mi="0" ci="2" mb="0" cb="0"/><line nr="642" mi="0" ci="11" mb="1" cb="3"/><line nr="643" mi="0" ci="6" mb="0" cb="0"/><line nr="645" mi="0" ci="9" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="4"/><line nr="649" mi="0" ci="7" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="2"/><line nr="651" mi="0" ci="7" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="2"/><line nr="653" mi="0" ci="7" mb="0" cb="0"/><line nr="655" mi="0" ci="6" mb="0" cb="0"/><line nr="657" mi="0" ci="7" mb="0" cb="2"/><line nr="658" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="3" mb="1" cb="1"/><line nr="668" mi="0" ci="9" mb="0" cb="0"/><line nr="670" mi="5" ci="0" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="0"/><line nr="677" mi="0" ci="24" mb="0" cb="0"/><line nr="678" mi="0" ci="35" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="0" cb="0"/><line nr="691" mi="0" ci="3" mb="0" cb="2"/><line nr="692" mi="0" ci="3" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="2"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="0" ci="16" mb="1" cb="3"/><line nr="697" mi="0" ci="4" mb="1" cb="1"/><line nr="698" mi="0" ci="3" mb="0" cb="0"/><line nr="699" mi="0" ci="3" mb="0" cb="2"/><line nr="700" mi="0" ci="3" mb="0" cb="0"/><line nr="701" mi="0" ci="9" mb="0" cb="2"/><line nr="703" mi="0" ci="1" mb="0" cb="0"/><line nr="704" mi="4" ci="0" mb="0" cb="0"/><line nr="707" mi="0" ci="2" mb="0" cb="0"/><line nr="711" mi="0" ci="6" mb="1" cb="1"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="714" mi="0" ci="14" mb="1" cb="5"/><line nr="718" mi="0" ci="11" mb="0" cb="0"/><line nr="719" mi="0" ci="13" mb="1" cb="3"/><line nr="720" mi="0" ci="12" mb="0" cb="0"/><line nr="721" mi="0" ci="2" mb="1" cb="1"/><line nr="722" mi="10" ci="0" mb="0" cb="0"/><line nr="724" mi="0" ci="10" mb="0" cb="2"/><line nr="725" mi="0" ci="12" mb="2" cb="2"/><line nr="726" mi="2" ci="0" mb="0" cb="0"/><line nr="728" mi="0" ci="6" mb="0" cb="0"/><line nr="730" mi="0" ci="1" mb="0" cb="0"/><line nr="731" mi="0" ci="2" mb="1" cb="1"/><line nr="732" mi="4" ci="0" mb="0" cb="0"/><line nr="734" mi="0" ci="2" mb="0" cb="0"/><line nr="738" mi="0" ci="20" mb="2" cb="4"/><line nr="742" mi="0" ci="25" mb="2" cb="4"/><line nr="746" mi="0" ci="3" mb="1" cb="1"/><line nr="747" mi="0" ci="3" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="10" ci="15" mb="10" cb="4"/><line nr="757" mi="2" ci="0" mb="0" cb="0"/><line nr="762" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="300" covered="2122"/><counter type="BRANCH" missed="68" covered="332"/><counter type="LINE" missed="32" covered="376"/><counter type="COMPLEXITY" missed="60" covered="173"/><counter type="METHOD" missed="4" covered="29"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Added.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="12" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="3" mb="1" cb="1"/><line nr="23" mi="2" ci="7" mb="2" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="1" cb="1"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="67"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Reshuffled.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="17" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="2" cb="0"/><line nr="26" mi="9" ci="0" mb="4" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="2" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="15"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1376" covered="5796"/><counter type="BRANCH" missed="210" covered="748"/><counter type="LINE" missed="217" covered="1184"/><counter type="COMPLEXITY" missed="224" covered="554"/><counter type="METHOD" missed="55" covered="238"/><counter type="CLASS" missed="1" covered="33"/></package><package name="com/github/javaparser"><class name="com/github/javaparser/StringProvider" sourcefilename="StringProvider.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="41"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParserTokenManager" sourcefilename="GeneratedJavaParserTokenManager.java"><method name="reset" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokens" desc="()Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentsCollection" desc="()Lcom/github/javaparser/ast/comments/CommentsCollection;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHomeToken" desc="()Lcom/github/javaparser/JavaToken;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStoreTokens" desc="(Z)V" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CommonTokenAction" desc="(Lcom/github/javaparser/Token;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDebugStream" desc="(Ljava/io/PrintStream;)V" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStopStringLiteralDfa_0" desc="(IJJJ)I" line="112"><counter type="INSTRUCTION" missed="106" covered="297"/><counter type="BRANCH" missed="45" covered="59"/><counter type="LINE" missed="25" covered="59"/><counter type="COMPLEXITY" missed="35" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfa_0" desc="(IJJJ)I" line="242"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStopAtPos" desc="(II)I" line="246"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_0" desc="()I" line="251"><counter type="INSTRUCTION" missed="5" covered="317"/><counter type="BRANCH" missed="1" covered="47"/><counter type="LINE" missed="1" covered="63"/><counter type="COMPLEXITY" missed="1" covered="47"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_0" desc="(JJJ)I" line="367"><counter type="INSTRUCTION" missed="0" covered="488"/><counter type="BRANCH" missed="2" covered="78"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="2" covered="53"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa2_0" desc="(JJJJJJ)I" line="497"><counter type="INSTRUCTION" missed="10" covered="289"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="3" covered="41"/><counter type="COMPLEXITY" missed="3" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa3_0" desc="(JJJJJJ)I" line="576"><counter type="INSTRUCTION" missed="6" covered="352"/><counter type="BRANCH" missed="4" covered="48"/><counter type="LINE" missed="1" covered="53"/><counter type="COMPLEXITY" missed="4" covered="32"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa4_0" desc="(JJJJJJ)I" line="662"><counter type="INSTRUCTION" missed="10" covered="278"/><counter type="BRANCH" missed="2" covered="39"/><counter type="LINE" missed="3" covered="45"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa5_0" desc="(JJJJ)I" line="735"><counter type="INSTRUCTION" missed="10" covered="234"/><counter type="BRANCH" missed="2" covered="35"/><counter type="LINE" missed="3" covered="37"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa6_0" desc="(JJJJ)I" line="798"><counter type="INSTRUCTION" missed="10" covered="177"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa7_0" desc="(JJJJ)I" line="849"><counter type="INSTRUCTION" missed="10" covered="137"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa8_0" desc="(JJJJ)I" line="890"><counter type="INSTRUCTION" missed="17" covered="94"/><counter type="BRANCH" missed="3" covered="12"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa9_0" desc="(JJJJ)I" line="923"><counter type="INSTRUCTION" missed="17" covered="73"/><counter type="BRANCH" missed="3" covered="10"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa10_0" desc="(JJJJ)I" line="952"><counter type="INSTRUCTION" missed="17" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa11_0" desc="(JJ)I" line="969"><counter type="INSTRUCTION" missed="24" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfaWithStates_0" desc="(III)I" line="989"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveNfa_0" desc="(II)I" line="1276"><counter type="INSTRUCTION" missed="679" covered="2260"/><counter type="BRANCH" missed="235" covered="527"/><counter type="LINE" missed="145" covered="461"/><counter type="COMPLEXITY" missed="180" covered="302"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_2" desc="()I" line="2304"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_2" desc="(J)I" line="2313"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_1" desc="()I" line="2329"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_1" desc="(J)I" line="2338"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjFillToken" desc="()Lcom/github/javaparser/Token;" line="2390"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_0" desc="(IIIJJ)Z" line="2421"><counter type="INSTRUCTION" missed="61" covered="15"/><counter type="BRANCH" missed="16" covered="3"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_1" desc="(IIIJJ)Z" line="2441"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_2" desc="(IIIJJ)Z" line="2453"><counter type="INSTRUCTION" missed="592" covered="22"/><counter type="BRANCH" missed="149" covered="4"/><counter type="LINE" missed="51" covered="3"/><counter type="COMPLEXITY" missed="100" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_3" desc="(IIIJJ)Z" line="2563"><counter type="INSTRUCTION" missed="580" covered="34"/><counter type="BRANCH" missed="147" covered="6"/><counter type="LINE" missed="50" covered="4"/><counter type="COMPLEXITY" missed="99" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lcom/github/javaparser/Token;" line="2682"><counter type="INSTRUCTION" missed="16" covered="304"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="4" covered="72"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SkipLexicalActions" desc="(Lcom/github/javaparser/Token;)V" line="2805"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MoreLexicalActions" desc="()V" line="2813"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TokenLexicalActions" desc="(Lcom/github/javaparser/Token;)V" line="2827"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAdd" desc="(I)V" line="2849"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjAddStates" desc="(II)V" line="2858"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddTwoStates" desc="(II)V" line="2863"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddStates" desc="(II)V" line="2870"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/SimpleCharStream;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/SimpleCharStream;I)V" line="47"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lcom/github/javaparser/SimpleCharStream;)V" line="2895"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInitRounds" desc="()V" line="2906"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Lcom/github/javaparser/SimpleCharStream;I)V" line="2915"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SwitchTo" desc="(I)V" line="2922"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="995"><counter type="INSTRUCTION" missed="0" covered="3620"/><counter type="LINE" missed="0" covered="101"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2268" covered="9555"/><counter type="BRANCH" missed="638" covered="1028"/><counter type="LINE" missed="333" covered="1240"/><counter type="COMPLEXITY" missed="473" covered="647"/><counter type="METHOD" missed="4" covered="44"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/SimpleCharStream" sourcefilename="SimpleCharStream.java"><method name="setTabSize" desc="(I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTabSize" desc="()I" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ExpandBuff" desc="(Z)V" line="63"><counter type="INSTRUCTION" missed="102" covered="90"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FillBuff" desc="()V" line="112"><counter type="INSTRUCTION" missed="15" covered="99"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BeginToken" desc="()C" line="157"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UpdateLineColumn" desc="(C)V" line="166"><counter type="INSTRUCTION" missed="9" covered="80"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="207"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()I" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine" desc="()I" line="243"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndColumn" desc="()I" line="248"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndLine" desc="()I" line="253"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginColumn" desc="()I" line="258"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginLine" desc="()I" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backup" desc="(I)V" line="269"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;III)V" line="38"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;II)V" line="292"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;)V" line="298"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lcom/github/javaparser/Provider;III)V" line="305"><counter type="INSTRUCTION" missed="18" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Lcom/github/javaparser/Provider;II)V" line="325"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Lcom/github/javaparser/Provider;)V" line="331"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GetImage" desc="()Ljava/lang/String;" line="338"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GetSuffix" desc="(I)[C" line="348"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Done" desc="()V" line="365"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustBeginLineColumn" desc="(II)V" line="375"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrackLineColumn" desc="()Z" line="416"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTrackLineColumn" desc="(Z)V" line="417"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="349" covered="601"/><counter type="BRANCH" missed="19" covered="37"/><counter type="LINE" missed="55" covered="118"/><counter type="COMPLEXITY" missed="21" covered="34"/><counter type="METHOD" missed="9" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/UnicodeEscapeProcessingProvider" sourcefilename="UnicodeEscapeProcessingProvider.java"><method name="hexval" desc="(C)I" line="11"><counter type="INSTRUCTION" missed="22" covered="16"/><counter type="BRANCH" missed="10" covered="7"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expandBuffer" desc="(Z)V" line="81"><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillBuffer" desc="()V" line="122"><counter type="INSTRUCTION" missed="6" covered="64"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readByte" desc="()C" line="144"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustBufferSize" desc="()V" line="151"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateLineColumn" desc="(C)V" line="166"><counter type="INSTRUCTION" missed="58" covered="31"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="13" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="203"><counter type="INSTRUCTION" missed="71" covered="144"/><counter type="BRANCH" missed="13" covered="11"/><counter type="LINE" missed="19" covered="24"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backup" desc="(I)V" line="286"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;III)V" line="59"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;)V" line="310"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="315"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="331"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="397" covered="377"/><counter type="BRANCH" missed="43" covered="32"/><counter type="LINE" missed="83" covered="88"/><counter type="COMPLEXITY" missed="37" covered="21"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/Problem" sourcefilename="Problem.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/javaparser/TokenRange;Ljava/lang/Throwable;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerboseMessage" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Ljava/util/Optional;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="()Ljava/util/Optional;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/util/Optional;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Lcom/github/javaparser/Problem;Lcom/github/javaparser/Problem;)I" line="101"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Lcom/github/javaparser/TokenRange;)Ljava/util/Optional;" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(Lcom/github/javaparser/Range;)Lcom/github/javaparser/Position;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Lcom/github/javaparser/TokenRange;)Ljava/util/Optional;" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Lcom/github/javaparser/Range;)Lcom/github/javaparser/Position;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerboseMessage$1" desc="(Lcom/github/javaparser/TokenRange;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerboseMessage$0" desc="(Lcom/github/javaparser/Range;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="159"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/Token" sourcefilename="Token.java"><method name="getValue" desc="()Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newToken" desc="(ILjava/lang/String;)Lcom/github/javaparser/Token;" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newToken" desc="(I)Lcom/github/javaparser/Token;" line="148"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavaParserBuild" sourcefilename="JavaParserBuild.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ParseResult" sourcefilename="ParseResult.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/util/List;Ljava/util/List;Lcom/github/javaparser/ast/comments/CommentsCollection;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuccessful" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifSuccessful" desc="(Ljava/util/function/Consumer;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProblems" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProblem" desc="(I)Lcom/github/javaparser/Problem;" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokens" desc="()Ljava/util/Optional;" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentsCollection" desc="()Ljava/util/Optional;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/util/Optional;" line="107"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/TokenBase" sourcefilename="TokenBase.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavaToken$Category" sourcefilename="JavaToken.java"><method name="isWhitespaceOrComment" desc="()Z" line="208"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespace" desc="()Z" line="212"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEndOfLine" desc="()Z" line="216"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="()Z" line="220"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespaceButNotEndOfLine" desc="()Z" line="224"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIdentifier" desc="()Z" line="228"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isKeyword" desc="()Z" line="232"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLiteral" desc="()Z" line="236"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSeparator" desc="()Z" line="240"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOperator" desc="()Z" line="244"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="196"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="125"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ParserConfiguration$LanguageLevel" sourcefilename="ParserConfiguration.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/github/javaparser/ast/validator/Validator;Lcom/github/javaparser/ParseResult$PostProcessor;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="248"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParser$JJCalls" sourcefilename="GeneratedJavaParser.java"><method name="&lt;init&gt;" desc="()V" line="10676"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/CommentsInserter" sourcefilename="CommentsInserter.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ParserConfiguration;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertComments" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/util/TreeSet;)V" line="57"><counter type="INSTRUCTION" missed="1" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertComments" desc="(Lcom/github/javaparser/ast/Node;Ljava/util/TreeSet;)V" line="83"><counter type="INSTRUCTION" missed="3" covered="157"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attributeLineCommentsOnSameLine" desc="(Ljava/util/TreeSet;Ljava/util/List;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attributeLineCommentToNodeOrChild" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/comments/LineComment;)Z" line="177"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thereAreLinesBetween" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="208"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$attributeLineCommentsOnSameLine$6" desc="(Ljava/util/List;Ljava/util/List;Lcom/github/javaparser/ast/comments/Comment;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$attributeLineCommentsOnSameLine$5" desc="(Lcom/github/javaparser/ast/comments/Comment;Ljava/util/List;Lcom/github/javaparser/ast/Node;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$attributeLineCommentsOnSameLine$4" desc="(Lcom/github/javaparser/ast/Node;)Z" line="163"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$attributeLineCommentsOnSameLine$3" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$insertComments$2" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/comments/Comment;)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$insertComments$1" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$insertComments$0" desc="(Lcom/github/javaparser/ast/Node;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="384"/><counter type="BRANCH" missed="9" covered="51"/><counter type="LINE" missed="3" covered="92"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ParseException" sourcefilename="ParseException.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Token;[[I[Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Token;[[I[Ljava/lang/String;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialise" desc="(Lcom/github/javaparser/Token;[[I[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="5" covered="198"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add_escapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="70" covered="33"/><counter type="BRANCH" missed="10" covered="5"/><counter type="LINE" missed="19" covered="6"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="251"/><counter type="BRANCH" missed="12" covered="21"/><counter type="LINE" missed="26" covered="45"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/TokenMgrException" sourcefilename="TokenMgrException.java"><method name="addEscapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="25" covered="78"/><counter type="BRANCH" missed="6" covered="9"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LexicalErr" desc="(ZIIILjava/lang/String;I)Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="158"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZIIILjava/lang/String;II)V" line="164"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="147"/><counter type="BRANCH" missed="6" covered="11"/><counter type="LINE" missed="12" covered="25"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/TokenRange$1" sourcefilename="TokenRange.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/github/javaparser/JavaToken;" line="67"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/Range" sourcefilename="Range.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Position;Lcom/github/javaparser/Position;)V" line="33"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(Lcom/github/javaparser/Position;Lcom/github/javaparser/Position;)Lcom/github/javaparser/Range;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(IIII)Lcom/github/javaparser/Range;" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withBeginColumn" desc="(I)Lcom/github/javaparser/Range;" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBeginLine" desc="(I)Lcom/github/javaparser/Range;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withEndColumn" desc="(I)Lcom/github/javaparser/Range;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withEndLine" desc="(I)Lcom/github/javaparser/Range;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withBegin" desc="(Lcom/github/javaparser/Position;)Lcom/github/javaparser/Range;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withEnd" desc="(Lcom/github/javaparser/Position;)Lcom/github/javaparser/Range;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lcom/github/javaparser/Range;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strictlyContains" desc="(Lcom/github/javaparser/Range;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBefore" desc="(Lcom/github/javaparser/Position;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAfter" desc="(Lcom/github/javaparser/Position;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="102"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="113"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLineCount" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="128"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="13" covered="17"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParserBase" sourcefilename="GeneratedJavaParserBase.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(Lcom/github/javaparser/Provider;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokens" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentsCollection" desc="()Lcom/github/javaparser/ast/comments/CommentsCollection;" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProblem" desc="(Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tokenRange" desc="()Lcom/github/javaparser/TokenRange;" line="72"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)Lcom/github/javaparser/TokenRange;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/JavaToken;)Lcom/github/javaparser/TokenRange;" line="92"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="range" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/TokenRange;" line="102"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="range" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/TokenRange;" line="112"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orIfInvalid" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)Lcom/github/javaparser/JavaToken;" line="122"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orIfInvalid" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/JavaToken;" line="137"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeListBegin" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/JavaToken;" line="147"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenKind" desc="(I)V" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStoreTokens" desc="(Z)V" line="160"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recover" desc="(ILcom/github/javaparser/ParseException;)Lcom/github/javaparser/TokenRange;" line="167"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyList" desc="()Lcom/github/javaparser/ast/NodeList;" line="191"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="198"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWhenNotNull" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="209"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepend" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="219"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;" line="230"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propagateRangeGrowthOnRight" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="243"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateLambda" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/expr/Expression;" line="258"><counter type="INSTRUCTION" missed="3" covered="130"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="juggleArrayCreation" desc="(Lcom/github/javaparser/TokenRange;Ljava/util/List;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/NodeList;Ljava/util/List;Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="284"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="juggleArrayType" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/util/List;)Lcom/github/javaparser/ast/type/Type;" line="296"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeMessageForParseException" desc="(Lcom/github/javaparser/ParseException;)Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="4" covered="171"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$propagateRangeGrowthOnRight$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="630"/><counter type="BRANCH" missed="16" covered="58"/><counter type="LINE" missed="13" covered="128"/><counter type="COMPLEXITY" missed="17" covered="47"/><counter type="METHOD" missed="2" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ParserConfiguration" sourcefilename="ParserConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttributeComments" desc="()Z" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAttributeComments" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoNotAssignCommentsPrecedingEmptyLines" desc="()Z" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDoNotAssignCommentsPrecedingEmptyLines" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoNotConsiderAnnotationsAsNodeStartForCodeAttribution" desc="()Z" line="170"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDoNotConsiderAnnotationsAsNodeStartForCodeAttribution" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIgnoreAnnotationsWhenAttributingComments" desc="()Z" line="182"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreAnnotationsWhenAttributingComments" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStoreTokens" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="191"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStoreTokens" desc="()Z" line="199"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTabSize" desc="()I" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTabSize" desc="(I)Lcom/github/javaparser/ParserConfiguration;" line="211"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValidator" desc="()Ljava/util/Optional;" line="220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValidator" desc="(Lcom/github/javaparser/ast/validator/Validator;)Lcom/github/javaparser/ParserConfiguration;" line="229"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLexicalPreservationEnabled" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLexicalPreservationEnabled" desc="()Z" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSymbolResolver" desc="()Ljava/util/Optional;" line="275"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSymbolResolver" desc="(Lcom/github/javaparser/resolution/SymbolResolver;)Lcom/github/javaparser/ParserConfiguration;" line="282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPreProcessors" desc="()Ljava/util/List;" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPostProcessors" desc="()Ljava/util/List;" line="291"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLanguageLevel" desc="(Lcom/github/javaparser/ParserConfiguration$LanguageLevel;)Lcom/github/javaparser/ParserConfiguration;" line="295"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLanguageLevel" desc="()Lcom/github/javaparser/ParserConfiguration$LanguageLevel;" line="300"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPreprocessUnicodeEscapes" desc="(Z)Lcom/github/javaparser/ParserConfiguration;" line="316"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPreprocessUnicodeEscapes" desc="()Z" line="321"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/resolution/SymbolResolver;)V" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lcom/github/javaparser/resolution/SymbolResolver;Lcom/github/javaparser/ast/Node;)V" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/Problem;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/ast/Node;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/comments/CommentsCollection;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="112"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/Provider;)Lcom/github/javaparser/Provider;" line="106"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="151" covered="210"/><counter type="BRANCH" missed="30" covered="10"/><counter type="LINE" missed="43" covered="56"/><counter type="COMPLEXITY" missed="27" covered="28"/><counter type="METHOD" missed="11" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/TokenTypes" sourcefilename="TokenTypes.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhitespace" desc="(I)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEndOfLineCharacter" desc="(I)Z" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEndOfLineToken" desc="(I)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespaceOrComment" desc="(I)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSpaceOrTab" desc="(I)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isComment" desc="(I)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eolToken" desc="()I" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eolTokenKind" desc="()I" line="50"><counter type="INSTRUCTION" missed="19" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spaceTokenKind" desc="()I" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spaceToken" desc="()I" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCategory" desc="(I)Lcom/github/javaparser/JavaToken$Category;" line="82"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="6" covered="9"/><counter type="LINE" missed="10" covered="17"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavadocParser" sourcefilename="JavadocParser.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;)Lcom/github/javaparser/javadoc/Javadoc;" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/Javadoc;" line="50"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBlockTag" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/JavadocBlockTag;" line="85"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isABlockLine" desc="(Ljava/lang/String;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimRight" desc="(Ljava/lang/String;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanLines" desc="(Ljava/lang/String;)Ljava/util/List;" line="103"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWithAsterisk" desc="(Ljava/lang/String;)I" line="139"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cleanLines$3" desc="(Ljava/lang/String;)Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cleanLines$2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="3" covered="35"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$1" desc="(Lcom/github/javaparser/javadoc/Javadoc;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="321"/><counter type="BRANCH" missed="6" covered="34"/><counter type="LINE" missed="2" covered="58"/><counter type="COMPLEXITY" missed="7" covered="26"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/StreamProvider" sourcefilename="StreamProvider.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="43"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="53"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="28"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ParseStart" sourcefilename="ParseStart.java"><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavaToken$Kind" sourcefilename="JavaToken.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="397"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(I)Lcom/github/javaparser/JavaToken$Kind;" line="402"><counter type="INSTRUCTION" missed="297" covered="4"/><counter type="BRANCH" missed="143" covered="1"/><counter type="LINE" missed="143" covered="2"/><counter type="COMPLEXITY" missed="143" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()I" line="695"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="248"><counter type="INSTRUCTION" missed="0" covered="1577"/><counter type="LINE" missed="0" covered="144"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="297" covered="1592"/><counter type="BRANCH" missed="143" covered="1"/><counter type="LINE" missed="143" covered="150"/><counter type="COMPLEXITY" missed="143" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/Providers" sourcefilename="Providers.java"><method name="provider" desc="(Ljava/io/Reader;)Lcom/github/javaparser/Provider;" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="provider" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lcom/github/javaparser/Provider;" line="46"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/io/InputStream;)Lcom/github/javaparser/Provider;" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/github/javaparser/Provider;" line="62"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/io/File;)Lcom/github/javaparser/Provider;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lcom/github/javaparser/Provider;" line="70"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/Provider;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="provider" desc="(Ljava/lang/String;)Lcom/github/javaparser/Provider;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceProvider" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/github/javaparser/Provider;" line="87"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceProvider" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/github/javaparser/Provider;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceProvider" desc="(Ljava/lang/String;)Lcom/github/javaparser/Provider;" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="84"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/Position" sourcefilename="Position.java"><method name="&lt;init&gt;" desc="(II)V" line="40"><counter type="INSTRUCTION" missed="24" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pos" desc="(II)Lcom/github/javaparser/Position;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withColumn" desc="(I)Lcom/github/javaparser/Position;" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withLine" desc="(I)Lcom/github/javaparser/Position;" line="63"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valid" desc="()Z" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalid" desc="()Z" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orIfInvalid" desc="(Lcom/github/javaparser/Position;)Lcom/github/javaparser/Position;" line="79"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAfter" desc="(Lcom/github/javaparser/Position;)Z" line="87"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBefore" desc="(Lcom/github/javaparser/Position;)Z" line="99"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/github/javaparser/Position;)I" line="111"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="158"/><counter type="BRANCH" missed="16" covered="28"/><counter type="LINE" missed="10" covered="34"/><counter type="COMPLEXITY" missed="16" covered="20"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ModifierHolder" sourcefilename="ModifierHolder.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavaToken" sourcefilename="JavaToken.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Token;Ljava/util/List;)V" line="45"><counter type="INSTRUCTION" missed="14" covered="74"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="45"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Range;ILjava/lang/String;Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="()Ljava/util/Optional;" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()I" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKind" desc="(I)V" line="142"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Ljava/util/Optional;" line="150"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreviousToken" desc="()Ljava/util/Optional;" line="154"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRange" desc="(Lcom/github/javaparser/Range;)V" line="158"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setText" desc="(Ljava/lang/String;)V" line="162"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTokenRange" desc="()Lcom/github/javaparser/TokenRange;" line="173"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valid" desc="()Z" line="186"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalid" desc="()Z" line="193"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCategory" desc="()Lcom/github/javaparser/JavaToken$Category;" line="700"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Lcom/github/javaparser/JavaToken;)V" line="707"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertAfter" desc="(Lcom/github/javaparser/JavaToken;)V" line="720"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteToken" desc="()V" line="733"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceToken" desc="(Lcom/github/javaparser/JavaToken;)V" line="743"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findLastToken" desc="()Lcom/github/javaparser/JavaToken;" line="758"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findFirstToken" desc="()Lcom/github/javaparser/JavaToken;" line="769"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="778"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="785"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$replaceToken$5" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="749"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$replaceToken$4" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="745"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteToken$3" desc="(Ljava/util/Optional;Lcom/github/javaparser/JavaToken;)V" line="736"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$deleteToken$2" desc="(Ljava/util/Optional;Lcom/github/javaparser/JavaToken;)V" line="735"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$insertAfter$1" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="722"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$insert$0" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="709"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="223" covered="229"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="55" covered="60"/><counter type="COMPLEXITY" missed="24" covered="25"/><counter type="METHOD" missed="17" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/JavaParser" sourcefilename="JavaParser.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ParserConfiguration;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticConfiguration" desc="()Lcom/github/javaparser/ParserConfiguration;" line="84"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStaticConfiguration" desc="(Lcom/github/javaparser/ParserConfiguration;)V" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParserConfiguration" desc="()Lcom/github/javaparser/ParserConfiguration;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParserForProvider" desc="(Lcom/github/javaparser/Provider;)Lcom/github/javaparser/GeneratedJavaParser;" line="105"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/github/javaparser/ParseStart;Lcom/github/javaparser/Provider;)Lcom/github/javaparser/ParseResult;" line="126"><counter type="INSTRUCTION" missed="3" covered="91"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lcom/github/javaparser/ast/CompilationUnit;" line="168"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/io/InputStream;)Lcom/github/javaparser/ast/CompilationUnit;" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/github/javaparser/ast/CompilationUnit;" line="195"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/io/File;)Lcom/github/javaparser/ast/CompilationUnit;" line="209"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lcom/github/javaparser/ast/CompilationUnit;" line="223"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/ast/CompilationUnit;" line="237"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseResource" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/CompilationUnit;" line="252"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseResource" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/github/javaparser/ast/CompilationUnit;" line="267"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseResource" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/github/javaparser/ast/CompilationUnit;" line="282"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/io/Reader;)Lcom/github/javaparser/ast/CompilationUnit;" line="294"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/CompilationUnit;" line="306"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBlock" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/stmt/BlockStmt;" line="318"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStatement" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/stmt/Statement;" line="330"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simplifiedParse" desc="(Lcom/github/javaparser/ParseStart;Lcom/github/javaparser/Provider;)Lcom/github/javaparser/ast/Node;" line="334"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseImport" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/ImportDeclaration;" line="350"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExpression" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/Expression;" line="363"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAnnotation" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="375"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAnnotationBodyDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="387"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseClassBodyDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="401"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseInterfaceBodyDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="415"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseBodyDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="427"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseClassOrInterfaceType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="438"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/type/Type;" line="449"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseVariableDeclarationExpr" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="461"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseJavadoc" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/Javadoc;" line="473"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseExplicitConstructorInvocationStmt" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="484"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/Name;" line="495"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseSimpleName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/SimpleName;" line="506"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseParameter" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/Parameter;" line="517"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePackageDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/PackageDeclaration;" line="528"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseTypeDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="539"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseModuleDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="551"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseModuleDirective" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/modules/ModuleDirective;" line="563"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseTypeParameter" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/type/TypeParameter;" line="575"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parse$0" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParseResult$PostProcessor;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="331"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="11" covered="63"/><counter type="COMPLEXITY" missed="10" covered="37"/><counter type="METHOD" missed="9" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/TokenRange" sourcefilename="TokenRange.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/JavaToken;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBegin" desc="()Lcom/github/javaparser/JavaToken;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()Lcom/github/javaparser/JavaToken;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRange" desc="()Ljava/util/Optional;" line="31"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withBegin" desc="(Lcom/github/javaparser/JavaToken;)Lcom/github/javaparser/TokenRange;" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withEnd" desc="(Lcom/github/javaparser/JavaToken;)Lcom/github/javaparser/TokenRange;" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ParseProblemException" sourcefilename="ParseProblemException.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Ljava/util/List;)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProblems" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/RangedList" sourcefilename="RangedList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginAt" desc="(Lcom/github/javaparser/JavaToken;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endAt" desc="(Lcom/github/javaparser/JavaToken;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/Node;)V" line="28"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParserConstants" sourcefilename="GeneratedJavaParserConstants.java"><method name="&lt;clinit&gt;" desc="()V" line="326"><counter type="INSTRUCTION" missed="0" covered="576"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="576"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParser" sourcefilename="GeneratedJavaParser.java"><method name="token" desc="()Lcom/github/javaparser/JavaToken;" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTabSize" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenSource" desc="()Lcom/github/javaparser/GeneratedJavaParserTokenManager;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CompilationUnit" desc="()Lcom/github/javaparser/ast/CompilationUnit;" line="71"><counter type="INSTRUCTION" missed="49" covered="179"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="10" covered="43"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PackageDeclaration" desc="()Lcom/github/javaparser/ast/PackageDeclaration;" line="213"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ImportDeclaration" desc="()Lcom/github/javaparser/ast/ImportDeclaration;" line="225"><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Modifiers" desc="()Lcom/github/javaparser/ModifierHolder;" line="262"><counter type="INSTRUCTION" missed="14" covered="318"/><counter type="BRANCH" missed="1" covered="18"/><counter type="LINE" missed="3" covered="48"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="357"><counter type="INSTRUCTION" missed="19" covered="129"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExtendsList" desc="()Lcom/github/javaparser/ast/NodeList;" line="412"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ImplementsList" desc="()Lcom/github/javaparser/ast/NodeList;" line="436"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EnumDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="460"><counter type="INSTRUCTION" missed="28" covered="178"/><counter type="BRANCH" missed="6" covered="21"/><counter type="LINE" missed="5" covered="37"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EnumConstantDeclaration" desc="()Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="637"><counter type="INSTRUCTION" missed="2" covered="104"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeParameters" desc="()Lcom/github/javaparser/RangedList;" line="686"><counter type="INSTRUCTION" missed="3" covered="69"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeParameter" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/TypeParameter;" line="716"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeBound" desc="()Lcom/github/javaparser/ast/NodeList;" line="732"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceBody" desc="()Lcom/github/javaparser/ast/NodeList;" line="755"><counter type="INSTRUCTION" missed="19" covered="49"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceBodyDeclaration" desc="()Lcom/github/javaparser/ast/body/BodyDeclaration;" line="866"><counter type="INSTRUCTION" missed="31" covered="92"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FieldDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="974"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclarator" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="1001"><counter type="INSTRUCTION" missed="3" covered="47"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclaratorId" desc="()Lcom/github/javaparser/utils/Pair;" line="1019"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableInitializer" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="1044"><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArrayInitializer" desc="()Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="1102"><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MethodDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="1183"><counter type="INSTRUCTION" missed="27" covered="206"/><counter type="BRANCH" missed="6" covered="15"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotatedReferenceType" desc="()Lcom/github/javaparser/ast/type/ReferenceType;" line="1271"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotatedType" desc="()Lcom/github/javaparser/ast/type/Type;" line="1278"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Parameters" desc="()Lcom/github/javaparser/utils/Pair;" line="1283"><counter type="INSTRUCTION" missed="19" covered="88"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LambdaParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="1393"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InferredLambdaParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="1415"><counter type="INSTRUCTION" missed="3" covered="88"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Parameter" desc="()Lcom/github/javaparser/ast/body/Parameter;" line="1439"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReceiverParameter" desc="()Lcom/github/javaparser/ast/body/ReceiverParameter;" line="1463"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReceiverParameterId" desc="()Lcom/github/javaparser/ast/expr/Name;" line="1470"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConstructorDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="1481"><counter type="INSTRUCTION" missed="7" covered="184"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExplicitConstructorInvocation" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="1545"><counter type="INSTRUCTION" missed="39" covered="119"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="9" covered="24"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Statements" desc="()Lcom/github/javaparser/ast/NodeList;" line="1635"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InitializerDeclaration" desc="()Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="1651"><counter type="INSTRUCTION" missed="3" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Type" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/Type;" line="1673"><counter type="INSTRUCTION" missed="14" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReferenceType" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ReferenceType;" line="1699"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArrayBracketPair" desc="(Lcom/github/javaparser/ast/type/ArrayType$Origin;)Lcom/github/javaparser/ast/type/ArrayType$ArrayBracketPair;" line="1757"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="IntersectionType" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/IntersectionType;" line="1765"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AnnotatedClassOrInterfaceType" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="1809"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceType" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="1818"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeArguments" desc="()Lcom/github/javaparser/RangedList;" line="1851"><counter type="INSTRUCTION" missed="2" covered="74"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeArgument" desc="()Lcom/github/javaparser/ast/type/Type;" line="1909"><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Wildcard" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/WildcardType;" line="1947"><counter type="INSTRUCTION" missed="19" covered="72"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimitiveType" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/PrimitiveType;" line="1984"><counter type="INSTRUCTION" missed="14" covered="116"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ResultType" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/type/Type;" line="2034"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Name" desc="()Lcom/github/javaparser/ast/expr/Name;" line="2073"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SimpleName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="2090"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Identifier" desc="()Ljava/lang/String;" line="2096"><counter type="INSTRUCTION" missed="43" covered="55"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="16" covered="16"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Expression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2165"><counter type="INSTRUCTION" missed="48" covered="140"/><counter type="BRANCH" missed="9" covered="17"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AssignmentOperator" desc="()Lcom/github/javaparser/ast/expr/AssignExpr$Operator;" line="2260"><counter type="INSTRUCTION" missed="17" covered="93"/><counter type="BRANCH" missed="2" covered="13"/><counter type="LINE" missed="3" covered="38"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2332"><counter type="INSTRUCTION" missed="3" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalOrExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2351"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ConditionalAndExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2372"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InclusiveOrExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2393"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExclusiveOrExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2414"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AndExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2435"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EqualityExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2457"><counter type="INSTRUCTION" missed="17" covered="60"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="InstanceOfExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2495"><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RelationalExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2513"><counter type="INSTRUCTION" missed="20" covered="71"/><counter type="BRANCH" missed="3" covered="8"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ShiftExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2563"><counter type="INSTRUCTION" missed="11" covered="63"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AdditiveExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2599"><counter type="INSTRUCTION" missed="20" covered="57"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MultiplicativeExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2637"><counter type="INSTRUCTION" missed="17" covered="67"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnaryExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2680"><counter type="INSTRUCTION" missed="31" covered="68"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PreIncrementExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2762"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PreDecrementExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2772"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnaryExpressionNotPlusMinus" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2781"><counter type="INSTRUCTION" missed="34" covered="85"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PostfixExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2865"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CastExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2893"><counter type="INSTRUCTION" missed="18" covered="139"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimaryExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2963"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimaryExpressionWithoutSuperSuffix" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2977"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PrimaryPrefix" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="2990"><counter type="INSTRUCTION" missed="144" covered="431"/><counter type="BRANCH" missed="22" covered="45"/><counter type="LINE" missed="26" covered="88"/><counter type="COMPLEXITY" missed="18" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimarySuffix" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="3272"><counter type="INSTRUCTION" missed="17" covered="37"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PrimarySuffixWithoutSuper" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="3292"><counter type="INSTRUCTION" missed="29" covered="158"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Literal" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="3360"><counter type="INSTRUCTION" missed="17" covered="103"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BooleanLiteral" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="3404"><counter type="INSTRUCTION" missed="17" covered="33"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="NullLiteral" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="3424"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Arguments" desc="()Lcom/github/javaparser/ast/NodeList;" line="3428"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArgumentList" desc="()Lcom/github/javaparser/ast/NodeList;" line="3484"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AllocationExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="3508"><counter type="INSTRUCTION" missed="35" covered="112"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="6" covered="25"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ArrayCreation" desc="(Lcom/github/javaparser/JavaToken;Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/expr/ArrayCreationExpr;" line="3585"><counter type="INSTRUCTION" missed="4" covered="121"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Statement" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="3674"><counter type="INSTRUCTION" missed="14" covered="91"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="3" covered="37"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AssertStatement" desc="()Lcom/github/javaparser/ast/stmt/AssertStmt;" line="3788"><counter type="INSTRUCTION" missed="3" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LabeledStatement" desc="()Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="3810"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Block" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="3817"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlockStatement" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="3841"><counter type="INSTRUCTION" missed="14" covered="71"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclarationExpression" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="3920"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EmptyStatement" desc="()Lcom/github/javaparser/ast/stmt/EmptyStmt;" line="3946"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LambdaBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="3951"><counter type="INSTRUCTION" missed="16" covered="30"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="StatementExpression" desc="()Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="4014"><counter type="INSTRUCTION" missed="34" covered="116"/><counter type="BRANCH" missed="4" covered="13"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SwitchStatement" desc="()Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="4128"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SwitchExpression" desc="()Lcom/github/javaparser/ast/expr/SwitchExpr;" line="4157"><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SwitchEntry" desc="()Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="4184"><counter type="INSTRUCTION" missed="50" covered="188"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="9" covered="44"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="IfStatement" desc="()Lcom/github/javaparser/ast/stmt/IfStmt;" line="4314"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="WhileStatement" desc="()Lcom/github/javaparser/ast/stmt/WhileStmt;" line="4340"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DoStatement" desc="()Lcom/github/javaparser/ast/stmt/DoStmt;" line="4352"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForStatement" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="4363"><counter type="INSTRUCTION" missed="23" covered="140"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="32"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForInit" desc="()Lcom/github/javaparser/ast/NodeList;" line="4613"><counter type="INSTRUCTION" missed="17" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExpressionList" desc="()Lcom/github/javaparser/ast/NodeList;" line="4672"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ForUpdate" desc="()Lcom/github/javaparser/ast/NodeList;" line="4695"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BreakStatement" desc="()Lcom/github/javaparser/ast/stmt/BreakStmt;" line="4699"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ContinueStatement" desc="()Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="4757"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReturnStatement" desc="()Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="4786"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ThrowStatement" desc="()Lcom/github/javaparser/ast/stmt/ThrowStmt;" line="4846"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SynchronizedStatement" desc="()Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="4856"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TryStatement" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="4865"><counter type="INSTRUCTION" missed="9" covered="219"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ResourceSpecification" desc="()Lcom/github/javaparser/ast/NodeList;" line="4951"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Resources" desc="()Lcom/github/javaparser/ast/NodeList;" line="4962"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Resource" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="4981"><counter type="INSTRUCTION" missed="16" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RUNSIGNEDSHIFT" desc="()V" line="5038"><counter type="INSTRUCTION" missed="8" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RSIGNEDSHIFT" desc="()V" line="5051"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Annotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="5064"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Annotation" desc="()Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="5081"><counter type="INSTRUCTION" missed="2" covered="94"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValuePairs" desc="()Lcom/github/javaparser/ast/NodeList;" line="5123"><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValuePair" desc="()Lcom/github/javaparser/ast/expr/MemberValuePair;" line="5148"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValue" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="5156"><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MemberValueArrayInitializer" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="5218"><counter type="INSTRUCTION" missed="10" covered="74"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="5302"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeBody" desc="()Lcom/github/javaparser/ast/NodeList;" line="5312"><counter type="INSTRUCTION" missed="19" covered="50"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationBodyDeclaration" desc="()Lcom/github/javaparser/ast/body/BodyDeclaration;" line="5417"><counter type="INSTRUCTION" missed="51" covered="27"/><counter type="BRANCH" missed="9" covered="4"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationTypeMemberDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="5474"><counter type="INSTRUCTION" missed="2" covered="62"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DefaultValue" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="5494"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ModuleDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleDirective;" line="5505"><counter type="INSTRUCTION" missed="24" covered="341"/><counter type="BRANCH" missed="6" covered="24"/><counter type="LINE" missed="3" covered="75"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ModuleDeclaration" desc="(Lcom/github/javaparser/ModifierHolder;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="5638"><counter type="INSTRUCTION" missed="2" covered="98"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlockParseStart" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="5687"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlockStatementParseStart" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="5693"><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ImportDeclarationParseStart" desc="()Lcom/github/javaparser/ast/ImportDeclaration;" line="5747"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExpressionParseStart" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="5753"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationParseStart" desc="()Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="5759"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AnnotationBodyDeclarationParseStart" desc="()Lcom/github/javaparser/ast/body/BodyDeclaration;" line="5765"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceBodyDeclarationParseStart" desc="()Lcom/github/javaparser/ast/body/BodyDeclaration;" line="5771"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ClassOrInterfaceTypeParseStart" desc="()Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="5777"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ResultTypeParseStart" desc="()Lcom/github/javaparser/ast/type/Type;" line="5783"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VariableDeclarationExpressionParseStart" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="5790"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ExplicitConstructorInvocationParseStart" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="5796"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NameParseStart" desc="()Lcom/github/javaparser/ast/expr/Name;" line="5802"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SimpleNameParseStart" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="5808"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ParameterParseStart" desc="()Lcom/github/javaparser/ast/body/Parameter;" line="5814"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PackageDeclarationParseStart" desc="()Lcom/github/javaparser/ast/PackageDeclaration;" line="5820"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeDeclarationParseStart" desc="()Lcom/github/javaparser/ast/body/TypeDeclaration;" line="5827"><counter type="INSTRUCTION" missed="26" covered="22"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ModuleDeclarationParseStart" desc="()Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="5853"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ModuleDirectiveParseStart" desc="()Lcom/github/javaparser/ast/modules/ModuleDirective;" line="5860"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TypeParameterParseStart" desc="()Lcom/github/javaparser/ast/type/TypeParameter;" line="5867"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_1" desc="(I)Z" line="5875"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_2" desc="(I)Z" line="5883"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_3" desc="(I)Z" line="5891"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_4" desc="(I)Z" line="5899"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_5" desc="(I)Z" line="5907"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_6" desc="(I)Z" line="5915"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_7" desc="(I)Z" line="5923"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_8" desc="(I)Z" line="5931"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_9" desc="(I)Z" line="5939"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_10" desc="(I)Z" line="5947"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_11" desc="(I)Z" line="5955"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_12" desc="(I)Z" line="5963"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_13" desc="(I)Z" line="5971"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_14" desc="(I)Z" line="5979"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_15" desc="(I)Z" line="5987"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_16" desc="(I)Z" line="5995"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_17" desc="(I)Z" line="6003"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_18" desc="(I)Z" line="6011"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_19" desc="(I)Z" line="6019"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_20" desc="(I)Z" line="6027"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_21" desc="(I)Z" line="6035"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_22" desc="(I)Z" line="6043"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_23" desc="(I)Z" line="6051"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_24" desc="(I)Z" line="6059"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_25" desc="(I)Z" line="6067"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_26" desc="(I)Z" line="6075"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_27" desc="(I)Z" line="6083"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_28" desc="(I)Z" line="6091"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_29" desc="(I)Z" line="6099"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_30" desc="(I)Z" line="6107"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_31" desc="(I)Z" line="6115"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_32" desc="(I)Z" line="6123"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_2_33" desc="(I)Z" line="6131"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_34" desc="(I)Z" line="6139"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_35" desc="(I)Z" line="6147"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_36" desc="(I)Z" line="6155"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_37" desc="(I)Z" line="6163"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_38" desc="(I)Z" line="6171"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_39" desc="(I)Z" line="6179"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_40" desc="(I)Z" line="6187"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_41" desc="(I)Z" line="6195"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_42" desc="(I)Z" line="6203"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_43" desc="(I)Z" line="6211"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_44" desc="(I)Z" line="6219"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_45" desc="(I)Z" line="6227"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_46" desc="(I)Z" line="6235"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_47" desc="(I)Z" line="6243"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_48" desc="(I)Z" line="6251"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_49" desc="(I)Z" line="6259"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_50" desc="(I)Z" line="6267"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_51" desc="(I)Z" line="6275"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_52" desc="(I)Z" line="6283"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_53" desc="(I)Z" line="6291"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_54" desc="(I)Z" line="6299"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_55" desc="(I)Z" line="6307"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_56" desc="(I)Z" line="6315"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_2_57" desc="(I)Z" line="6323"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_58" desc="(I)Z" line="6331"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_228" desc="()Z" line="6339"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_298" desc="()Z" line="6345"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_264" desc="()Z" line="6356"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_263" desc="()Z" line="6362"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_262" desc="()Z" line="6368"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_195" desc="()Z" line="6375"><counter type="INSTRUCTION" missed="39" covered="15"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_249" desc="()Z" line="6393"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_380" desc="()Z" line="6404"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_170" desc="()Z" line="6411"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_379" desc="()Z" line="6418"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_370" desc="()Z" line="6425"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_372" desc="()Z" line="6431"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_369" desc="()Z" line="6446"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_371" desc="()Z" line="6458"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_332" desc="()Z" line="6465"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_201" desc="()Z" line="6471"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_352" desc="()Z" line="6483"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_303" desc="()Z" line="6498"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_150" desc="()Z" line="6507"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_73" desc="()Z" line="6516"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_72" desc="()Z" line="6522"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_71" desc="()Z" line="6528"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_70" desc="()Z" line="6534"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_149" desc="()Z" line="6540"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_69" desc="()Z" line="6546"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_148" desc="()Z" line="6552"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_147" desc="()Z" line="6558"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_68" desc="()Z" line="6564"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_146" desc="()Z" line="6570"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_145" desc="()Z" line="6576"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_67" desc="()Z" line="6582"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_144" desc="()Z" line="6588"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_143" desc="()Z" line="6594"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_328" desc="()Z" line="6600"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_66" desc="()Z" line="6606"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_142" desc="()Z" line="6612"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_141" desc="()Z" line="6618"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_65" desc="()Z" line="6624"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_140" desc="()Z" line="6630"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_139" desc="()Z" line="6636"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_331" desc="()Z" line="6642"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_64" desc="()Z" line="6648"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_138" desc="()Z" line="6654"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_302" desc="()Z" line="6660"><counter type="INSTRUCTION" missed="10" covered="37"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_63" desc="()Z" line="6676"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_62" desc="()Z" line="6682"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_91" desc="()Z" line="6689"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_61" desc="()Z" line="6729"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_305" desc="()Z" line="6735"><counter type="INSTRUCTION" missed="9" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_60" desc="()Z" line="6749"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_420" desc="()Z" line="6755"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_3" desc="()Z" line="6762"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_110" desc="()Z" line="6810"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_285" desc="()Z" line="6818"><counter type="INSTRUCTION" missed="41" covered="6"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_366" desc="()Z" line="6834"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_304" desc="()Z" line="6841"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_365" desc="()Z" line="6848"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_364" desc="()Z" line="6854"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_347" desc="()Z" line="6861"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_24" desc="()Z" line="6874"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_257" desc="()Z" line="6882"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_321" desc="()Z" line="6895"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_320" desc="()Z" line="6904"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_92" desc="()Z" line="6910"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_44" desc="()Z" line="6919"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_284" desc="()Z" line="6926"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_59" desc="()Z" line="6940"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_355" desc="()Z" line="6949"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_354" desc="()Z" line="6955"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_330" desc="()Z" line="6962"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_76" desc="()Z" line="6973"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_2" desc="()Z" line="7016"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_283" desc="()Z" line="7022"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_1" desc="()Z" line="7028"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_90" desc="()Z" line="7034"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_111" desc="()Z" line="7040"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_23" desc="()Z" line="7053"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_82" desc="()Z" line="7060"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_43" desc="()Z" line="7071"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_42" desc="()Z" line="7077"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_133" desc="()Z" line="7089"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_168" desc="()Z" line="7095"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_167" desc="()Z" line="7101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_132" desc="()Z" line="7107"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_131" desc="()Z" line="7114"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_104" desc="()Z" line="7122"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_340" desc="()Z" line="7132"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_86" desc="()Z" line="7140"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_161" desc="()Z" line="7153"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_160" desc="()Z" line="7159"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_159" desc="()Z" line="7165"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_158" desc="()Z" line="7171"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_157" desc="()Z" line="7177"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_156" desc="()Z" line="7183"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_155" desc="()Z" line="7189"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_363" desc="()Z" line="7195"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_227" desc="()Z" line="7203"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_154" desc="()Z" line="7210"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_362" desc="()Z" line="7216"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_346" desc="()Z" line="7225"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_99" desc="()Z" line="7236"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_123" desc="()Z" line="7264"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_297" desc="()Z" line="7272"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_109" desc="()Z" line="7281"><counter type="INSTRUCTION" missed="7" covered="11"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_282" desc="()Z" line="7289"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_248" desc="()Z" line="7300"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_247" desc="()Z" line="7306"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_243" desc="()Z" line="7312"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_200" desc="()Z" line="7318"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_242" desc="()Z" line="7330"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_241" desc="()Z" line="7336"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_240" desc="()Z" line="7342"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_239" desc="()Z" line="7348"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_137" desc="()Z" line="7354"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_238" desc="()Z" line="7365"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_237" desc="()Z" line="7371"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_89" desc="()Z" line="7377"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_236" desc="()Z" line="7387"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_235" desc="()Z" line="7393"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_234" desc="()Z" line="7399"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_22" desc="()Z" line="7405"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_233" desc="()Z" line="7411"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_232" desc="()Z" line="7417"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_21" desc="()Z" line="7423"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_231" desc="()Z" line="7434"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_230" desc="()Z" line="7440"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_406" desc="()Z" line="7446"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_229" desc="()Z" line="7458"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_19" desc="()Z" line="7464"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_41" desc="()Z" line="7471"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_20" desc="()Z" line="7477"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_198" desc="()Z" line="7483"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_196" desc="()Z" line="7497"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_18" desc="()Z" line="7549"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_199" desc="()Z" line="7556"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_309" desc="()Z" line="7562"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_39" desc="()Z" line="7569"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_197" desc="()Z" line="7575"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_108" desc="()Z" line="7581"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_345" desc="()Z" line="7587"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_40" desc="()Z" line="7593"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_316" desc="()Z" line="7605"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_58" desc="()Z" line="7617"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_311" desc="()Z" line="7623"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_319" desc="()Z" line="7630"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_318" desc="()Z" line="7639"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_121" desc="()Z" line="7645"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_317" desc="()Z" line="7653"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_281" desc="()Z" line="7660"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_280" desc="()Z" line="7673"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_135" desc="()Z" line="7680"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_134" desc="()Z" line="7691"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_451" desc="()Z" line="7703"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_87" desc="()Z" line="7710"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_223" desc="()Z" line="7720"><counter type="INSTRUCTION" missed="4" covered="23"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_57" desc="()Z" line="7733"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_120" desc="()Z" line="7741"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_17" desc="()Z" line="7747"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_77" desc="()Z" line="7754"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_266" desc="()Z" line="7764"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_215" desc="()Z" line="7775"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_122" desc="()Z" line="7781"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_184" desc="()Z" line="7787"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_79" desc="()Z" line="7798"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_16" desc="()Z" line="7806"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_180" desc="()Z" line="7814"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_14" desc="()Z" line="7822"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_344" desc="()Z" line="7829"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_313" desc="()Z" line="7835"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_343" desc="()Z" line="7841"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_452" desc="()Z" line="7847"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_85" desc="()Z" line="7854"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_186" desc="()Z" line="7860"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_15" desc="()Z" line="7867"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_185" desc="()Z" line="7876"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_312" desc="()Z" line="7884"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_128" desc="()Z" line="7895"><counter type="INSTRUCTION" missed="4" covered="33"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_273" desc="()Z" line="7907"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_56" desc="()Z" line="7913"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_183" desc="()Z" line="7919"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_272" desc="()Z" line="7925"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_449" desc="()Z" line="7931"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_127" desc="()Z" line="7945"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_271" desc="()Z" line="7955"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_55" desc="()Z" line="7961"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_448" desc="()Z" line="7969"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_447" desc="()Z" line="7975"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_270" desc="()Z" line="7981"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_446" desc="()Z" line="7987"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_445" desc="()Z" line="7993"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_83" desc="()Z" line="8000"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_269" desc="()Z" line="8010"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_444" desc="()Z" line="8016"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_268" desc="()Z" line="8022"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_54" desc="()Z" line="8028"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_13" desc="()Z" line="8035"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_267" desc="()Z" line="8041"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_165" desc="()Z" line="8047"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_106" desc="()Z" line="8054"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_441" desc="()Z" line="8060"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_38" desc="()Z" line="8082"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_407" desc="()Z" line="8090"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_216" desc="()Z" line="8097"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_164" desc="()Z" line="8122"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_430" desc="()Z" line="8130"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_414" desc="()Z" line="8137"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_256" desc="()Z" line="8147"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_416" desc="()Z" line="8153"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_225" desc="()Z" line="8160"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_255" desc="()Z" line="8166"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_374" desc="()Z" line="8172"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_404" desc="()Z" line="8178"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_358" desc="()Z" line="8191"><counter type="INSTRUCTION" missed="37" covered="19"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_206" desc="()Z" line="8208"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_205" desc="()Z" line="8218"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_12" desc="()Z" line="8224"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_204" desc="()Z" line="8230"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_182" desc="()Z" line="8236"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_163" desc="()Z" line="8243"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_357" desc="()Z" line="8258"><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_126" desc="()Z" line="8268"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_350" desc="()Z" line="8276"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_101" desc="()Z" line="8284"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_367" desc="()Z" line="8294"><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_314" desc="()Z" line="8305"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_224" desc="()Z" line="8312"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_81" desc="()Z" line="8318"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_162" desc="()Z" line="8326"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_213" desc="()Z" line="8333"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_37" desc="()Z" line="8345"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_177" desc="()Z" line="8351"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_53" desc="()Z" line="8357"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_176" desc="()Z" line="8363"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_277" desc="()Z" line="8369"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_100" desc="()Z" line="8376"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_226" desc="()Z" line="8386"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_102" desc="()Z" line="8392"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_194" desc="()Z" line="8403"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_36" desc="()Z" line="8412"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_175" desc="()Z" line="8419"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_116" desc="()Z" line="8426"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_35" desc="()Z" line="8439"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_315" desc="()Z" line="8447"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_349" desc="()Z" line="8454"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_193" desc="()Z" line="8462"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_279" desc="()Z" line="8477"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_34" desc="()Z" line="8488"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_192" desc="()Z" line="8495"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_33" desc="()Z" line="8503"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_191" desc="()Z" line="8509"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_222" desc="()Z" line="8515"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_115" desc="()Z" line="8522"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_52" desc="()Z" line="8529"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_326" desc="()Z" line="8535"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_10" desc="()Z" line="8546"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_276" desc="()Z" line="8553"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_278" desc="()Z" line="8559"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_221" desc="()Z" line="8570"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_11" desc="()Z" line="8577"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_219" desc="()Z" line="8583"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_51" desc="()Z" line="8589"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_220" desc="()Z" line="8601"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_246" desc="()Z" line="8608"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_296" desc="()Z" line="8613"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_218" desc="()Z" line="8619"><counter type="INSTRUCTION" missed="26" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_433" desc="()Z" line="8633"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_432" desc="()Z" line="8640"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_190" desc="()Z" line="8646"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_245" desc="()Z" line="8664"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_409" desc="()Z" line="8672"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_431" desc="()Z" line="8678"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_244" desc="()Z" line="8684"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_415" desc="()Z" line="8695"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_275" desc="()Z" line="8709"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_117" desc="()Z" line="8715"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_405" desc="()Z" line="8731"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_217" desc="()Z" line="8741"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_274" desc="()Z" line="8753"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_50" desc="()Z" line="8759"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_32" desc="()Z" line="8765"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_189" desc="()Z" line="8771"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_188" desc="()Z" line="8783"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_187" desc="()Z" line="8789"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_105" desc="()Z" line="8795"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_136" desc="()Z" line="8802"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_88" desc="()Z" line="8810"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_130" desc="()Z" line="8818"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_151" desc="()Z" line="8824"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_48" desc="()Z" line="8829"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_129" desc="()Z" line="8837"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_250" desc="()Z" line="8865"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_31" desc="()Z" line="8872"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_152" desc="()Z" line="8878"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_94" desc="()Z" line="8883"><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_417" desc="()Z" line="8895"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_411" desc="()Z" line="8902"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_410" desc="()Z" line="8908"><counter type="INSTRUCTION" missed="17" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_95" desc="()Z" line="8920"><counter type="INSTRUCTION" missed="23" covered="28"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_84" desc="()Z" line="8933"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_49" desc="()Z" line="8944"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_375" desc="()Z" line="8952"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_339" desc="()Z" line="8958"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_360" desc="()Z" line="8970"><counter type="INSTRUCTION" missed="15" covered="50"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_173" desc="()Z" line="8992"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_212" desc="()Z" line="8998"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_166" desc="()Z" line="9009"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_172" desc="()Z" line="9015"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_113" desc="()Z" line="9022"><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_202" desc="()Z" line="9032"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_377" desc="()Z" line="9039"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_153" desc="()Z" line="9050"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_181" desc="()Z" line="9063"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_30" desc="()Z" line="9075"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_125" desc="()Z" line="9083"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_124" desc="()Z" line="9089"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_174" desc="()Z" line="9095"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_437" desc="()Z" line="9102"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_423" desc="()Z" line="9109"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_47" desc="()Z" line="9116"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_96" desc="()Z" line="9122"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_348" desc="()Z" line="9135"><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_80" desc="()Z" line="9147"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_443" desc="()Z" line="9157"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_28" desc="()Z" line="9164"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_254" desc="()Z" line="9170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_436" desc="()Z" line="9176"><counter type="INSTRUCTION" missed="12" covered="38"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_253" desc="()Z" line="9193"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_98" desc="()Z" line="9199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_29" desc="()Z" line="9206"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_97" desc="()Z" line="9216"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_103" desc="()Z" line="9222"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_78" desc="()Z" line="9233"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_300" desc="()Z" line="9239"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_299" desc="()Z" line="9245"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_301" desc="()Z" line="9251"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_252" desc="()Z" line="9260"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_251" desc="()Z" line="9267"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_114" desc="()Z" line="9278"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_422" desc="()Z" line="9289"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_408" desc="()Z" line="9299"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_203" desc="()Z" line="9307"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_325" desc="()Z" line="9323"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_75" desc="()Z" line="9329"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_8" desc="()Z" line="9335"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_295" desc="()Z" line="9355"><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_7" desc="()Z" line="9371"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_359" desc="()Z" line="9380"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_6" desc="()Z" line="9393"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_5" desc="()Z" line="9400"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_338" desc="()Z" line="9406"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_337" desc="()Z" line="9412"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_336" desc="()Z" line="9418"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_335" desc="()Z" line="9424"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_259" desc="()Z" line="9430"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_324" desc="()Z" line="9437"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_334" desc="()Z" line="9443"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_333" desc="()Z" line="9449"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_294" desc="()Z" line="9455"><counter type="INSTRUCTION" missed="24" covered="6"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_323" desc="()Z" line="9465"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_306" desc="()Z" line="9471"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_112" desc="()Z" line="9495"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_211" desc="()Z" line="9502"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_9" desc="()Z" line="9508"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_214" desc="()Z" line="9514"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_261" desc="()Z" line="9520"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_260" desc="()Z" line="9526"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_293" desc="()Z" line="9532"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_210" desc="()Z" line="9541"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_322" desc="()Z" line="9552"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_209" desc="()Z" line="9558"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_258" desc="()Z" line="9565"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_208" desc="()Z" line="9575"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_450" desc="()Z" line="9581"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_292" desc="()Z" line="9588"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_169" desc="()Z" line="9599"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_207" desc="()Z" line="9609"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_171" desc="()Z" line="9616"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_107" desc="()Z" line="9632"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_440" desc="()Z" line="9644"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_439" desc="()Z" line="9650"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_291" desc="()Z" line="9656"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_438" desc="()Z" line="9666"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_424" desc="()Z" line="9673"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_310" desc="()Z" line="9687"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_435" desc="()Z" line="9694"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_265" desc="()Z" line="9700"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_290" desc="()Z" line="9712"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_395" desc="()Z" line="9722"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_426" desc="()Z" line="9733"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_4" desc="()Z" line="9739"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_425" desc="()Z" line="9746"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_178" desc="()Z" line="9752"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_412" desc="()Z" line="9762"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_442" desc="()Z" line="9773"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_421" desc="()Z" line="9779"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_46" desc="()Z" line="9786"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_391" desc="()Z" line="9794"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_428" desc="()Z" line="9805"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_179" desc="()Z" line="9811"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_388" desc="()Z" line="9819"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_27" desc="()Z" line="9830"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_26" desc="()Z" line="9836"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_385" desc="()Z" line="9842"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_119" desc="()Z" line="9848"><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_93" desc="()Z" line="9862"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_434" desc="()Z" line="9868"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3_25" desc="()Z" line="9875"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_384" desc="()Z" line="9889"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_392" desc="()Z" line="9895"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_389" desc="()Z" line="9902"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_376" desc="()Z" line="9914"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_400" desc="()Z" line="9924"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_399" desc="()Z" line="9930"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_427" desc="()Z" line="9936"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_398" desc="()Z" line="9942"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_397" desc="()Z" line="9948"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_118" desc="()Z" line="9954"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_396" desc="()Z" line="9961"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_45" desc="()Z" line="9978"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_74" desc="()Z" line="9987"><counter type="INSTRUCTION" missed="20" covered="15"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_361" desc="()Z" line="10000"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_386" desc="()Z" line="10006"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_342" desc="()Z" line="10018"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_341" desc="()Z" line="10031"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_429" desc="()Z" line="10039"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_413" desc="()Z" line="10046"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_289" desc="()Z" line="10056"><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_403" desc="()Z" line="10071"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_387" desc="()Z" line="10082"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_378" desc="()Z" line="10089"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_402" desc="()Z" line="10098"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_401" desc="()Z" line="10109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_394" desc="()Z" line="10115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_393" desc="()Z" line="10121"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_356" desc="()Z" line="10127"><counter type="INSTRUCTION" missed="56" covered="6"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_288" desc="()Z" line="10145"><counter type="INSTRUCTION" missed="36" covered="6"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_390" desc="()Z" line="10158"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_383" desc="()Z" line="10169"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_373" desc="()Z" line="10176"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_368" desc="()Z" line="10183"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_287" desc="()Z" line="10194"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_419" desc="()Z" line="10204"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_353" desc="()Z" line="10211"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_351" desc="()Z" line="10218"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_308" desc="()Z" line="10229"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_329" desc="()Z" line="10241"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_286" desc="()Z" line="10248"><counter type="INSTRUCTION" missed="8" covered="31"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_418" desc="()Z" line="10261"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_382" desc="()Z" line="10268"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_327" desc="()Z" line="10274"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_307" desc="()Z" line="10285"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_381" desc="()Z" line="10297"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_0" desc="()V" line="10329"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_1" desc="()V" line="10332"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_2" desc="()V" line="10335"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_3" desc="()V" line="10338"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_4" desc="()V" line="10341"><counter type="INSTRUCTION" missed="0" covered="680"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/Provider;)V" line="10312"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10360"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/lang/String;)V" line="10364"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lcom/github/javaparser/Provider;)V" line="10368"><counter type="INSTRUCTION" missed="16" covered="57"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/GeneratedJavaParserTokenManager;)V" line="10312"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lcom/github/javaparser/GeneratedJavaParserTokenManager;)V" line="10397"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_consume_token" desc="(I)Lcom/github/javaparser/Token;" line="10407"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_scan_token" desc="(I)Z" line="10433"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lcom/github/javaparser/Token;" line="10456"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getToken" desc="(I)Lcom/github/javaparser/Token;" line="10465"><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_ntk_f" desc="()I" line="10474"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_add_error_token" desc="(II)V" line="10487"><counter type="INSTRUCTION" missed="1" covered="107"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateParseException" desc="()Lcom/github/javaparser/ParseException;" line="10526"><counter type="INSTRUCTION" missed="2" covered="179"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace_enabled" desc="()Z" line="10575"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enable_tracing" desc="()V" line="10580"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disable_tracing" desc="()V" line="10584"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_rescan_token" desc="()V" line="10587"><counter type="INSTRUCTION" missed="200" covered="75"/><counter type="BRANCH" missed="52" covered="13"/><counter type="LINE" missed="50" covered="19"/><counter type="COMPLEXITY" missed="52" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_save" desc="(II)V" line="10665"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="10322"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3672" covered="19280"/><counter type="BRANCH" missed="947" covered="2227"/><counter type="LINE" missed="718" covered="3657"/><counter type="COMPLEXITY" missed="832" covered="1522"/><counter type="METHOD" missed="61" covered="616"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/GeneratedJavaParserTokenManagerBase" sourcefilename="GeneratedJavaParserTokenManagerBase.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tokenRange" desc="(Lcom/github/javaparser/Token;)Lcom/github/javaparser/TokenRange;" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCommentFromToken" desc="(Lcom/github/javaparser/Token;)Lcom/github/javaparser/ast/comments/Comment;" line="28"><counter type="INSTRUCTION" missed="5" covered="100"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="109"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/HasParentNode" sourcefilename="HasParentNode.java"><method name="getAncestorOfType" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findParent" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAncestor" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAncestor" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/Optional;" line="87"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findAncestor$0" desc="(Ljava/lang/Object;)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GeneratedJavaParserTokenManager.java"><line nr="47" mi="5" ci="5" mb="0" cb="0"/><line nr="48" mi="5" ci="5" mb="0" cb="0"/><line nr="50" mi="5" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="3" ci="3" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="3" cb="9"/><line nr="115" mi="0" ci="12" mb="1" cb="3"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="4"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="18" mb="2" cb="4"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="1" cb="1"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="12" mb="0" cb="4"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="12" mb="1" cb="3"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="4"/><line nr="145" mi="0" ci="4" mb="1" cb="1"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="1" cb="3"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="12" mb="1" cb="3"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="12" mb="1" cb="3"/><line nr="169" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="6" ci="6" mb="3" cb="1"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="12" mb="2" cb="2"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="6" mb="3" cb="1"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="12" mb="2" cb="2"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="12" mb="1" cb="3"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="6" mb="3" cb="1"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="12" ci="0" mb="4" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="1" cb="1"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="6" ci="6" mb="3" cb="1"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="12" ci="0" mb="4" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="2" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="2" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="12" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="1" cb="47"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="30"/><line nr="375" mi="0" ci="6" mb="0" cb="2"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="1" cb="1"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="2"/><line nr="384" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="2"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="2"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="9" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="2"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="408" mi="0" ci="6" mb="0" cb="2"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="0" ci="6" mb="0" cb="2"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="2"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="2"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="0" cb="2"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="6" mb="0" cb="2"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="6" mb="0" cb="2"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="6" mb="0" cb="2"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="6" mb="0" cb="2"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="2"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="2"/><line nr="429" mi="0" ci="5" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="2"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="2"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="2"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="0" ci="9" mb="0" cb="0"/><line nr="443" mi="0" ci="9" mb="0" cb="0"/><line nr="445" mi="0" ci="9" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="2"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="9" mb="0" cb="0"/><line nr="455" mi="0" ci="9" mb="0" cb="0"/><line nr="457" mi="0" ci="9" mb="0" cb="0"/><line nr="459" mi="0" ci="9" mb="0" cb="0"/><line nr="461" mi="0" ci="9" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="2"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="0" cb="2"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="9" mb="0" cb="0"/><line nr="472" mi="0" ci="9" mb="0" cb="0"/><line nr="474" mi="0" ci="9" mb="0" cb="0"/><line nr="476" mi="0" ci="9" mb="0" cb="0"/><line nr="478" mi="0" ci="9" mb="0" cb="0"/><line nr="480" mi="0" ci="9" mb="0" cb="0"/><line nr="482" mi="0" ci="9" mb="0" cb="0"/><line nr="484" mi="0" ci="9" mb="0" cb="0"/><line nr="486" mi="0" ci="9" mb="0" cb="0"/><line nr="488" mi="0" ci="6" mb="1" cb="1"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="7" mb="0" cb="0"/><line nr="497" mi="0" ci="20" mb="0" cb="2"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="22"/><line nr="507" mi="0" ci="6" mb="0" cb="2"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="2"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="1" cb="1"/><line nr="514" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="1" cb="1"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="522" mi="0" ci="9" mb="0" cb="0"/><line nr="524" mi="0" ci="9" mb="0" cb="0"/><line nr="526" mi="0" ci="9" mb="0" cb="0"/><line nr="528" mi="0" ci="9" mb="0" cb="0"/><line nr="530" mi="0" ci="9" mb="0" cb="0"/><line nr="532" mi="0" ci="9" mb="0" cb="0"/><line nr="534" mi="0" ci="9" mb="0" cb="0"/><line nr="536" mi="0" ci="9" mb="0" cb="0"/><line nr="538" mi="0" ci="9" mb="0" cb="0"/><line nr="540" mi="0" ci="9" mb="0" cb="0"/><line nr="542" mi="0" ci="9" mb="0" cb="0"/><line nr="544" mi="0" ci="9" mb="0" cb="0"/><line nr="546" mi="0" ci="9" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="2"/><line nr="549" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="0" ci="9" mb="0" cb="0"/><line nr="552" mi="0" ci="9" mb="0" cb="0"/><line nr="554" mi="0" ci="6" mb="0" cb="2"/><line nr="556" mi="0" ci="3" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="9" mb="0" cb="0"/><line nr="561" mi="0" ci="9" mb="0" cb="0"/><line nr="563" mi="0" ci="6" mb="0" cb="2"/><line nr="564" mi="0" ci="6" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="1" cb="1"/><line nr="568" mi="0" ci="6" mb="0" cb="0"/><line nr="573" mi="0" ci="7" mb="0" cb="0"/><line nr="576" mi="0" ci="20" mb="0" cb="2"/><line nr="577" mi="0" ci="7" mb="0" cb="0"/><line nr="578" mi="0" ci="5" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="580" mi="0" ci="7" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="582" mi="0" ci="1" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="20"/><line nr="586" mi="0" ci="6" mb="1" cb="1"/><line nr="587" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="9" mb="0" cb="0"/><line nr="592" mi="0" ci="9" mb="0" cb="0"/><line nr="594" mi="0" ci="9" mb="0" cb="0"/><line nr="596" mi="0" ci="6" mb="0" cb="2"/><line nr="597" mi="0" ci="6" mb="0" cb="0"/><line nr="600" mi="0" ci="6" mb="0" cb="2"/><line nr="601" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="6" mb="0" cb="2"/><line nr="603" mi="0" ci="6" mb="0" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="2"/><line nr="605" mi="0" ci="6" mb="0" cb="0"/><line nr="606" mi="0" ci="6" mb="0" cb="2"/><line nr="607" mi="0" ci="6" mb="0" cb="0"/><line nr="608" mi="0" ci="9" mb="0" cb="0"/><line nr="610" mi="0" ci="6" mb="1" cb="1"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="614" mi="0" ci="6" mb="1" cb="1"/><line nr="615" mi="0" ci="6" mb="0" cb="0"/><line nr="618" mi="0" ci="9" mb="0" cb="0"/><line nr="620" mi="0" ci="9" mb="0" cb="0"/><line nr="622" mi="0" ci="6" mb="0" cb="2"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="624" mi="0" ci="9" mb="0" cb="0"/><line nr="626" mi="0" ci="6" mb="0" cb="2"/><line nr="627" mi="0" ci="6" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="2"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="3" mb="0" cb="0"/><line nr="635" mi="0" ci="9" mb="0" cb="0"/><line nr="637" mi="0" ci="6" mb="1" cb="1"/><line nr="638" mi="6" ci="0" mb="0" cb="0"/><line nr="639" mi="0" ci="9" mb="0" cb="0"/><line nr="641" mi="0" ci="6" mb="0" cb="2"/><line nr="642" mi="0" ci="6" mb="0" cb="0"/><line nr="643" mi="0" ci="9" mb="0" cb="0"/><line nr="645" mi="0" ci="6" mb="0" cb="2"/><line nr="646" mi="0" ci="6" mb="0" cb="0"/><line nr="647" mi="0" ci="6" mb="0" cb="2"/><line nr="648" mi="0" ci="6" mb="0" cb="0"/><line nr="649" mi="0" ci="9" mb="0" cb="0"/><line nr="651" mi="0" ci="9" mb="0" cb="0"/><line nr="653" mi="0" ci="9" mb="0" cb="0"/><line nr="655" mi="0" ci="9" mb="0" cb="0"/><line nr="659" mi="0" ci="7" mb="0" cb="0"/><line nr="662" mi="0" ci="20" mb="0" cb="2"/><line nr="663" mi="0" ci="7" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="665" mi="1" ci="0" mb="0" cb="0"/><line nr="666" mi="7" ci="0" mb="0" cb="0"/><line nr="667" mi="2" ci="0" mb="0" cb="0"/><line nr="668" mi="0" ci="1" mb="0" cb="0"/><line nr="669" mi="0" ci="3" mb="0" cb="15"/><line nr="672" mi="0" ci="7" mb="0" cb="0"/><line nr="674" mi="0" ci="7" mb="0" cb="0"/><line nr="676" mi="0" ci="6" mb="0" cb="2"/><line nr="677" mi="0" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="6" mb="0" cb="2"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="680" mi="0" ci="7" mb="0" cb="0"/><line nr="682" mi="0" ci="6" mb="0" cb="2"/><line nr="683" mi="0" ci="6" mb="0" cb="0"/><line nr="684" mi="0" ci="7" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="688" mi="0" ci="6" mb="1" cb="1"/><line nr="689" mi="0" ci="6" mb="0" cb="0"/><line nr="692" mi="0" ci="6" mb="0" cb="2"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="697" mi="0" ci="7" mb="0" cb="0"/><line nr="699" mi="0" ci="7" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="2"/><line nr="702" mi="0" ci="6" mb="0" cb="0"/><line nr="703" mi="0" ci="7" mb="0" cb="0"/><line nr="705" mi="0" ci="6" mb="0" cb="2"/><line nr="706" mi="0" ci="6" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="2"/><line nr="708" mi="0" ci="6" mb="0" cb="0"/><line nr="709" mi="0" ci="7" mb="0" cb="0"/><line nr="711" mi="0" ci="6" mb="0" cb="2"/><line nr="712" mi="0" ci="6" mb="0" cb="0"/><line nr="713" mi="0" ci="6" mb="0" cb="2"/><line nr="714" mi="0" ci="6" mb="0" cb="0"/><line nr="715" mi="0" ci="6" mb="0" cb="2"/><line nr="716" mi="0" ci="6" mb="0" cb="0"/><line nr="717" mi="0" ci="7" mb="0" cb="0"/><line nr="719" mi="0" ci="7" mb="0" cb="0"/><line nr="721" mi="0" ci="7" mb="0" cb="0"/><line nr="723" mi="0" ci="6" mb="1" cb="1"/><line nr="725" mi="0" ci="3" mb="0" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="0" ci="7" mb="0" cb="0"/><line nr="732" mi="0" ci="7" mb="0" cb="0"/><line nr="735" mi="0" ci="14" mb="0" cb="2"/><line nr="736" mi="0" ci="7" mb="0" cb="0"/><line nr="737" mi="0" ci="5" mb="0" cb="0"/><line nr="738" mi="1" ci="0" mb="0" cb="0"/><line nr="739" mi="7" ci="0" mb="0" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="741" mi="0" ci="1" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="15"/><line nr="745" mi="0" ci="7" mb="0" cb="0"/><line nr="747" mi="0" ci="6" mb="0" cb="2"/><line nr="748" mi="0" ci="6" mb="0" cb="0"/><line nr="749" mi="0" ci="6" mb="0" cb="2"/><line nr="750" mi="0" ci="6" mb="0" cb="0"/><line nr="751" mi="0" ci="7" mb="0" cb="0"/><line nr="753" mi="0" ci="7" mb="0" cb="0"/><line nr="755" mi="0" ci="6" mb="0" cb="2"/><line nr="756" mi="0" ci="6" mb="0" cb="0"/><line nr="757" mi="0" ci="6" mb="0" cb="2"/><line nr="758" mi="0" ci="6" mb="0" cb="0"/><line nr="759" mi="0" ci="6" mb="1" cb="1"/><line nr="760" mi="0" ci="6" mb="0" cb="0"/><line nr="763" mi="0" ci="7" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="0" cb="0"/><line nr="767" mi="0" ci="6" mb="1" cb="1"/><line nr="768" mi="0" ci="6" mb="0" cb="0"/><line nr="771" mi="0" ci="7" mb="0" cb="0"/><line nr="773" mi="0" ci="7" mb="0" cb="0"/><line nr="775" mi="0" ci="7" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="2"/><line nr="778" mi="0" ci="6" mb="0" cb="0"/><line nr="779" mi="0" ci="7" mb="0" cb="0"/><line nr="781" mi="0" ci="7" mb="0" cb="0"/><line nr="783" mi="0" ci="6" mb="0" cb="2"/><line nr="784" mi="0" ci="6" mb="0" cb="0"/><line nr="787" mi="0" ci="6" mb="0" cb="2"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="6" mb="0" cb="2"/><line nr="790" mi="0" ci="6" mb="0" cb="0"/><line nr="791" mi="0" ci="7" mb="0" cb="0"/><line nr="795" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="14" mb="0" cb="2"/><line nr="799" mi="0" ci="7" mb="0" cb="0"/><line nr="800" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="1" ci="0" mb="0" cb="0"/><line nr="802" mi="7" ci="0" mb="0" cb="0"/><line nr="803" mi="2" ci="0" mb="0" cb="0"/><line nr="804" mi="0" ci="1" mb="0" cb="0"/><line nr="805" mi="0" ci="3" mb="0" cb="12"/><line nr="808" mi="0" ci="7" mb="0" cb="0"/><line nr="810" mi="0" ci="7" mb="0" cb="0"/><line nr="812" mi="0" ci="6" mb="0" cb="2"/><line nr="813" mi="0" ci="6" mb="0" cb="0"/><line nr="814" mi="0" ci="6" mb="0" cb="2"/><line nr="815" mi="0" ci="6" mb="0" cb="0"/><line nr="816" mi="0" ci="7" mb="0" cb="0"/><line nr="818" mi="0" ci="7" mb="0" cb="0"/><line nr="820" mi="0" ci="7" mb="0" cb="0"/><line nr="822" mi="0" ci="6" mb="1" cb="1"/><line nr="823" mi="0" ci="6" mb="0" cb="0"/><line nr="826" mi="0" ci="7" mb="0" cb="0"/><line nr="828" mi="0" ci="6" mb="0" cb="2"/><line nr="829" mi="0" ci="6" mb="0" cb="0"/><line nr="830" mi="0" ci="6" mb="1" cb="1"/><line nr="831" mi="0" ci="6" mb="0" cb="0"/><line nr="834" mi="0" ci="6" mb="0" cb="2"/><line nr="835" mi="0" ci="6" mb="0" cb="0"/><line nr="836" mi="0" ci="7" mb="0" cb="0"/><line nr="838" mi="0" ci="7" mb="0" cb="0"/><line nr="840" mi="0" ci="6" mb="1" cb="1"/><line nr="841" mi="0" ci="6" mb="0" cb="0"/><line nr="846" mi="0" ci="7" mb="0" cb="0"/><line nr="849" mi="0" ci="14" mb="0" cb="2"/><line nr="850" mi="0" ci="7" mb="0" cb="0"/><line nr="851" mi="0" ci="5" mb="0" cb="0"/><line nr="852" mi="1" ci="0" mb="0" cb="0"/><line nr="853" mi="7" ci="0" mb="0" cb="0"/><line nr="854" mi="2" ci="0" mb="0" cb="0"/><line nr="855" mi="0" ci="1" mb="0" cb="0"/><line nr="856" mi="0" ci="3" mb="0" cb="8"/><line nr="859" mi="0" ci="7" mb="0" cb="0"/><line nr="861" mi="0" ci="6" mb="0" cb="2"/><line nr="862" mi="0" ci="6" mb="0" cb="0"/><line nr="863" mi="0" ci="6" mb="0" cb="2"/><line nr="864" mi="0" ci="6" mb="0" cb="0"/><line nr="865" mi="0" ci="7" mb="0" cb="0"/><line nr="867" mi="0" ci="7" mb="0" cb="0"/><line nr="869" mi="0" ci="7" mb="0" cb="0"/><line nr="871" mi="0" ci="6" mb="1" cb="1"/><line nr="872" mi="0" ci="6" mb="0" cb="0"/><line nr="875" mi="0" ci="6" mb="0" cb="2"/><line nr="876" mi="0" ci="6" mb="0" cb="0"/><line nr="877" mi="0" ci="6" mb="1" cb="1"/><line nr="878" mi="0" ci="6" mb="0" cb="0"/><line nr="881" mi="0" ci="6" mb="1" cb="1"/><line nr="882" mi="0" ci="6" mb="0" cb="0"/><line nr="887" mi="0" ci="7" mb="0" cb="0"/><line nr="890" mi="0" ci="14" mb="1" cb="1"/><line nr="891" mi="7" ci="0" mb="0" cb="0"/><line nr="892" mi="0" ci="5" mb="0" cb="0"/><line nr="893" mi="1" ci="0" mb="0" cb="0"/><line nr="894" mi="7" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="897" mi="0" ci="3" mb="0" cb="7"/><line nr="900" mi="0" ci="6" mb="1" cb="1"/><line nr="901" mi="0" ci="6" mb="0" cb="0"/><line nr="904" mi="0" ci="6" mb="1" cb="1"/><line nr="905" mi="0" ci="6" mb="0" cb="0"/><line nr="908" mi="0" ci="7" mb="0" cb="0"/><line nr="910" mi="0" ci="7" mb="0" cb="0"/><line nr="912" mi="0" ci="6" mb="0" cb="2"/><line nr="913" mi="0" ci="6" mb="0" cb="0"/><line nr="914" mi="0" ci="7" mb="0" cb="0"/><line nr="916" mi="0" ci="7" mb="0" cb="0"/><line nr="920" mi="0" ci="7" mb="0" cb="0"/><line nr="923" mi="0" ci="14" mb="1" cb="1"/><line nr="924" mi="7" ci="0" mb="0" cb="0"/><line nr="925" mi="0" ci="5" mb="0" cb="0"/><line nr="926" mi="1" ci="0" mb="0" cb="0"/><line nr="927" mi="7" ci="0" mb="0" cb="0"/><line nr="928" mi="2" ci="0" mb="0" cb="0"/><line nr="929" mi="0" ci="1" mb="0" cb="0"/><line nr="930" mi="0" ci="3" mb="0" cb="5"/><line nr="933" mi="0" ci="6" mb="0" cb="2"/><line nr="934" mi="0" ci="6" mb="0" cb="0"/><line nr="937" mi="0" ci="6" mb="1" cb="1"/><line nr="938" mi="0" ci="6" mb="0" cb="0"/><line nr="941" mi="0" ci="6" mb="1" cb="1"/><line nr="942" mi="0" ci="6" mb="0" cb="0"/><line nr="945" mi="0" ci="7" mb="0" cb="0"/><line nr="949" mi="0" ci="7" mb="0" cb="0"/><line nr="952" mi="0" ci="14" mb="0" cb="2"/><line nr="953" mi="0" ci="7" mb="0" cb="0"/><line nr="954" mi="0" ci="5" mb="0" cb="0"/><line nr="955" mi="1" ci="0" mb="0" cb="0"/><line nr="956" mi="7" ci="0" mb="0" cb="0"/><line nr="957" mi="2" ci="0" mb="0" cb="0"/><line nr="958" mi="0" ci="1" mb="0" cb="0"/><line nr="959" mi="0" ci="3" mb="1" cb="1"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><line nr="966" mi="7" ci="0" mb="0" cb="0"/><line nr="969" mi="0" ci="8" mb="1" cb="1"/><line nr="970" mi="7" ci="0" mb="0" cb="0"/><line nr="971" mi="0" ci="5" mb="0" cb="0"/><line nr="972" mi="1" ci="0" mb="0" cb="0"/><line nr="973" mi="7" ci="0" mb="0" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="975" mi="0" ci="1" mb="0" cb="0"/><line nr="976" mi="0" ci="3" mb="1" cb="1"/><line nr="979" mi="0" ci="6" mb="1" cb="1"/><line nr="980" mi="0" ci="6" mb="0" cb="0"/><line nr="985" mi="7" ci="0" mb="0" cb="0"/><line nr="989" mi="0" ci="3" mb="0" cb="0"/><line nr="990" mi="0" ci="3" mb="0" cb="0"/><line nr="991" mi="0" ci="5" mb="0" cb="0"/><line nr="992" mi="0" ci="6" mb="0" cb="0"/><line nr="993" mi="0" ci="7" mb="0" cb="0"/><line nr="995" mi="0" ci="19" mb="0" cb="0"/><line nr="998" mi="0" ci="19" mb="0" cb="0"/><line nr="1001" mi="0" ci="19" mb="0" cb="0"/><line nr="1004" mi="0" ci="19" mb="0" cb="0"/><line nr="1007" mi="0" ci="19" mb="0" cb="0"/><line nr="1010" mi="0" ci="19" mb="0" cb="0"/><line nr="1013" mi="0" ci="19" mb="0" cb="0"/><line nr="1016" mi="0" ci="19" mb="0" cb="0"/><line nr="1019" mi="0" ci="19" mb="0" cb="0"/><line nr="1022" mi="0" ci="19" mb="0" cb="0"/><line nr="1025" mi="0" ci="19" mb="0" cb="0"/><line nr="1028" mi="0" ci="19" mb="0" cb="0"/><line nr="1031" mi="0" ci="19" mb="0" cb="0"/><line nr="1034" mi="0" ci="19" mb="0" cb="0"/><line nr="1037" mi="0" ci="19" mb="0" cb="0"/><line nr="1040" mi="0" ci="19" mb="0" cb="0"/><line nr="1043" mi="0" ci="19" mb="0" cb="0"/><line nr="1046" mi="0" ci="19" mb="0" cb="0"/><line nr="1049" mi="0" ci="19" mb="0" cb="0"/><line nr="1052" mi="0" ci="19" mb="0" cb="0"/><line nr="1055" mi="0" ci="19" mb="0" cb="0"/><line nr="1058" mi="0" ci="19" mb="0" cb="0"/><line nr="1061" mi="0" ci="19" mb="0" cb="0"/><line nr="1064" mi="0" ci="19" mb="0" cb="0"/><line nr="1067" mi="0" ci="19" mb="0" cb="0"/><line nr="1070" mi="0" ci="19" mb="0" cb="0"/><line nr="1073" mi="0" ci="19" mb="0" cb="0"/><line nr="1076" mi="0" ci="19" mb="0" cb="0"/><line nr="1079" mi="0" ci="19" mb="0" cb="0"/><line nr="1082" mi="0" ci="19" mb="0" cb="0"/><line nr="1085" mi="0" ci="19" mb="0" cb="0"/><line nr="1088" mi="0" ci="19" mb="0" cb="0"/><line nr="1091" mi="0" ci="19" mb="0" cb="0"/><line nr="1094" mi="0" ci="19" mb="0" cb="0"/><line nr="1097" mi="0" ci="19" mb="0" cb="0"/><line nr="1100" mi="0" ci="19" mb="0" cb="0"/><line nr="1103" mi="0" ci="19" mb="0" cb="0"/><line nr="1106" mi="0" ci="19" mb="0" cb="0"/><line nr="1109" mi="0" ci="19" mb="0" cb="0"/><line nr="1112" mi="0" ci="19" mb="0" cb="0"/><line nr="1115" mi="0" ci="19" mb="0" cb="0"/><line nr="1118" mi="0" ci="19" mb="0" cb="0"/><line nr="1121" mi="0" ci="19" mb="0" cb="0"/><line nr="1124" mi="0" ci="19" mb="0" cb="0"/><line nr="1127" mi="0" ci="19" mb="0" cb="0"/><line nr="1130" mi="0" ci="19" mb="0" cb="0"/><line nr="1133" mi="0" ci="19" mb="0" cb="0"/><line nr="1136" mi="0" ci="19" mb="0" cb="0"/><line nr="1139" mi="0" ci="19" mb="0" cb="0"/><line nr="1142" mi="0" ci="19" mb="0" cb="0"/><line nr="1145" mi="0" ci="19" mb="0" cb="0"/><line nr="1148" mi="0" ci="19" mb="0" cb="0"/><line nr="1151" mi="0" ci="19" mb="0" cb="0"/><line nr="1154" mi="0" ci="19" mb="0" cb="0"/><line nr="1157" mi="0" ci="19" mb="0" cb="0"/><line nr="1160" mi="0" ci="19" mb="0" cb="0"/><line nr="1163" mi="0" ci="19" mb="0" cb="0"/><line nr="1166" mi="0" ci="19" mb="0" cb="0"/><line nr="1169" mi="0" ci="19" mb="0" cb="0"/><line nr="1172" mi="0" ci="19" mb="0" cb="0"/><line nr="1175" mi="0" ci="19" mb="0" cb="0"/><line nr="1178" mi="0" ci="19" mb="0" cb="0"/><line nr="1181" mi="0" ci="19" mb="0" cb="0"/><line nr="1184" mi="0" ci="19" mb="0" cb="0"/><line nr="1187" mi="0" ci="19" mb="0" cb="0"/><line nr="1190" mi="0" ci="19" mb="0" cb="0"/><line nr="1193" mi="0" ci="19" mb="0" cb="0"/><line nr="1196" mi="0" ci="19" mb="0" cb="0"/><line nr="1199" mi="0" ci="19" mb="0" cb="0"/><line nr="1202" mi="0" ci="19" mb="0" cb="0"/><line nr="1205" mi="0" ci="19" mb="0" cb="0"/><line nr="1208" mi="0" ci="19" mb="0" cb="0"/><line nr="1211" mi="0" ci="19" mb="0" cb="0"/><line nr="1214" mi="0" ci="19" mb="0" cb="0"/><line nr="1217" mi="0" ci="19" mb="0" cb="0"/><line nr="1220" mi="0" ci="19" mb="0" cb="0"/><line nr="1223" mi="0" ci="19" mb="0" cb="0"/><line nr="1226" mi="0" ci="19" mb="0" cb="0"/><line nr="1229" mi="0" ci="19" mb="0" cb="0"/><line nr="1232" mi="0" ci="19" mb="0" cb="0"/><line nr="1235" mi="0" ci="19" mb="0" cb="0"/><line nr="1238" mi="0" ci="19" mb="0" cb="0"/><line nr="1241" mi="0" ci="19" mb="0" cb="0"/><line nr="1244" mi="0" ci="19" mb="0" cb="0"/><line nr="1247" mi="0" ci="19" mb="0" cb="0"/><line nr="1250" mi="0" ci="19" mb="0" cb="0"/><line nr="1253" mi="0" ci="19" mb="0" cb="0"/><line nr="1256" mi="0" ci="19" mb="0" cb="0"/><line nr="1259" mi="0" ci="19" mb="0" cb="0"/><line nr="1262" mi="0" ci="19" mb="0" cb="0"/><line nr="1265" mi="0" ci="19" mb="0" cb="0"/><line nr="1268" mi="0" ci="19" mb="0" cb="0"/><line nr="1271" mi="0" ci="19" mb="0" cb="0"/><line nr="1276" mi="0" ci="2" mb="0" cb="0"/><line nr="1277" mi="0" ci="3" mb="0" cb="0"/><line nr="1278" mi="0" ci="2" mb="0" cb="0"/><line nr="1279" mi="0" ci="5" mb="0" cb="0"/><line nr="1280" mi="0" ci="2" mb="0" cb="0"/><line nr="1283" mi="0" ci="9" mb="1" cb="1"/><line nr="1284" mi="2" ci="0" mb="0" cb="0"/><line nr="1285" mi="0" ci="4" mb="0" cb="2"/><line nr="1287" mi="0" ci="5" mb="0" cb="0"/><line nr="1290" mi="0" ci="6" mb="21" cb="96"/><line nr="1294" mi="0" ci="6" mb="0" cb="2"/><line nr="1295" mi="0" ci="1" mb="0" cb="0"/><line nr="1296" mi="0" ci="3" mb="1" cb="1"/><line nr="1297" mi="0" ci="2" mb="0" cb="0"/><line nr="1298" mi="0" ci="4" mb="0" cb="0"/><line nr="1299" mi="0" ci="1" mb="0" cb="0"/><line nr="1301" mi="0" ci="4" mb="1" cb="1"/><line nr="1302" mi="12" ci="0" mb="0" cb="0"/><line nr="1303" mi="0" ci="4" mb="0" cb="2"/><line nr="1305" mi="0" ci="3" mb="1" cb="1"/><line nr="1306" mi="0" ci="2" mb="0" cb="0"/><line nr="1307" mi="0" ci="5" mb="0" cb="0"/><line nr="1311" mi="0" ci="6" mb="0" cb="2"/><line nr="1313" mi="0" ci="3" mb="1" cb="1"/><line nr="1314" mi="0" ci="2" mb="0" cb="0"/><line nr="1315" mi="0" ci="5" mb="0" cb="0"/><line nr="1317" mi="0" ci="6" mb="0" cb="2"/><line nr="1319" mi="0" ci="3" mb="1" cb="1"/><line nr="1320" mi="0" ci="3" mb="0" cb="0"/><line nr="1322" mi="0" ci="4" mb="1" cb="1"/><line nr="1323" mi="5" ci="0" mb="0" cb="0"/><line nr="1324" mi="0" ci="4" mb="1" cb="1"/><line nr="1326" mi="3" ci="0" mb="2" cb="0"/><line nr="1327" mi="2" ci="0" mb="0" cb="0"/><line nr="1328" mi="5" ci="0" mb="0" cb="0"/><line nr="1330" mi="0" ci="4" mb="0" cb="2"/><line nr="1331" mi="0" ci="5" mb="0" cb="0"/><line nr="1332" mi="0" ci="4" mb="1" cb="1"/><line nr="1333" mi="0" ci="5" mb="0" cb="0"/><line nr="1334" mi="4" ci="0" mb="2" cb="0"/><line nr="1335" mi="11" ci="0" mb="0" cb="0"/><line nr="1336" mi="0" ci="4" mb="0" cb="2"/><line nr="1337" mi="0" ci="5" mb="0" cb="0"/><line nr="1340" mi="4" ci="0" mb="2" cb="0"/><line nr="1341" mi="12" ci="0" mb="0" cb="0"/><line nr="1344" mi="0" ci="6" mb="1" cb="1"/><line nr="1345" mi="0" ci="1" mb="0" cb="0"/><line nr="1346" mi="3" ci="0" mb="2" cb="0"/><line nr="1347" mi="2" ci="0" mb="0" cb="0"/><line nr="1348" mi="4" ci="0" mb="0" cb="0"/><line nr="1349" mi="1" ci="0" mb="0" cb="0"/><line nr="1351" mi="6" ci="0" mb="2" cb="0"/><line nr="1352" mi="5" ci="0" mb="0" cb="0"/><line nr="1355" mi="6" ci="0" mb="2" cb="0"/><line nr="1356" mi="1" ci="0" mb="0" cb="0"/><line nr="1357" mi="3" ci="0" mb="2" cb="0"/><line nr="1358" mi="2" ci="0" mb="0" cb="0"/><line nr="1359" mi="4" ci="0" mb="0" cb="0"/><line nr="1360" mi="1" ci="0" mb="0" cb="0"/><line nr="1362" mi="6" ci="0" mb="2" cb="0"/><line nr="1363" mi="4" ci="0" mb="0" cb="0"/><line nr="1366" mi="6" ci="0" mb="2" cb="0"/><line nr="1367" mi="1" ci="0" mb="0" cb="0"/><line nr="1368" mi="3" ci="0" mb="2" cb="0"/><line nr="1369" mi="2" ci="0" mb="0" cb="0"/><line nr="1370" mi="4" ci="0" mb="0" cb="0"/><line nr="1371" mi="1" ci="0" mb="0" cb="0"/><line nr="1373" mi="6" ci="0" mb="2" cb="0"/><line nr="1374" mi="5" ci="0" mb="0" cb="0"/><line nr="1377" mi="6" ci="0" mb="2" cb="0"/><line nr="1378" mi="1" ci="0" mb="0" cb="0"/><line nr="1379" mi="3" ci="0" mb="2" cb="0"/><line nr="1380" mi="2" ci="0" mb="0" cb="0"/><line nr="1381" mi="4" ci="0" mb="0" cb="0"/><line nr="1382" mi="1" ci="0" mb="0" cb="0"/><line nr="1384" mi="6" ci="0" mb="2" cb="0"/><line nr="1385" mi="1" ci="0" mb="0" cb="0"/><line nr="1386" mi="3" ci="0" mb="2" cb="0"/><line nr="1387" mi="2" ci="0" mb="0" cb="0"/><line nr="1388" mi="4" ci="0" mb="0" cb="0"/><line nr="1389" mi="1" ci="0" mb="0" cb="0"/><line nr="1391" mi="4" ci="0" mb="2" cb="0"/><line nr="1392" mi="5" ci="0" mb="0" cb="0"/><line nr="1395" mi="0" ci="6" mb="0" cb="2"/><line nr="1396" mi="0" ci="4" mb="0" cb="0"/><line nr="1399" mi="0" ci="7" mb="1" cb="3"/><line nr="1400" mi="0" ci="3" mb="0" cb="0"/><line nr="1403" mi="0" ci="6" mb="0" cb="2"/><line nr="1404" mi="0" ci="4" mb="0" cb="0"/><line nr="1407" mi="0" ci="6" mb="0" cb="2"/><line nr="1408" mi="0" ci="5" mb="0" cb="0"/><line nr="1411" mi="0" ci="6" mb="1" cb="1"/><line nr="1412" mi="0" ci="4" mb="0" cb="0"/><line nr="1415" mi="0" ci="6" mb="0" cb="2"/><line nr="1416" mi="0" ci="12" mb="0" cb="0"/><line nr="1419" mi="0" ci="6" mb="1" cb="1"/><line nr="1420" mi="0" ci="4" mb="0" cb="0"/><line nr="1423" mi="0" ci="6" mb="1" cb="1"/><line nr="1424" mi="0" ci="12" mb="0" cb="0"/><line nr="1427" mi="0" ci="6" mb="1" cb="1"/><line nr="1428" mi="0" ci="12" mb="0" cb="0"/><line nr="1431" mi="6" ci="0" mb="2" cb="0"/><line nr="1432" mi="12" ci="0" mb="0" cb="0"/><line nr="1435" mi="0" ci="6" mb="1" cb="1"/><line nr="1436" mi="0" ci="4" mb="0" cb="0"/><line nr="1439" mi="4" ci="0" mb="2" cb="0"/><line nr="1440" mi="5" ci="0" mb="0" cb="0"/><line nr="1443" mi="0" ci="6" mb="0" cb="2"/><line nr="1444" mi="0" ci="5" mb="0" cb="0"/><line nr="1447" mi="0" ci="6" mb="0" cb="2"/><line nr="1448" mi="0" ci="5" mb="0" cb="0"/><line nr="1451" mi="0" ci="6" mb="1" cb="1"/><line nr="1452" mi="0" ci="12" mb="0" cb="0"/><line nr="1455" mi="0" ci="6" mb="1" cb="1"/><line nr="1456" mi="0" ci="12" mb="0" cb="0"/><line nr="1459" mi="6" ci="0" mb="2" cb="0"/><line nr="1460" mi="12" ci="0" mb="0" cb="0"/><line nr="1463" mi="0" ci="6" mb="1" cb="1"/><line nr="1464" mi="0" ci="5" mb="0" cb="0"/><line nr="1467" mi="0" ci="7" mb="1" cb="3"/><line nr="1468" mi="0" ci="3" mb="0" cb="0"/><line nr="1471" mi="0" ci="6" mb="0" cb="2"/><line nr="1472" mi="0" ci="5" mb="0" cb="0"/><line nr="1475" mi="0" ci="6" mb="0" cb="2"/><line nr="1476" mi="0" ci="5" mb="0" cb="0"/><line nr="1479" mi="0" ci="6" mb="0" cb="2"/><line nr="1480" mi="0" ci="12" mb="0" cb="0"/><line nr="1483" mi="0" ci="6" mb="0" cb="2"/><line nr="1484" mi="0" ci="4" mb="0" cb="0"/><line nr="1487" mi="4" ci="0" mb="2" cb="0"/><line nr="1488" mi="1" ci="0" mb="0" cb="0"/><line nr="1489" mi="3" ci="0" mb="2" cb="0"/><line nr="1490" mi="2" ci="0" mb="0" cb="0"/><line nr="1491" mi="4" ci="0" mb="0" cb="0"/><line nr="1492" mi="1" ci="0" mb="0" cb="0"/><line nr="1494" mi="0" ci="6" mb="1" cb="1"/><line nr="1495" mi="0" ci="12" mb="0" cb="0"/><line nr="1498" mi="0" ci="6" mb="1" cb="1"/><line nr="1499" mi="0" ci="12" mb="0" cb="0"/><line nr="1503" mi="0" ci="6" mb="1" cb="1"/><line nr="1504" mi="0" ci="4" mb="0" cb="0"/><line nr="1507" mi="0" ci="6" mb="1" cb="1"/><line nr="1508" mi="1" ci="0" mb="0" cb="0"/><line nr="1509" mi="0" ci="3" mb="1" cb="1"/><line nr="1510" mi="0" ci="2" mb="0" cb="0"/><line nr="1511" mi="0" ci="4" mb="0" cb="0"/><line nr="1512" mi="0" ci="1" mb="0" cb="0"/><line nr="1514" mi="6" ci="0" mb="2" cb="0"/><line nr="1515" mi="12" ci="0" mb="0" cb="0"/><line nr="1518" mi="6" ci="0" mb="2" cb="0"/><line nr="1519" mi="12" ci="0" mb="0" cb="0"/><line nr="1522" mi="4" ci="0" mb="2" cb="0"/><line nr="1523" mi="5" ci="0" mb="0" cb="0"/><line nr="1526" mi="0" ci="6" mb="0" cb="2"/><line nr="1527" mi="0" ci="1" mb="0" cb="0"/><line nr="1528" mi="0" ci="3" mb="1" cb="1"/><line nr="1529" mi="0" ci="2" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="0"/><line nr="1531" mi="0" ci="1" mb="0" cb="0"/><line nr="1533" mi="0" ci="9" mb="1" cb="3"/><line nr="1534" mi="0" ci="3" mb="0" cb="0"/><line nr="1537" mi="0" ci="7" mb="2" cb="2"/><line nr="1538" mi="0" ci="3" mb="0" cb="0"/><line nr="1541" mi="0" ci="4" mb="0" cb="2"/><line nr="1542" mi="0" ci="12" mb="0" cb="0"/><line nr="1545" mi="0" ci="4" mb="0" cb="2"/><line nr="1546" mi="0" ci="12" mb="0" cb="0"/><line nr="1549" mi="0" ci="9" mb="2" cb="2"/><line nr="1550" mi="0" ci="3" mb="0" cb="0"/><line nr="1553" mi="4" ci="0" mb="2" cb="0"/><line nr="1554" mi="12" ci="0" mb="0" cb="0"/><line nr="1557" mi="6" ci="0" mb="2" cb="0"/><line nr="1558" mi="1" ci="0" mb="0" cb="0"/><line nr="1559" mi="3" ci="0" mb="2" cb="0"/><line nr="1560" mi="2" ci="0" mb="0" cb="0"/><line nr="1561" mi="4" ci="0" mb="0" cb="0"/><line nr="1562" mi="1" ci="0" mb="0" cb="0"/><line nr="1564" mi="0" ci="6" mb="0" cb="2"/><line nr="1565" mi="0" ci="5" mb="0" cb="0"/><line nr="1569" mi="0" ci="6" mb="0" cb="2"/><line nr="1570" mi="0" ci="4" mb="0" cb="0"/><line nr="1573" mi="0" ci="6" mb="0" cb="2"/><line nr="1574" mi="0" ci="5" mb="0" cb="0"/><line nr="1578" mi="0" ci="9" mb="0" cb="4"/><line nr="1579" mi="0" ci="3" mb="0" cb="0"/><line nr="1582" mi="0" ci="6" mb="0" cb="2"/><line nr="1583" mi="0" ci="5" mb="0" cb="0"/><line nr="1586" mi="0" ci="6" mb="0" cb="2"/><line nr="1587" mi="0" ci="5" mb="0" cb="0"/><line nr="1590" mi="0" ci="6" mb="1" cb="1"/><line nr="1591" mi="4" ci="0" mb="0" cb="0"/><line nr="1594" mi="0" ci="6" mb="0" cb="2"/><line nr="1595" mi="0" ci="5" mb="0" cb="0"/><line nr="1598" mi="0" ci="6" mb="0" cb="2"/><line nr="1599" mi="0" ci="5" mb="0" cb="0"/><line nr="1602" mi="0" ci="6" mb="0" cb="2"/><line nr="1603" mi="0" ci="5" mb="0" cb="0"/><line nr="1606" mi="6" ci="0" mb="2" cb="0"/><line nr="1607" mi="5" ci="0" mb="0" cb="0"/><line nr="1610" mi="0" ci="6" mb="0" cb="2"/><line nr="1611" mi="0" ci="5" mb="0" cb="0"/><line nr="1614" mi="0" ci="6" mb="0" cb="2"/><line nr="1615" mi="0" ci="4" mb="0" cb="0"/><line nr="1618" mi="0" ci="6" mb="1" cb="1"/><line nr="1619" mi="4" ci="0" mb="0" cb="0"/><line nr="1622" mi="0" ci="6" mb="0" cb="2"/><line nr="1623" mi="0" ci="1" mb="0" cb="0"/><line nr="1624" mi="0" ci="3" mb="1" cb="1"/><line nr="1625" mi="0" ci="2" mb="0" cb="0"/><line nr="1626" mi="0" ci="4" mb="0" cb="0"/><line nr="1627" mi="0" ci="1" mb="0" cb="0"/><line nr="1629" mi="0" ci="6" mb="0" cb="2"/><line nr="1630" mi="0" ci="5" mb="0" cb="0"/><line nr="1633" mi="0" ci="6" mb="0" cb="2"/><line nr="1634" mi="0" ci="1" mb="0" cb="0"/><line nr="1635" mi="0" ci="3" mb="1" cb="1"/><line nr="1636" mi="0" ci="2" mb="0" cb="0"/><line nr="1637" mi="0" ci="4" mb="0" cb="0"/><line nr="1638" mi="0" ci="1" mb="0" cb="0"/><line nr="1640" mi="6" ci="0" mb="2" cb="0"/><line nr="1641" mi="1" ci="0" mb="0" cb="0"/><line nr="1642" mi="3" ci="0" mb="2" cb="0"/><line nr="1643" mi="2" ci="0" mb="0" cb="0"/><line nr="1644" mi="4" ci="0" mb="0" cb="0"/><line nr="1645" mi="1" ci="0" mb="0" cb="0"/><line nr="1647" mi="0" ci="6" mb="0" cb="2"/><line nr="1648" mi="0" ci="5" mb="0" cb="0"/><line nr="1651" mi="0" ci="6" mb="0" cb="2"/><line nr="1652" mi="0" ci="4" mb="0" cb="0"/><line nr="1655" mi="0" ci="4" mb="0" cb="2"/><line nr="1656" mi="0" ci="1" mb="0" cb="0"/><line nr="1657" mi="0" ci="3" mb="1" cb="1"/><line nr="1658" mi="0" ci="2" mb="0" cb="0"/><line nr="1659" mi="0" ci="4" mb="0" cb="0"/><line nr="1660" mi="0" ci="1" mb="0" cb="0"/><line nr="1662" mi="0" ci="6" mb="1" cb="1"/><line nr="1663" mi="1" ci="0" mb="0" cb="0"/><line nr="1664" mi="0" ci="3" mb="1" cb="1"/><line nr="1665" mi="0" ci="2" mb="0" cb="0"/><line nr="1666" mi="0" ci="4" mb="0" cb="0"/><line nr="1667" mi="0" ci="1" mb="0" cb="0"/><line nr="1669" mi="0" ci="6" mb="0" cb="2"/><line nr="1670" mi="0" ci="5" mb="0" cb="0"/><line nr="1673" mi="0" ci="6" mb="0" cb="2"/><line nr="1674" mi="0" ci="1" mb="0" cb="0"/><line nr="1675" mi="0" ci="3" mb="1" cb="1"/><line nr="1676" mi="0" ci="2" mb="0" cb="0"/><line nr="1677" mi="0" ci="4" mb="0" cb="0"/><line nr="1678" mi="0" ci="1" mb="0" cb="0"/><line nr="1680" mi="0" ci="6" mb="0" cb="2"/><line nr="1681" mi="0" ci="4" mb="0" cb="0"/><line nr="1684" mi="0" ci="6" mb="0" cb="2"/><line nr="1685" mi="0" ci="1" mb="0" cb="0"/><line nr="1686" mi="0" ci="3" mb="0" cb="2"/><line nr="1687" mi="0" ci="2" mb="0" cb="0"/><line nr="1688" mi="0" ci="4" mb="0" cb="0"/><line nr="1689" mi="0" ci="1" mb="0" cb="0"/><line nr="1691" mi="0" ci="6" mb="0" cb="2"/><line nr="1692" mi="0" ci="5" mb="0" cb="0"/><line nr="1695" mi="0" ci="6" mb="0" cb="2"/><line nr="1696" mi="0" ci="1" mb="0" cb="0"/><line nr="1697" mi="0" ci="3" mb="1" cb="1"/><line nr="1698" mi="0" ci="2" mb="0" cb="0"/><line nr="1699" mi="0" ci="4" mb="0" cb="0"/><line nr="1700" mi="0" ci="1" mb="0" cb="0"/><line nr="1702" mi="0" ci="6" mb="0" cb="2"/><line nr="1703" mi="0" ci="1" mb="0" cb="0"/><line nr="1704" mi="0" ci="3" mb="0" cb="2"/><line nr="1705" mi="0" ci="2" mb="0" cb="0"/><line nr="1706" mi="0" ci="4" mb="0" cb="0"/><line nr="1707" mi="0" ci="1" mb="0" cb="0"/><line nr="1709" mi="4" ci="0" mb="2" cb="0"/><line nr="1710" mi="5" ci="0" mb="0" cb="0"/><line nr="1713" mi="0" ci="6" mb="0" cb="2"/><line nr="1714" mi="0" ci="5" mb="0" cb="0"/><line nr="1717" mi="0" ci="6" mb="0" cb="2"/><line nr="1718" mi="0" ci="5" mb="0" cb="0"/><line nr="1721" mi="0" ci="6" mb="0" cb="2"/><line nr="1722" mi="0" ci="5" mb="0" cb="0"/><line nr="1725" mi="0" ci="6" mb="0" cb="2"/><line nr="1726" mi="0" ci="5" mb="0" cb="0"/><line nr="1729" mi="0" ci="6" mb="0" cb="2"/><line nr="1730" mi="0" ci="4" mb="0" cb="0"/><line nr="1733" mi="0" ci="6" mb="1" cb="1"/><line nr="1734" mi="0" ci="5" mb="0" cb="0"/><line nr="1737" mi="0" ci="6" mb="0" cb="2"/><line nr="1738" mi="0" ci="5" mb="0" cb="0"/><line nr="1741" mi="0" ci="6" mb="0" cb="2"/><line nr="1742" mi="0" ci="4" mb="0" cb="0"/><line nr="1745" mi="0" ci="6" mb="0" cb="2"/><line nr="1746" mi="0" ci="1" mb="0" cb="0"/><line nr="1747" mi="0" ci="3" mb="1" cb="1"/><line nr="1748" mi="0" ci="2" mb="0" cb="0"/><line nr="1749" mi="0" ci="4" mb="0" cb="0"/><line nr="1750" mi="0" ci="1" mb="0" cb="0"/><line nr="1752" mi="0" ci="6" mb="0" cb="2"/><line nr="1753" mi="0" ci="5" mb="0" cb="0"/><line nr="1756" mi="0" ci="6" mb="0" cb="2"/><line nr="1757" mi="0" ci="1" mb="0" cb="0"/><line nr="1758" mi="0" ci="3" mb="1" cb="1"/><line nr="1759" mi="0" ci="2" mb="0" cb="0"/><line nr="1760" mi="0" ci="4" mb="0" cb="0"/><line nr="1761" mi="0" ci="1" mb="0" cb="0"/><line nr="1763" mi="0" ci="6" mb="0" cb="2"/><line nr="1764" mi="0" ci="5" mb="0" cb="0"/><line nr="1767" mi="0" ci="9" mb="0" cb="4"/><line nr="1768" mi="0" ci="3" mb="0" cb="0"/><line nr="1771" mi="0" ci="6" mb="1" cb="1"/><line nr="1772" mi="1" ci="0" mb="0" cb="0"/><line nr="1773" mi="0" ci="3" mb="1" cb="1"/><line nr="1774" mi="0" ci="2" mb="0" cb="0"/><line nr="1775" mi="0" ci="4" mb="0" cb="0"/><line nr="1776" mi="0" ci="1" mb="0" cb="0"/><line nr="1778" mi="0" ci="6" mb="0" cb="2"/><line nr="1779" mi="0" ci="5" mb="0" cb="0"/><line nr="1782" mi="0" ci="9" mb="1" cb="3"/><line nr="1783" mi="0" ci="3" mb="0" cb="0"/><line nr="1786" mi="0" ci="6" mb="0" cb="2"/><line nr="1787" mi="0" ci="5" mb="0" cb="0"/><line nr="1790" mi="0" ci="6" mb="0" cb="2"/><line nr="1791" mi="0" ci="5" mb="0" cb="0"/><line nr="1794" mi="0" ci="6" mb="0" cb="2"/><line nr="1795" mi="0" ci="4" mb="0" cb="0"/><line nr="1798" mi="0" ci="4" mb="0" cb="2"/><line nr="1799" mi="0" ci="12" mb="0" cb="0"/><line nr="1802" mi="0" ci="6" mb="1" cb="1"/><line nr="1803" mi="0" ci="5" mb="0" cb="0"/><line nr="1806" mi="0" ci="6" mb="1" cb="1"/><line nr="1807" mi="0" ci="5" mb="0" cb="0"/><line nr="1810" mi="0" ci="6" mb="1" cb="1"/><line nr="1811" mi="0" ci="4" mb="0" cb="0"/><line nr="1814" mi="0" ci="6" mb="0" cb="2"/><line nr="1815" mi="0" ci="12" mb="0" cb="0"/><line nr="1818" mi="0" ci="6" mb="0" cb="2"/><line nr="1819" mi="0" ci="1" mb="0" cb="0"/><line nr="1820" mi="0" ci="3" mb="1" cb="1"/><line nr="1821" mi="0" ci="2" mb="0" cb="0"/><line nr="1822" mi="0" ci="4" mb="0" cb="0"/><line nr="1823" mi="0" ci="1" mb="0" cb="0"/><line nr="1825" mi="0" ci="6" mb="0" cb="2"/><line nr="1826" mi="0" ci="5" mb="0" cb="0"/><line nr="1830" mi="0" ci="6" mb="0" cb="2"/><line nr="1831" mi="0" ci="1" mb="0" cb="0"/><line nr="1832" mi="0" ci="3" mb="1" cb="1"/><line nr="1833" mi="0" ci="2" mb="0" cb="0"/><line nr="1834" mi="0" ci="3" mb="0" cb="0"/><line nr="1835" mi="0" ci="1" mb="0" cb="0"/><line nr="1837" mi="0" ci="6" mb="0" cb="2"/><line nr="1838" mi="0" ci="5" mb="0" cb="0"/><line nr="1841" mi="0" ci="6" mb="0" cb="2"/><line nr="1842" mi="0" ci="5" mb="0" cb="0"/><line nr="1845" mi="0" ci="6" mb="0" cb="2"/><line nr="1846" mi="0" ci="5" mb="0" cb="0"/><line nr="1849" mi="0" ci="4" mb="0" cb="2"/><line nr="1850" mi="0" ci="4" mb="0" cb="0"/><line nr="1853" mi="0" ci="6" mb="1" cb="1"/><line nr="1854" mi="0" ci="12" mb="0" cb="0"/><line nr="1857" mi="0" ci="6" mb="0" cb="2"/><line nr="1858" mi="0" ci="1" mb="0" cb="0"/><line nr="1859" mi="0" ci="3" mb="1" cb="1"/><line nr="1860" mi="0" ci="2" mb="0" cb="0"/><line nr="1861" mi="0" ci="4" mb="0" cb="0"/><line nr="1862" mi="0" ci="1" mb="0" cb="0"/><line nr="1864" mi="0" ci="6" mb="1" cb="1"/><line nr="1865" mi="5" ci="0" mb="0" cb="0"/><line nr="1869" mi="0" ci="3" mb="0" cb="2"/><line nr="1870" mi="0" ci="1" mb="0" cb="0"/><line nr="1871" mi="0" ci="4" mb="0" cb="2"/><line nr="1873" mi="0" ci="7" mb="0" cb="0"/><line nr="1876" mi="0" ci="6" mb="16" cb="65"/><line nr="1879" mi="0" ci="6" mb="0" cb="2"/><line nr="1881" mi="0" ci="3" mb="1" cb="1"/><line nr="1882" mi="0" ci="2" mb="0" cb="0"/><line nr="1883" mi="0" ci="5" mb="0" cb="0"/><line nr="1885" mi="0" ci="4" mb="1" cb="1"/><line nr="1886" mi="12" ci="0" mb="0" cb="0"/><line nr="1889" mi="0" ci="6" mb="1" cb="1"/><line nr="1891" mi="0" ci="3" mb="1" cb="1"/><line nr="1892" mi="0" ci="2" mb="0" cb="0"/><line nr="1893" mi="0" ci="5" mb="0" cb="0"/><line nr="1895" mi="4" ci="0" mb="2" cb="0"/><line nr="1896" mi="12" ci="0" mb="0" cb="0"/><line nr="1899" mi="4" ci="0" mb="2" cb="0"/><line nr="1900" mi="5" ci="0" mb="0" cb="0"/><line nr="1903" mi="6" ci="0" mb="2" cb="0"/><line nr="1904" mi="5" ci="0" mb="0" cb="0"/><line nr="1907" mi="4" ci="0" mb="2" cb="0"/><line nr="1908" mi="5" ci="0" mb="0" cb="0"/><line nr="1911" mi="0" ci="9" mb="1" cb="3"/><line nr="1912" mi="0" ci="3" mb="0" cb="0"/><line nr="1915" mi="0" ci="6" mb="0" cb="2"/><line nr="1916" mi="0" ci="4" mb="0" cb="0"/><line nr="1919" mi="0" ci="4" mb="0" cb="2"/><line nr="1920" mi="0" ci="5" mb="0" cb="0"/><line nr="1923" mi="0" ci="6" mb="0" cb="2"/><line nr="1924" mi="0" ci="4" mb="0" cb="0"/><line nr="1927" mi="0" ci="4" mb="0" cb="2"/><line nr="1928" mi="0" ci="12" mb="0" cb="0"/><line nr="1931" mi="0" ci="6" mb="1" cb="1"/><line nr="1932" mi="0" ci="12" mb="0" cb="0"/><line nr="1935" mi="0" ci="6" mb="1" cb="1"/><line nr="1936" mi="0" ci="12" mb="0" cb="0"/><line nr="1939" mi="0" ci="6" mb="1" cb="1"/><line nr="1940" mi="0" ci="12" mb="0" cb="0"/><line nr="1943" mi="0" ci="6" mb="1" cb="1"/><line nr="1944" mi="0" ci="4" mb="0" cb="0"/><line nr="1947" mi="0" ci="4" mb="0" cb="2"/><line nr="1948" mi="0" ci="12" mb="0" cb="0"/><line nr="1951" mi="0" ci="6" mb="0" cb="2"/><line nr="1952" mi="0" ci="5" mb="0" cb="0"/><line nr="1955" mi="0" ci="4" mb="0" cb="2"/><line nr="1956" mi="0" ci="5" mb="0" cb="0"/><line nr="1959" mi="0" ci="6" mb="0" cb="2"/><line nr="1960" mi="0" ci="5" mb="0" cb="0"/><line nr="1963" mi="0" ci="4" mb="0" cb="2"/><line nr="1964" mi="0" ci="12" mb="0" cb="0"/><line nr="1967" mi="6" ci="0" mb="2" cb="0"/><line nr="1968" mi="12" ci="0" mb="0" cb="0"/><line nr="1971" mi="6" ci="0" mb="2" cb="0"/><line nr="1972" mi="12" ci="0" mb="0" cb="0"/><line nr="1975" mi="0" ci="6" mb="1" cb="1"/><line nr="1976" mi="0" ci="12" mb="0" cb="0"/><line nr="1979" mi="6" ci="0" mb="2" cb="0"/><line nr="1980" mi="5" ci="0" mb="0" cb="0"/><line nr="1983" mi="0" ci="4" mb="0" cb="2"/><line nr="1984" mi="0" ci="12" mb="0" cb="0"/><line nr="1987" mi="6" ci="0" mb="2" cb="0"/><line nr="1988" mi="1" ci="0" mb="0" cb="0"/><line nr="1989" mi="3" ci="0" mb="2" cb="0"/><line nr="1990" mi="2" ci="0" mb="0" cb="0"/><line nr="1991" mi="4" ci="0" mb="0" cb="0"/><line nr="1992" mi="1" ci="0" mb="0" cb="0"/><line nr="1994" mi="0" ci="6" mb="0" cb="2"/><line nr="1995" mi="0" ci="1" mb="0" cb="0"/><line nr="1996" mi="0" ci="3" mb="1" cb="1"/><line nr="1997" mi="0" ci="2" mb="0" cb="0"/><line nr="1998" mi="0" ci="4" mb="0" cb="0"/><line nr="1999" mi="0" ci="1" mb="0" cb="0"/><line nr="2001" mi="0" ci="4" mb="1" cb="1"/><line nr="2002" mi="0" ci="12" mb="0" cb="0"/><line nr="2005" mi="6" ci="0" mb="2" cb="0"/><line nr="2006" mi="12" ci="0" mb="0" cb="0"/><line nr="2009" mi="6" ci="0" mb="2" cb="0"/><line nr="2010" mi="12" ci="0" mb="0" cb="0"/><line nr="2014" mi="6" ci="0" mb="2" cb="0"/><line nr="2015" mi="4" ci="0" mb="0" cb="0"/><line nr="2018" mi="6" ci="0" mb="2" cb="0"/><line nr="2019" mi="1" ci="0" mb="0" cb="0"/><line nr="2020" mi="3" ci="0" mb="2" cb="0"/><line nr="2021" mi="2" ci="0" mb="0" cb="0"/><line nr="2022" mi="4" ci="0" mb="0" cb="0"/><line nr="2023" mi="1" ci="0" mb="0" cb="0"/><line nr="2025" mi="0" ci="4" mb="0" cb="2"/><line nr="2026" mi="0" ci="12" mb="0" cb="0"/><line nr="2029" mi="4" ci="0" mb="2" cb="0"/><line nr="2030" mi="12" ci="0" mb="0" cb="0"/><line nr="2033" mi="6" ci="0" mb="2" cb="0"/><line nr="2034" mi="12" ci="0" mb="0" cb="0"/><line nr="2037" mi="6" ci="0" mb="2" cb="0"/><line nr="2038" mi="12" ci="0" mb="0" cb="0"/><line nr="2041" mi="4" ci="0" mb="2" cb="0"/><line nr="2042" mi="12" ci="0" mb="0" cb="0"/><line nr="2045" mi="0" ci="3" mb="1" cb="1"/><line nr="2046" mi="0" ci="2" mb="0" cb="0"/><line nr="2047" mi="0" ci="4" mb="0" cb="0"/><line nr="2048" mi="0" ci="1" mb="0" cb="0"/><line nr="2050" mi="0" ci="3" mb="1" cb="1"/><line nr="2051" mi="0" ci="3" mb="0" cb="0"/><line nr="2054" mi="0" ci="4" mb="0" cb="2"/><line nr="2055" mi="0" ci="5" mb="0" cb="0"/><line nr="2058" mi="0" ci="9" mb="1" cb="3"/><line nr="2059" mi="0" ci="3" mb="0" cb="0"/><line nr="2062" mi="0" ci="4" mb="0" cb="2"/><line nr="2063" mi="0" ci="5" mb="0" cb="0"/><line nr="2066" mi="0" ci="4" mb="0" cb="2"/><line nr="2067" mi="0" ci="5" mb="0" cb="0"/><line nr="2070" mi="0" ci="6" mb="0" cb="2"/><line nr="2071" mi="0" ci="5" mb="0" cb="0"/><line nr="2074" mi="0" ci="4" mb="0" cb="2"/><line nr="2075" mi="0" ci="5" mb="0" cb="0"/><line nr="2078" mi="0" ci="4" mb="0" cb="2"/><line nr="2079" mi="0" ci="5" mb="0" cb="0"/><line nr="2082" mi="0" ci="6" mb="0" cb="2"/><line nr="2083" mi="0" ci="5" mb="0" cb="0"/><line nr="2086" mi="0" ci="4" mb="0" cb="2"/><line nr="2087" mi="0" ci="5" mb="0" cb="0"/><line nr="2090" mi="0" ci="4" mb="0" cb="2"/><line nr="2091" mi="0" ci="5" mb="0" cb="0"/><line nr="2094" mi="0" ci="4" mb="0" cb="2"/><line nr="2095" mi="0" ci="5" mb="0" cb="0"/><line nr="2098" mi="0" ci="6" mb="0" cb="2"/><line nr="2099" mi="0" ci="5" mb="0" cb="0"/><line nr="2102" mi="0" ci="4" mb="1" cb="1"/><line nr="2103" mi="5" ci="0" mb="0" cb="0"/><line nr="2106" mi="0" ci="6" mb="0" cb="2"/><line nr="2107" mi="0" ci="12" mb="0" cb="0"/><line nr="2110" mi="0" ci="6" mb="1" cb="1"/><line nr="2111" mi="0" ci="5" mb="0" cb="0"/><line nr="2114" mi="0" ci="6" mb="0" cb="2"/><line nr="2115" mi="0" ci="5" mb="0" cb="0"/><line nr="2118" mi="0" ci="6" mb="0" cb="2"/><line nr="2119" mi="0" ci="4" mb="0" cb="0"/><line nr="2122" mi="0" ci="4" mb="0" cb="2"/><line nr="2123" mi="0" ci="5" mb="0" cb="0"/><line nr="2126" mi="0" ci="6" mb="0" cb="2"/><line nr="2127" mi="0" ci="12" mb="0" cb="0"/><line nr="2130" mi="0" ci="4" mb="0" cb="2"/><line nr="2131" mi="0" ci="5" mb="0" cb="0"/><line nr="2134" mi="0" ci="6" mb="0" cb="2"/><line nr="2135" mi="0" ci="12" mb="0" cb="0"/><line nr="2138" mi="0" ci="6" mb="1" cb="1"/><line nr="2139" mi="1" ci="0" mb="0" cb="0"/><line nr="2140" mi="0" ci="3" mb="1" cb="1"/><line nr="2141" mi="0" ci="2" mb="0" cb="0"/><line nr="2142" mi="0" ci="4" mb="0" cb="0"/><line nr="2143" mi="0" ci="1" mb="0" cb="0"/><line nr="2145" mi="0" ci="6" mb="0" cb="2"/><line nr="2146" mi="0" ci="5" mb="0" cb="0"/><line nr="2149" mi="0" ci="9" mb="1" cb="3"/><line nr="2150" mi="0" ci="3" mb="0" cb="0"/><line nr="2153" mi="0" ci="4" mb="0" cb="2"/><line nr="2154" mi="0" ci="5" mb="0" cb="0"/><line nr="2157" mi="0" ci="6" mb="0" cb="2"/><line nr="2158" mi="0" ci="12" mb="0" cb="0"/><line nr="2161" mi="0" ci="4" mb="0" cb="2"/><line nr="2162" mi="0" ci="5" mb="0" cb="0"/><line nr="2165" mi="0" ci="6" mb="0" cb="2"/><line nr="2166" mi="0" ci="5" mb="0" cb="0"/><line nr="2169" mi="0" ci="6" mb="1" cb="1"/><line nr="2170" mi="0" ci="5" mb="0" cb="0"/><line nr="2173" mi="0" ci="6" mb="0" cb="2"/><line nr="2174" mi="0" ci="5" mb="0" cb="0"/><line nr="2177" mi="0" ci="6" mb="0" cb="2"/><line nr="2178" mi="0" ci="4" mb="0" cb="0"/><line nr="2181" mi="0" ci="6" mb="0" cb="2"/><line nr="2182" mi="0" ci="5" mb="0" cb="0"/><line nr="2185" mi="0" ci="6" mb="0" cb="2"/><line nr="2186" mi="0" ci="5" mb="0" cb="0"/><line nr="2189" mi="0" ci="6" mb="0" cb="2"/><line nr="2190" mi="0" ci="4" mb="0" cb="0"/><line nr="2193" mi="0" ci="6" mb="0" cb="2"/><line nr="2194" mi="0" ci="5" mb="0" cb="0"/><line nr="2197" mi="0" ci="4" mb="0" cb="2"/><line nr="2198" mi="0" ci="5" mb="0" cb="0"/><line nr="2201" mi="0" ci="6" mb="0" cb="2"/><line nr="2202" mi="0" ci="12" mb="0" cb="0"/><line nr="2205" mi="0" ci="6" mb="1" cb="1"/><line nr="2206" mi="0" ci="5" mb="0" cb="0"/><line nr="2209" mi="0" ci="6" mb="0" cb="2"/><line nr="2210" mi="0" ci="5" mb="0" cb="0"/><line nr="2213" mi="0" ci="6" mb="0" cb="2"/><line nr="2214" mi="0" ci="5" mb="0" cb="0"/><line nr="2217" mi="0" ci="6" mb="0" cb="2"/><line nr="2218" mi="0" ci="5" mb="0" cb="0"/><line nr="2221" mi="4" ci="0" mb="2" cb="0"/><line nr="2222" mi="5" ci="0" mb="0" cb="0"/><line nr="2226" mi="0" ci="3" mb="0" cb="2"/><line nr="2227" mi="0" ci="1" mb="0" cb="0"/><line nr="2230" mi="0" ci="5" mb="0" cb="0"/><line nr="2231" mi="0" ci="4" mb="0" cb="0"/><line nr="2232" mi="0" ci="6" mb="0" cb="0"/><line nr="2233" mi="0" ci="7" mb="0" cb="0"/><line nr="2234" mi="0" ci="7" mb="0" cb="0"/><line nr="2237" mi="0" ci="6" mb="2" cb="6"/><line nr="2241" mi="0" ci="7" mb="0" cb="2"/><line nr="2242" mi="0" ci="1" mb="0" cb="0"/><line nr="2243" mi="0" ci="3" mb="1" cb="1"/><line nr="2244" mi="0" ci="2" mb="0" cb="0"/><line nr="2245" mi="0" ci="4" mb="0" cb="0"/><line nr="2246" mi="0" ci="1" mb="0" cb="0"/><line nr="2248" mi="0" ci="7" mb="0" cb="2"/><line nr="2250" mi="0" ci="3" mb="1" cb="1"/><line nr="2251" mi="0" ci="2" mb="0" cb="0"/><line nr="2253" mi="0" ci="7" mb="1" cb="1"/><line nr="2255" mi="3" ci="0" mb="2" cb="0"/><line nr="2256" mi="2" ci="0" mb="0" cb="0"/><line nr="2257" mi="5" ci="0" mb="0" cb="0"/><line nr="2261" mi="0" ci="7" mb="1" cb="1"/><line nr="2262" mi="0" ci="12" mb="0" cb="0"/><line nr="2265" mi="0" ci="7" mb="1" cb="1"/><line nr="2266" mi="0" ci="5" mb="0" cb="0"/><line nr="2269" mi="7" ci="0" mb="2" cb="0"/><line nr="2270" mi="1" ci="0" mb="0" cb="0"/><line nr="2271" mi="3" ci="0" mb="2" cb="0"/><line nr="2272" mi="2" ci="0" mb="0" cb="0"/><line nr="2273" mi="4" ci="0" mb="0" cb="0"/><line nr="2274" mi="1" ci="0" mb="0" cb="0"/><line nr="2276" mi="0" ci="7" mb="1" cb="1"/><line nr="2277" mi="1" ci="0" mb="0" cb="0"/><line nr="2278" mi="0" ci="3" mb="1" cb="1"/><line nr="2279" mi="0" ci="2" mb="0" cb="0"/><line nr="2280" mi="0" ci="4" mb="0" cb="0"/><line nr="2281" mi="0" ci="1" mb="0" cb="0"/><line nr="2283" mi="10" ci="0" mb="4" cb="0"/><line nr="2284" mi="3" ci="0" mb="0" cb="0"/><line nr="2286" mi="0" ci="12" mb="3" cb="5"/><line nr="2288" mi="0" ci="3" mb="0" cb="2"/><line nr="2290" mi="0" ci="3" mb="0" cb="2"/><line nr="2292" mi="0" ci="3" mb="0" cb="0"/><line nr="2293" mi="0" ci="3" mb="0" cb="0"/><line nr="2294" mi="0" ci="2" mb="0" cb="0"/><line nr="2296" mi="0" ci="1" mb="0" cb="0"/><line nr="2297" mi="0" ci="13" mb="0" cb="2"/><line nr="2298" mi="0" ci="2" mb="0" cb="0"/><line nr="2299" mi="0" ci="5" mb="0" cb="0"/><line nr="2300" mi="0" ci="4" mb="0" cb="0"/><line nr="2304" mi="0" ci="3" mb="0" cb="2"/><line nr="2307" mi="0" ci="4" mb="0" cb="0"/><line nr="2309" mi="0" ci="2" mb="0" cb="0"/><line nr="2313" mi="0" ci="5" mb="0" cb="0"/><line nr="2314" mi="1" ci="0" mb="0" cb="0"/><line nr="2315" mi="2" ci="0" mb="0" cb="0"/><line nr="2316" mi="0" ci="1" mb="0" cb="0"/><line nr="2317" mi="0" ci="3" mb="0" cb="2"/><line nr="2320" mi="0" ci="6" mb="1" cb="1"/><line nr="2321" mi="0" ci="5" mb="0" cb="0"/><line nr="2324" mi="0" ci="2" mb="0" cb="0"/><line nr="2326" mi="2" ci="0" mb="0" cb="0"/><line nr="2329" mi="0" ci="3" mb="0" cb="2"/><line nr="2332" mi="0" ci="4" mb="0" cb="0"/><line nr="2334" mi="0" ci="2" mb="0" cb="0"/><line nr="2338" mi="0" ci="5" mb="0" cb="0"/><line nr="2339" mi="1" ci="0" mb="0" cb="0"/><line nr="2340" mi="2" ci="0" mb="0" cb="0"/><line nr="2341" mi="0" ci="1" mb="0" cb="0"/><line nr="2342" mi="0" ci="3" mb="0" cb="2"/><line nr="2345" mi="0" ci="6" mb="1" cb="1"/><line nr="2346" mi="0" ci="5" mb="0" cb="0"/><line nr="2349" mi="0" ci="2" mb="0" cb="0"/><line nr="2351" mi="2" ci="0" mb="0" cb="0"/><line nr="2355" mi="0" ci="575" mb="0" cb="0"/><line nr="2390" mi="0" ci="5" mb="0" cb="0"/><line nr="2391" mi="0" ci="8" mb="0" cb="2"/><line nr="2392" mi="0" ci="4" mb="0" cb="0"/><line nr="2393" mi="0" ci="4" mb="0" cb="0"/><line nr="2394" mi="0" ci="4" mb="0" cb="0"/><line nr="2395" mi="0" ci="4" mb="0" cb="0"/><line nr="2396" mi="0" ci="4" mb="0" cb="0"/><line nr="2397" mi="0" ci="4" mb="0" cb="0"/><line nr="2398" mi="0" ci="3" mb="0" cb="0"/><line nr="2400" mi="0" ci="3" mb="0" cb="0"/><line nr="2401" mi="0" ci="3" mb="0" cb="0"/><line nr="2402" mi="0" ci="3" mb="0" cb="0"/><line nr="2403" mi="0" ci="3" mb="0" cb="0"/><line nr="2405" mi="0" ci="2" mb="0" cb="0"/><line nr="2407" mi="0" ci="627" mb="0" cb="0"/><line nr="2421" mi="0" ci="2" mb="5" cb="2"/><line nr="2424" mi="12" ci="0" mb="2" cb="0"/><line nr="2426" mi="12" ci="0" mb="2" cb="0"/><line nr="2428" mi="12" ci="0" mb="2" cb="0"/><line nr="2430" mi="1" ci="11" mb="1" cb="1"/><line nr="2432" mi="12" ci="0" mb="2" cb="0"/><line nr="2434" mi="12" ci="0" mb="2" cb="0"/><line nr="2436" mi="0" ci="2" mb="0" cb="0"/><line nr="2441" mi="0" ci="2" mb="0" cb="2"/><line nr="2444" mi="1" ci="11" mb="1" cb="1"/><line nr="2446" mi="0" ci="8" mb="1" cb="1"/><line nr="2447" mi="0" ci="2" mb="0" cb="0"/><line nr="2448" mi="2" ci="0" mb="0" cb="0"/><line nr="2453" mi="0" ci="2" mb="49" cb="2"/><line nr="2456" mi="12" ci="0" mb="2" cb="0"/><line nr="2458" mi="12" ci="0" mb="2" cb="0"/><line nr="2460" mi="12" ci="0" mb="2" cb="0"/><line nr="2462" mi="12" ci="0" mb="2" cb="0"/><line nr="2464" mi="12" ci="0" mb="2" cb="0"/><line nr="2466" mi="12" ci="0" mb="2" cb="0"/><line nr="2468" mi="12" ci="0" mb="2" cb="0"/><line nr="2470" mi="12" ci="0" mb="2" cb="0"/><line nr="2472" mi="12" ci="0" mb="2" cb="0"/><line nr="2474" mi="12" ci="0" mb="2" cb="0"/><line nr="2476" mi="12" ci="0" mb="2" cb="0"/><line nr="2478" mi="12" ci="0" mb="2" cb="0"/><line nr="2480" mi="12" ci="0" mb="2" cb="0"/><line nr="2482" mi="12" ci="0" mb="2" cb="0"/><line nr="2484" mi="12" ci="0" mb="2" cb="0"/><line nr="2486" mi="12" ci="0" mb="2" cb="0"/><line nr="2488" mi="12" ci="0" mb="2" cb="0"/><line nr="2490" mi="12" ci="0" mb="2" cb="0"/><line nr="2492" mi="12" ci="0" mb="2" cb="0"/><line nr="2494" mi="12" ci="0" mb="2" cb="0"/><line nr="2496" mi="12" ci="0" mb="2" cb="0"/><line nr="2498" mi="12" ci="0" mb="2" cb="0"/><line nr="2500" mi="12" ci="0" mb="2" cb="0"/><line nr="2502" mi="12" ci="0" mb="2" cb="0"/><line nr="2504" mi="12" ci="0" mb="2" cb="0"/><line nr="2506" mi="12" ci="0" mb="2" cb="0"/><line nr="2508" mi="12" ci="0" mb="2" cb="0"/><line nr="2510" mi="12" ci="0" mb="2" cb="0"/><line nr="2512" mi="2" ci="10" mb="1" cb="1"/><line nr="2514" mi="12" ci="0" mb="2" cb="0"/><line nr="2516" mi="12" ci="0" mb="2" cb="0"/><line nr="2518" mi="12" ci="0" mb="2" cb="0"/><line nr="2520" mi="12" ci="0" mb="2" cb="0"/><line nr="2522" mi="12" ci="0" mb="2" cb="0"/><line nr="2524" mi="12" ci="0" mb="2" cb="0"/><line nr="2526" mi="12" ci="0" mb="2" cb="0"/><line nr="2528" mi="12" ci="0" mb="2" cb="0"/><line nr="2530" mi="12" ci="0" mb="2" cb="0"/><line nr="2532" mi="12" ci="0" mb="2" cb="0"/><line nr="2534" mi="12" ci="0" mb="2" cb="0"/><line nr="2536" mi="12" ci="0" mb="2" cb="0"/><line nr="2538" mi="12" ci="0" mb="2" cb="0"/><line nr="2540" mi="12" ci="0" mb="2" cb="0"/><line nr="2542" mi="12" ci="0" mb="2" cb="0"/><line nr="2544" mi="12" ci="0" mb="2" cb="0"/><line nr="2546" mi="12" ci="0" mb="2" cb="0"/><line nr="2548" mi="12" ci="0" mb="2" cb="0"/><line nr="2550" mi="12" ci="0" mb="2" cb="0"/><line nr="2552" mi="12" ci="0" mb="2" cb="0"/><line nr="2554" mi="2" ci="10" mb="1" cb="1"/><line nr="2556" mi="8" ci="0" mb="2" cb="0"/><line nr="2557" mi="2" ci="0" mb="0" cb="0"/><line nr="2558" mi="2" ci="0" mb="0" cb="0"/><line nr="2563" mi="0" ci="2" mb="48" cb="3"/><line nr="2566" mi="1" ci="11" mb="1" cb="1"/><line nr="2568" mi="12" ci="0" mb="2" cb="0"/><line nr="2570" mi="1" ci="11" mb="1" cb="1"/><line nr="2572" mi="12" ci="0" mb="2" cb="0"/><line nr="2574" mi="12" ci="0" mb="2" cb="0"/><line nr="2576" mi="12" ci="0" mb="2" cb="0"/><line nr="2578" mi="12" ci="0" mb="2" cb="0"/><line nr="2580" mi="12" ci="0" mb="2" cb="0"/><line nr="2582" mi="12" ci="0" mb="2" cb="0"/><line nr="2584" mi="12" ci="0" mb="2" cb="0"/><line nr="2586" mi="12" ci="0" mb="2" cb="0"/><line nr="2588" mi="12" ci="0" mb="2" cb="0"/><line nr="2590" mi="12" ci="0" mb="2" cb="0"/><line nr="2592" mi="12" ci="0" mb="2" cb="0"/><line nr="2594" mi="12" ci="0" mb="2" cb="0"/><line nr="2596" mi="12" ci="0" mb="2" cb="0"/><line nr="2598" mi="12" ci="0" mb="2" cb="0"/><line nr="2600" mi="12" ci="0" mb="2" cb="0"/><line nr="2602" mi="12" ci="0" mb="2" cb="0"/><line nr="2604" mi="12" ci="0" mb="2" cb="0"/><line nr="2606" mi="12" ci="0" mb="2" cb="0"/><line nr="2608" mi="12" ci="0" mb="2" cb="0"/><line nr="2610" mi="12" ci="0" mb="2" cb="0"/><line nr="2612" mi="12" ci="0" mb="2" cb="0"/><line nr="2614" mi="12" ci="0" mb="2" cb="0"/><line nr="2616" mi="12" ci="0" mb="2" cb="0"/><line nr="2618" mi="12" ci="0" mb="2" cb="0"/><line nr="2620" mi="12" ci="0" mb="2" cb="0"/><line nr="2622" mi="12" ci="0" mb="2" cb="0"/><line nr="2624" mi="12" ci="0" mb="2" cb="0"/><line nr="2626" mi="12" ci="0" mb="2" cb="0"/><line nr="2628" mi="12" ci="0" mb="2" cb="0"/><line nr="2630" mi="12" ci="0" mb="2" cb="0"/><line nr="2632" mi="12" ci="0" mb="2" cb="0"/><line nr="2634" mi="12" ci="0" mb="2" cb="0"/><line nr="2636" mi="12" ci="0" mb="2" cb="0"/><line nr="2638" mi="12" ci="0" mb="2" cb="0"/><line nr="2640" mi="12" ci="0" mb="2" cb="0"/><line nr="2642" mi="12" ci="0" mb="2" cb="0"/><line nr="2644" mi="12" ci="0" mb="2" cb="0"/><line nr="2646" mi="12" ci="0" mb="2" cb="0"/><line nr="2648" mi="12" ci="0" mb="2" cb="0"/><line nr="2650" mi="12" ci="0" mb="2" cb="0"/><line nr="2652" mi="12" ci="0" mb="2" cb="0"/><line nr="2654" mi="12" ci="0" mb="2" cb="0"/><line nr="2656" mi="12" ci="0" mb="2" cb="0"/><line nr="2658" mi="12" ci="0" mb="2" cb="0"/><line nr="2660" mi="12" ci="0" mb="2" cb="0"/><line nr="2662" mi="12" ci="0" mb="2" cb="0"/><line nr="2664" mi="2" ci="10" mb="1" cb="1"/><line nr="2666" mi="8" ci="0" mb="2" cb="0"/><line nr="2667" mi="2" ci="0" mb="0" cb="0"/><line nr="2668" mi="2" ci="0" mb="0" cb="0"/><line nr="2672" mi="3" ci="3" mb="0" cb="0"/><line nr="2673" mi="3" ci="3" mb="0" cb="0"/><line nr="2682" mi="0" ci="2" mb="0" cb="0"/><line nr="2684" mi="0" ci="2" mb="0" cb="0"/><line nr="2691" mi="0" ci="5" mb="0" cb="0"/><line nr="2693" mi="0" ci="1" mb="0" cb="0"/><line nr="2695" mi="0" ci="3" mb="0" cb="0"/><line nr="2696" mi="0" ci="3" mb="0" cb="0"/><line nr="2697" mi="0" ci="3" mb="0" cb="0"/><line nr="2698" mi="0" ci="3" mb="0" cb="0"/><line nr="2699" mi="0" ci="3" mb="0" cb="0"/><line nr="2700" mi="0" ci="2" mb="0" cb="0"/><line nr="2701" mi="0" ci="1" mb="0" cb="0"/><line nr="2702" mi="0" ci="4" mb="0" cb="0"/><line nr="2703" mi="0" ci="4" mb="0" cb="0"/><line nr="2704" mi="0" ci="3" mb="0" cb="0"/><line nr="2708" mi="0" ci="3" mb="1" cb="3"/><line nr="2711" mi="0" ci="3" mb="0" cb="0"/><line nr="2712" mi="0" ci="3" mb="0" cb="0"/><line nr="2713" mi="0" ci="3" mb="0" cb="0"/><line nr="2714" mi="0" ci="1" mb="0" cb="0"/><line nr="2716" mi="0" ci="3" mb="0" cb="0"/><line nr="2717" mi="0" ci="3" mb="0" cb="0"/><line nr="2718" mi="0" ci="3" mb="0" cb="0"/><line nr="2719" mi="0" ci="7" mb="1" cb="3"/><line nr="2721" mi="0" ci="4" mb="0" cb="0"/><line nr="2725" mi="0" ci="3" mb="0" cb="0"/><line nr="2726" mi="0" ci="3" mb="0" cb="0"/><line nr="2727" mi="0" ci="3" mb="0" cb="0"/><line nr="2728" mi="0" ci="7" mb="1" cb="3"/><line nr="2730" mi="0" ci="3" mb="0" cb="0"/><line nr="2734" mi="0" ci="4" mb="0" cb="2"/><line nr="2736" mi="0" ci="6" mb="0" cb="2"/><line nr="2737" mi="0" ci="9" mb="0" cb="0"/><line nr="2738" mi="0" ci="16" mb="0" cb="2"/><line nr="2740" mi="0" ci="3" mb="0" cb="0"/><line nr="2741" mi="0" ci="3" mb="0" cb="0"/><line nr="2742" mi="0" ci="3" mb="0" cb="0"/><line nr="2743" mi="0" ci="6" mb="1" cb="1"/><line nr="2744" mi="6" ci="0" mb="0" cb="0"/><line nr="2745" mi="0" ci="3" mb="0" cb="0"/><line nr="2746" mi="0" ci="2" mb="0" cb="0"/><line nr="2748" mi="0" ci="16" mb="0" cb="2"/><line nr="2750" mi="0" ci="16" mb="1" cb="1"/><line nr="2752" mi="0" ci="3" mb="0" cb="0"/><line nr="2753" mi="0" ci="2" mb="0" cb="2"/><line nr="2754" mi="0" ci="3" mb="0" cb="0"/><line nr="2757" mi="0" ci="3" mb="0" cb="0"/><line nr="2758" mi="0" ci="5" mb="0" cb="0"/><line nr="2760" mi="0" ci="4" mb="0" cb="0"/><line nr="2763" mi="3" ci="0" mb="0" cb="0"/><line nr="2764" mi="0" ci="6" mb="0" cb="2"/><line nr="2765" mi="0" ci="7" mb="0" cb="0"/><line nr="2768" mi="0" ci="2" mb="0" cb="0"/><line nr="2769" mi="0" ci="6" mb="0" cb="2"/><line nr="2770" mi="0" ci="6" mb="0" cb="0"/><line nr="2771" mi="0" ci="2" mb="0" cb="0"/><line nr="2772" mi="0" ci="3" mb="0" cb="0"/><line nr="2774" mi="0" ci="5" mb="0" cb="0"/><line nr="2775" mi="0" ci="1" mb="0" cb="0"/><line nr="2777" mi="0" ci="1" mb="0" cb="0"/><line nr="2779" mi="0" ci="4" mb="0" cb="0"/><line nr="2780" mi="0" ci="4" mb="0" cb="0"/><line nr="2781" mi="0" ci="2" mb="0" cb="0"/><line nr="2782" mi="0" ci="2" mb="0" cb="0"/><line nr="2783" mi="0" ci="8" mb="0" cb="0"/><line nr="2784" mi="0" ci="1" mb="0" cb="0"/><line nr="2785" mi="0" ci="2" mb="0" cb="0"/><line nr="2786" mi="3" ci="6" mb="1" cb="1"/><line nr="2787" mi="0" ci="8" mb="2" cb="2"/><line nr="2788" mi="1" ci="0" mb="0" cb="0"/><line nr="2789" mi="3" ci="0" mb="0" cb="0"/><line nr="2792" mi="0" ci="1" mb="0" cb="0"/><line nr="2793" mi="0" ci="1" mb="0" cb="0"/><line nr="2794" mi="0" ci="2" mb="0" cb="2"/><line nr="2795" mi="0" ci="4" mb="0" cb="0"/><line nr="2796" mi="0" ci="9" mb="0" cb="2"/><line nr="2798" mi="0" ci="13" mb="0" cb="0"/><line nr="2805" mi="0" ci="3" mb="0" cb="0"/><line nr="2810" mi="0" ci="1" mb="0" cb="0"/><line nr="2813" mi="0" ci="12" mb="0" cb="0"/><line nr="2814" mi="0" ci="3" mb="0" cb="2"/><line nr="2817" mi="0" ci="9" mb="0" cb="0"/><line nr="2818" mi="0" ci="3" mb="0" cb="0"/><line nr="2819" mi="0" ci="4" mb="0" cb="0"/><line nr="2820" mi="0" ci="1" mb="0" cb="0"/><line nr="2824" mi="0" ci="1" mb="0" cb="0"/><line nr="2827" mi="0" ci="3" mb="0" cb="3"/><line nr="2830" mi="0" ci="7" mb="0" cb="0"/><line nr="2831" mi="0" ci="6" mb="0" cb="0"/><line nr="2832" mi="0" ci="3" mb="0" cb="0"/><line nr="2833" mi="0" ci="3" mb="0" cb="0"/><line nr="2834" mi="0" ci="4" mb="0" cb="0"/><line nr="2835" mi="0" ci="1" mb="0" cb="0"/><line nr="2837" mi="0" ci="7" mb="0" cb="0"/><line nr="2838" mi="0" ci="6" mb="0" cb="0"/><line nr="2839" mi="0" ci="3" mb="0" cb="0"/><line nr="2840" mi="0" ci="3" mb="0" cb="0"/><line nr="2841" mi="0" ci="4" mb="0" cb="0"/><line nr="2842" mi="0" ci="1" mb="0" cb="0"/><line nr="2846" mi="0" ci="1" mb="0" cb="0"/><line nr="2849" mi="0" ci="7" mb="0" cb="2"/><line nr="2851" mi="0" ci="11" mb="0" cb="0"/><line nr="2852" mi="0" ci="6" mb="0" cb="0"/><line nr="2854" mi="0" ci="1" mb="0" cb="0"/><line nr="2858" mi="0" ci="13" mb="0" cb="0"/><line nr="2859" mi="0" ci="4" mb="0" cb="2"/><line nr="2860" mi="0" ci="1" mb="0" cb="0"/><line nr="2863" mi="0" ci="3" mb="0" cb="0"/><line nr="2864" mi="0" ci="3" mb="0" cb="0"/><line nr="2865" mi="0" ci="1" mb="0" cb="0"/><line nr="2870" mi="0" ci="5" mb="0" cb="0"/><line nr="2871" mi="0" ci="4" mb="0" cb="2"/><line nr="2872" mi="0" ci="1" mb="0" cb="0"/><line nr="2875" mi="0" ci="2" mb="0" cb="0"/><line nr="2880" mi="0" ci="3" mb="0" cb="0"/><line nr="2881" mi="0" ci="1" mb="0" cb="0"/><line nr="2884" mi="2" ci="0" mb="0" cb="0"/><line nr="2885" mi="3" ci="0" mb="0" cb="0"/><line nr="2886" mi="3" ci="0" mb="0" cb="0"/><line nr="2887" mi="1" ci="0" mb="0" cb="0"/><line nr="2895" mi="0" ci="6" mb="0" cb="0"/><line nr="2898" mi="0" ci="4" mb="0" cb="0"/><line nr="2899" mi="0" ci="3" mb="0" cb="0"/><line nr="2900" mi="0" ci="2" mb="0" cb="0"/><line nr="2901" mi="0" ci="1" mb="0" cb="0"/><line nr="2906" mi="0" ci="3" mb="0" cb="0"/><line nr="2907" mi="0" ci="5" mb="0" cb="2"/><line nr="2908" mi="0" ci="6" mb="0" cb="0"/><line nr="2909" mi="0" ci="1" mb="0" cb="0"/><line nr="2915" mi="3" ci="0" mb="0" cb="0"/><line nr="2916" mi="3" ci="0" mb="0" cb="0"/><line nr="2917" mi="1" ci="0" mb="0" cb="0"/><line nr="2922" mi="5" ci="0" mb="4" cb="0"/><line nr="2923" mi="15" ci="0" mb="0" cb="0"/><line nr="2925" mi="3" ci="0" mb="0" cb="0"/><line nr="2926" mi="1" ci="0" mb="0" cb="0"/><line nr="2930" mi="0" ci="15" mb="0" cb="0"/><line nr="2937" mi="0" ci="575" mb="0" cb="0"/><line nr="2945" mi="0" ci="15" mb="0" cb="0"/><line nr="2948" mi="0" ci="15" mb="0" cb="0"/><line nr="2951" mi="0" ci="15" mb="0" cb="0"/><line nr="2954" mi="0" ci="16" mb="0" cb="0"/><line nr="2959" mi="4" ci="4" mb="0" cb="0"/><line nr="2960" mi="4" ci="4" mb="0" cb="0"/><line nr="2961" mi="5" ci="5" mb="0" cb="0"/><line nr="2962" mi="4" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2268" covered="9555"/><counter type="BRANCH" missed="638" covered="1028"/><counter type="LINE" missed="333" covered="1240"/><counter type="COMPLEXITY" missed="473" covered="647"/><counter type="METHOD" missed="4" covered="44"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenBase.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierHolder.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavadocParser.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="4"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="3" ci="3" mb="3" cb="1"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="2"/><line nr="124" mi="0" ci="22" mb="1" cb="5"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="1" cb="3"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="13" mb="1" cb="3"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="0" cb="6"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="321"/><counter type="BRANCH" missed="6" covered="34"/><counter type="LINE" missed="2" covered="58"/><counter type="COMPLEXITY" missed="7" covered="26"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratedJavaParserTokenManagerBase.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="1" cb="1"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="4"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="109"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleCharStream.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><line nr="76" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="12" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="14" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="16" mb="0" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="4"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="13" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="10" mb="0" cb="2"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="10" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="2"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="6" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="2" cb="2"/><line nr="311" mi="6" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="6" ci="0" mb="0" cb="0"/><line nr="332" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="2"/><line nr="339" mi="0" ci="15" mb="0" cb="0"/><line nr="341" mi="0" ci="29" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="2"/><line nr="351" mi="0" ci="13" mb="0" cb="0"/><line nr="354" mi="0" ci="20" mb="0" cb="0"/><line nr="356" mi="0" ci="15" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="1" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="5" ci="0" mb="2" cb="0"/><line nr="380" mi="12" ci="0" mb="0" cb="0"/><line nr="384" mi="14" ci="0" mb="0" cb="0"/><line nr="387" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="23" ci="0" mb="4" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="12" ci="0" mb="0" cb="0"/><line nr="394" mi="7" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="2" cb="0"/><line nr="401" mi="6" ci="0" mb="0" cb="0"/><line nr="402" mi="7" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="2" cb="0"/><line nr="406" mi="18" ci="0" mb="2" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="6" ci="0" mb="0" cb="0"/><line nr="413" mi="6" ci="0" mb="0" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="415" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="349" covered="601"/><counter type="BRANCH" missed="19" covered="37"/><counter type="LINE" missed="55" covered="118"/><counter type="COMPLEXITY" missed="21" covered="34"/><counter type="METHOD" missed="9" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserBuild.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParseProblemException.java"><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="2"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParser.java"><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="2" ci="6" mb="1" cb="1"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="0"/><line nr="223" mi="9" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="7" ci="0" mb="0" cb="0"/><line nr="282" mi="8" ci="0" mb="0" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="438" mi="0" ci="6" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="6" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="539" mi="0" ci="6" mb="0" cb="0"/><line nr="551" mi="0" ci="6" mb="0" cb="0"/><line nr="563" mi="0" ci="6" mb="0" cb="0"/><line nr="575" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="331"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="11" covered="63"/><counter type="COMPLEXITY" missed="10" covered="37"/><counter type="METHOD" missed="9" covered="34"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParseStart.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Providers.java"><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="84"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratedJavaParser.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="2" ci="8" mb="1" cb="3"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="3" ci="7" mb="2" cb="3"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="1" cb="7"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="7" mb="2" cb="3"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="15" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="19" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="2" ci="8" mb="1" cb="3"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="2" ci="8" mb="1" cb="3"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="12" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="2"/><line nr="273" mi="0" ci="10" mb="1" cb="16"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="16" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="16" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="16" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="16" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="16" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="16" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="16" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="16" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="16" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="16" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="16" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="16" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="16" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="0" ci="10" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="6" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="6" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="10" mb="1" cb="4"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="6" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="2" ci="8" mb="1" cb="3"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="10" mb="0" cb="4"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="399" mi="3" ci="7" mb="1" cb="3"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="20" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="2" ci="8" mb="1" cb="3"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="443" mi="2" ci="8" mb="1" cb="3"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="2" ci="8" mb="1" cb="3"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="478" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="2" ci="8" mb="1" cb="3"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="4" mb="0" cb="2"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="10" mb="0" cb="4"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="10" mb="0" cb="4"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="527" mi="2" ci="8" mb="1" cb="3"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="3" ci="7" mb="3" cb="2"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="0"/><line nr="615" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="4" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="622" mi="6" ci="0" mb="0" cb="0"/><line nr="623" mi="4" ci="0" mb="0" cb="0"/><line nr="624" mi="4" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="633" mi="0" ci="4" mb="0" cb="0"/><line nr="634" mi="0" ci="17" mb="0" cb="0"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="10" mb="0" cb="4"/><line nr="649" mi="0" ci="1" mb="0" cb="0"/><line nr="652" mi="0" ci="6" mb="0" cb="0"/><line nr="653" mi="0" ci="1" mb="0" cb="0"/><line nr="655" mi="0" ci="3" mb="0" cb="0"/><line nr="656" mi="0" ci="11" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="6" mb="0" cb="0"/><line nr="660" mi="2" ci="8" mb="1" cb="3"/><line nr="662" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="1" mb="0" cb="0"/><line nr="666" mi="0" ci="6" mb="0" cb="0"/><line nr="669" mi="0" ci="10" mb="0" cb="4"/><line nr="671" mi="0" ci="3" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="675" mi="0" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="13" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="0" ci="3" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="5" mb="0" cb="0"/><line nr="696" mi="3" ci="7" mb="1" cb="3"/><line nr="699" mi="0" ci="1" mb="0" cb="0"/><line nr="702" mi="0" ci="6" mb="0" cb="0"/><line nr="703" mi="0" ci="1" mb="0" cb="0"/><line nr="705" mi="0" ci="4" mb="0" cb="0"/><line nr="706" mi="0" ci="3" mb="0" cb="0"/><line nr="707" mi="0" ci="4" mb="0" cb="0"/><line nr="708" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="4" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="3" mb="0" cb="0"/><line nr="718" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="2" ci="8" mb="1" cb="3"/><line nr="722" mi="0" ci="3" mb="0" cb="0"/><line nr="723" mi="0" ci="1" mb="0" cb="0"/><line nr="726" mi="0" ci="6" mb="0" cb="0"/><line nr="729" mi="0" ci="12" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="734" mi="0" ci="4" mb="0" cb="0"/><line nr="735" mi="0" ci="3" mb="0" cb="0"/><line nr="736" mi="0" ci="4" mb="0" cb="0"/><line nr="739" mi="2" ci="8" mb="1" cb="3"/><line nr="742" mi="0" ci="1" mb="0" cb="0"/><line nr="745" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="0" ci="4" mb="0" cb="0"/><line nr="749" mi="0" ci="3" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="2" mb="0" cb="0"/><line nr="755" mi="0" ci="3" mb="0" cb="0"/><line nr="757" mi="0" ci="4" mb="0" cb="0"/><line nr="760" mi="2" ci="8" mb="1" cb="3"/><line nr="801" mi="0" ci="1" mb="0" cb="0"/><line nr="804" mi="0" ci="6" mb="0" cb="0"/><line nr="805" mi="0" ci="1" mb="0" cb="0"/><line nr="807" mi="3" ci="7" mb="2" cb="3"/><line nr="846" mi="0" ci="3" mb="0" cb="0"/><line nr="847" mi="0" ci="4" mb="0" cb="0"/><line nr="848" mi="0" ci="1" mb="0" cb="0"/><line nr="851" mi="0" ci="4" mb="0" cb="0"/><line nr="852" mi="0" ci="1" mb="0" cb="0"/><line nr="855" mi="6" ci="0" mb="0" cb="0"/><line nr="856" mi="4" ci="0" mb="0" cb="0"/><line nr="857" mi="4" ci="0" mb="0" cb="0"/><line nr="860" mi="0" ci="4" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="0"/><line nr="866" mi="0" ci="4" mb="0" cb="2"/><line nr="867" mi="0" ci="4" mb="0" cb="0"/><line nr="869" mi="0" ci="10" mb="1" cb="3"/><line nr="909" mi="0" ci="3" mb="0" cb="0"/><line nr="910" mi="0" ci="10" mb="0" cb="4"/><line nr="913" mi="0" ci="4" mb="0" cb="0"/><line nr="914" mi="0" ci="1" mb="0" cb="0"/><line nr="917" mi="0" ci="6" mb="0" cb="0"/><line nr="918" mi="0" ci="4" mb="0" cb="2"/><line nr="919" mi="0" ci="5" mb="0" cb="0"/><line nr="920" mi="0" ci="4" mb="0" cb="2"/><line nr="921" mi="0" ci="5" mb="0" cb="0"/><line nr="922" mi="0" ci="4" mb="0" cb="2"/><line nr="923" mi="0" ci="5" mb="0" cb="0"/><line nr="924" mi="0" ci="4" mb="0" cb="2"/><line nr="925" mi="0" ci="5" mb="0" cb="0"/><line nr="927" mi="3" ci="7" mb="2" cb="2"/><line nr="952" mi="0" ci="4" mb="0" cb="0"/><line nr="953" mi="0" ci="1" mb="0" cb="0"/><line nr="956" mi="6" ci="0" mb="0" cb="0"/><line nr="957" mi="4" ci="0" mb="0" cb="0"/><line nr="958" mi="4" ci="0" mb="0" cb="0"/><line nr="965" mi="6" ci="0" mb="0" cb="0"/><line nr="966" mi="4" ci="0" mb="0" cb="0"/><line nr="967" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="0" ci="2" mb="0" cb="0"/><line nr="974" mi="0" ci="4" mb="0" cb="0"/><line nr="977" mi="0" ci="5" mb="0" cb="0"/><line nr="978" mi="0" ci="4" mb="0" cb="0"/><line nr="979" mi="0" ci="4" mb="0" cb="0"/><line nr="982" mi="0" ci="10" mb="0" cb="4"/><line nr="985" mi="0" ci="1" mb="0" cb="0"/><line nr="988" mi="0" ci="6" mb="0" cb="0"/><line nr="989" mi="0" ci="1" mb="0" cb="0"/><line nr="991" mi="0" ci="4" mb="0" cb="0"/><line nr="992" mi="0" ci="4" mb="0" cb="0"/><line nr="993" mi="0" ci="5" mb="0" cb="0"/><line nr="995" mi="0" ci="4" mb="0" cb="0"/><line nr="996" mi="0" ci="6" mb="0" cb="0"/><line nr="997" mi="0" ci="14" mb="0" cb="0"/><line nr="1001" mi="0" ci="2" mb="0" cb="0"/><line nr="1002" mi="0" ci="3" mb="0" cb="0"/><line nr="1003" mi="3" ci="7" mb="1" cb="3"/><line nr="1005" mi="0" ci="4" mb="0" cb="0"/><line nr="1006" mi="0" ci="3" mb="0" cb="0"/><line nr="1007" mi="0" ci="1" mb="0" cb="0"/><line nr="1010" mi="0" ci="6" mb="0" cb="0"/><line nr="1013" mi="0" ci="21" mb="0" cb="0"/><line nr="1019" mi="0" ci="5" mb="0" cb="0"/><line nr="1020" mi="0" ci="3" mb="0" cb="0"/><line nr="1021" mi="0" ci="3" mb="0" cb="0"/><line nr="1024" mi="2" ci="8" mb="1" cb="3"/><line nr="1028" mi="0" ci="1" mb="0" cb="0"/><line nr="1031" mi="0" ci="6" mb="0" cb="0"/><line nr="1032" mi="0" ci="1" mb="0" cb="0"/><line nr="1034" mi="0" ci="4" mb="0" cb="0"/><line nr="1035" mi="0" ci="6" mb="0" cb="0"/><line nr="1037" mi="0" ci="3" mb="1" cb="1"/><line nr="1038" mi="0" ci="10" mb="0" cb="0"/><line nr="1040" mi="0" ci="6" mb="0" cb="0"/><line nr="1044" mi="0" ci="10" mb="1" cb="4"/><line nr="1046" mi="0" ci="3" mb="0" cb="0"/><line nr="1047" mi="0" ci="1" mb="0" cb="0"/><line nr="1091" mi="0" ci="3" mb="0" cb="0"/><line nr="1092" mi="0" ci="1" mb="0" cb="0"/><line nr="1095" mi="6" ci="0" mb="0" cb="0"/><line nr="1096" mi="4" ci="0" mb="0" cb="0"/><line nr="1097" mi="4" ci="0" mb="0" cb="0"/><line nr="1099" mi="0" ci="2" mb="0" cb="0"/><line nr="1102" mi="0" ci="3" mb="0" cb="0"/><line nr="1105" mi="0" ci="4" mb="0" cb="0"/><line nr="1106" mi="0" ci="3" mb="0" cb="0"/><line nr="1107" mi="2" ci="8" mb="1" cb="3"/><line nr="1151" mi="0" ci="3" mb="0" cb="0"/><line nr="1152" mi="0" ci="5" mb="0" cb="0"/><line nr="1155" mi="0" ci="4" mb="0" cb="2"/><line nr="1160" mi="0" ci="4" mb="0" cb="0"/><line nr="1161" mi="0" ci="3" mb="0" cb="0"/><line nr="1162" mi="0" ci="6" mb="0" cb="0"/><line nr="1167" mi="0" ci="6" mb="0" cb="0"/><line nr="1170" mi="0" ci="10" mb="0" cb="4"/><line nr="1172" mi="0" ci="4" mb="0" cb="0"/><line nr="1173" mi="0" ci="1" mb="0" cb="0"/><line nr="1176" mi="0" ci="6" mb="0" cb="0"/><line nr="1179" mi="0" ci="4" mb="0" cb="0"/><line nr="1180" mi="0" ci="10" mb="0" cb="0"/><line nr="1183" mi="0" ci="6" mb="0" cb="0"/><line nr="1186" mi="0" ci="7" mb="0" cb="0"/><line nr="1188" mi="0" ci="5" mb="0" cb="0"/><line nr="1189" mi="0" ci="3" mb="0" cb="0"/><line nr="1190" mi="0" ci="2" mb="0" cb="0"/><line nr="1192" mi="0" ci="3" mb="0" cb="0"/><line nr="1194" mi="3" ci="7" mb="1" cb="3"/><line nr="1196" mi="0" ci="3" mb="0" cb="0"/><line nr="1197" mi="0" ci="7" mb="0" cb="0"/><line nr="1198" mi="0" ci="1" mb="0" cb="0"/><line nr="1201" mi="0" ci="6" mb="0" cb="0"/><line nr="1204" mi="0" ci="3" mb="0" cb="0"/><line nr="1205" mi="0" ci="11" mb="0" cb="0"/><line nr="1206" mi="0" ci="5" mb="0" cb="0"/><line nr="1207" mi="0" ci="5" mb="0" cb="0"/><line nr="1208" mi="0" ci="3" mb="0" cb="0"/><line nr="1209" mi="0" ci="3" mb="0" cb="0"/><line nr="1212" mi="2" ci="8" mb="1" cb="3"/><line nr="1216" mi="0" ci="1" mb="0" cb="0"/><line nr="1219" mi="0" ci="6" mb="0" cb="0"/><line nr="1220" mi="0" ci="1" mb="0" cb="0"/><line nr="1222" mi="0" ci="4" mb="0" cb="0"/><line nr="1223" mi="0" ci="6" mb="0" cb="0"/><line nr="1225" mi="3" ci="7" mb="1" cb="3"/><line nr="1227" mi="0" ci="4" mb="0" cb="0"/><line nr="1228" mi="0" ci="3" mb="0" cb="0"/><line nr="1229" mi="0" ci="5" mb="0" cb="0"/><line nr="1232" mi="2" ci="8" mb="1" cb="3"/><line nr="1235" mi="0" ci="1" mb="0" cb="0"/><line nr="1238" mi="0" ci="6" mb="0" cb="0"/><line nr="1239" mi="0" ci="1" mb="0" cb="0"/><line nr="1241" mi="0" ci="4" mb="0" cb="0"/><line nr="1242" mi="0" ci="3" mb="0" cb="0"/><line nr="1243" mi="0" ci="6" mb="0" cb="0"/><line nr="1248" mi="0" ci="6" mb="0" cb="0"/><line nr="1251" mi="3" ci="7" mb="2" cb="3"/><line nr="1253" mi="0" ci="3" mb="0" cb="0"/><line nr="1254" mi="0" ci="1" mb="0" cb="0"/><line nr="1257" mi="0" ci="4" mb="0" cb="0"/><line nr="1258" mi="0" ci="1" mb="0" cb="0"/><line nr="1261" mi="6" ci="0" mb="0" cb="0"/><line nr="1262" mi="4" ci="0" mb="0" cb="0"/><line nr="1263" mi="4" ci="0" mb="0" cb="0"/><line nr="1265" mi="0" ci="5" mb="0" cb="0"/><line nr="1266" mi="0" ci="25" mb="0" cb="0"/><line nr="1271" mi="0" ci="3" mb="0" cb="0"/><line nr="1272" mi="0" ci="4" mb="0" cb="0"/><line nr="1273" mi="0" ci="2" mb="0" cb="0"/><line nr="1278" mi="0" ci="3" mb="0" cb="0"/><line nr="1279" mi="0" ci="4" mb="0" cb="0"/><line nr="1280" mi="0" ci="2" mb="0" cb="0"/><line nr="1283" mi="0" ci="3" mb="0" cb="0"/><line nr="1285" mi="0" ci="2" mb="0" cb="0"/><line nr="1286" mi="0" ci="4" mb="0" cb="0"/><line nr="1287" mi="2" ci="8" mb="1" cb="3"/><line nr="1321" mi="0" ci="4" mb="0" cb="2"/><line nr="1322" mi="0" ci="4" mb="0" cb="0"/><line nr="1324" mi="3" ci="7" mb="2" cb="2"/><line nr="1358" mi="0" ci="3" mb="0" cb="0"/><line nr="1359" mi="0" ci="5" mb="0" cb="0"/><line nr="1360" mi="0" ci="1" mb="0" cb="0"/><line nr="1363" mi="6" ci="0" mb="0" cb="0"/><line nr="1364" mi="4" ci="0" mb="0" cb="0"/><line nr="1365" mi="4" ci="0" mb="0" cb="0"/><line nr="1370" mi="0" ci="10" mb="0" cb="4"/><line nr="1373" mi="0" ci="1" mb="0" cb="0"/><line nr="1376" mi="0" ci="6" mb="0" cb="0"/><line nr="1377" mi="0" ci="1" mb="0" cb="0"/><line nr="1379" mi="0" ci="4" mb="0" cb="0"/><line nr="1380" mi="0" ci="3" mb="0" cb="0"/><line nr="1381" mi="0" ci="6" mb="0" cb="0"/><line nr="1386" mi="0" ci="6" mb="0" cb="0"/><line nr="1389" mi="0" ci="4" mb="0" cb="0"/><line nr="1390" mi="0" ci="6" mb="0" cb="0"/><line nr="1393" mi="0" ci="2" mb="0" cb="0"/><line nr="1395" mi="0" ci="3" mb="0" cb="0"/><line nr="1396" mi="0" ci="5" mb="0" cb="0"/><line nr="1399" mi="3" ci="7" mb="1" cb="3"/><line nr="1402" mi="0" ci="1" mb="0" cb="0"/><line nr="1405" mi="0" ci="6" mb="0" cb="0"/><line nr="1406" mi="0" ci="1" mb="0" cb="0"/><line nr="1408" mi="0" ci="4" mb="0" cb="0"/><line nr="1409" mi="0" ci="3" mb="0" cb="0"/><line nr="1410" mi="0" ci="6" mb="0" cb="0"/><line nr="1412" mi="0" ci="2" mb="0" cb="0"/><line nr="1415" mi="0" ci="2" mb="0" cb="0"/><line nr="1417" mi="0" ci="3" mb="0" cb="0"/><line nr="1418" mi="0" ci="29" mb="0" cb="0"/><line nr="1421" mi="3" ci="7" mb="1" cb="3"/><line nr="1424" mi="0" ci="1" mb="0" cb="0"/><line nr="1427" mi="0" ci="6" mb="0" cb="0"/><line nr="1428" mi="0" ci="1" mb="0" cb="0"/><line nr="1430" mi="0" ci="4" mb="0" cb="0"/><line nr="1431" mi="0" ci="3" mb="0" cb="0"/><line nr="1432" mi="0" ci="30" mb="0" cb="0"/><line nr="1434" mi="0" ci="2" mb="0" cb="0"/><line nr="1439" mi="0" ci="2" mb="0" cb="0"/><line nr="1441" mi="0" ci="3" mb="0" cb="0"/><line nr="1442" mi="0" ci="3" mb="0" cb="0"/><line nr="1443" mi="0" ci="5" mb="0" cb="0"/><line nr="1444" mi="2" ci="8" mb="1" cb="3"/><line nr="1447" mi="0" ci="3" mb="0" cb="0"/><line nr="1448" mi="0" ci="4" mb="0" cb="0"/><line nr="1449" mi="0" ci="2" mb="0" cb="0"/><line nr="1450" mi="0" ci="1" mb="0" cb="0"/><line nr="1453" mi="0" ci="6" mb="0" cb="0"/><line nr="1456" mi="0" ci="3" mb="0" cb="0"/><line nr="1457" mi="0" ci="6" mb="0" cb="0"/><line nr="1458" mi="0" ci="24" mb="0" cb="0"/><line nr="1463" mi="0" ci="3" mb="0" cb="0"/><line nr="1464" mi="0" ci="3" mb="0" cb="0"/><line nr="1465" mi="0" ci="5" mb="0" cb="0"/><line nr="1466" mi="0" ci="3" mb="0" cb="0"/><line nr="1467" mi="0" ci="12" mb="0" cb="0"/><line nr="1470" mi="0" ci="2" mb="0" cb="0"/><line nr="1471" mi="0" ci="4" mb="0" cb="2"/><line nr="1472" mi="0" ci="3" mb="0" cb="0"/><line nr="1473" mi="0" ci="4" mb="0" cb="0"/><line nr="1477" mi="0" ci="4" mb="0" cb="0"/><line nr="1478" mi="0" ci="10" mb="0" cb="0"/><line nr="1481" mi="0" ci="6" mb="0" cb="0"/><line nr="1483" mi="0" ci="7" mb="0" cb="0"/><line nr="1484" mi="0" ci="3" mb="0" cb="0"/><line nr="1485" mi="0" ci="2" mb="0" cb="0"/><line nr="1486" mi="0" ci="3" mb="0" cb="0"/><line nr="1487" mi="0" ci="3" mb="0" cb="0"/><line nr="1488" mi="0" ci="2" mb="0" cb="0"/><line nr="1490" mi="3" ci="7" mb="1" cb="3"/><line nr="1492" mi="0" ci="3" mb="0" cb="0"/><line nr="1493" mi="0" ci="7" mb="0" cb="0"/><line nr="1494" mi="0" ci="1" mb="0" cb="0"/><line nr="1497" mi="0" ci="6" mb="0" cb="0"/><line nr="1501" mi="0" ci="3" mb="0" cb="0"/><line nr="1502" mi="0" ci="13" mb="0" cb="0"/><line nr="1503" mi="0" ci="3" mb="0" cb="0"/><line nr="1504" mi="2" ci="8" mb="1" cb="3"/><line nr="1506" mi="0" ci="4" mb="0" cb="0"/><line nr="1507" mi="0" ci="3" mb="0" cb="0"/><line nr="1508" mi="0" ci="5" mb="0" cb="0"/><line nr="1511" mi="2" ci="8" mb="1" cb="3"/><line nr="1514" mi="0" ci="1" mb="0" cb="0"/><line nr="1517" mi="0" ci="6" mb="0" cb="0"/><line nr="1518" mi="0" ci="1" mb="0" cb="0"/><line nr="1520" mi="0" ci="4" mb="0" cb="0"/><line nr="1521" mi="0" ci="3" mb="0" cb="0"/><line nr="1522" mi="0" ci="6" mb="0" cb="0"/><line nr="1527" mi="0" ci="6" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="0"/><line nr="1531" mi="0" ci="3" mb="0" cb="0"/><line nr="1532" mi="0" ci="4" mb="0" cb="2"/><line nr="1533" mi="0" ci="3" mb="0" cb="0"/><line nr="1537" mi="0" ci="3" mb="0" cb="0"/><line nr="1538" mi="0" ci="4" mb="0" cb="0"/><line nr="1539" mi="0" ci="2" mb="0" cb="2"/><line nr="1540" mi="0" ci="5" mb="0" cb="0"/><line nr="1542" mi="0" ci="32" mb="0" cb="0"/><line nr="1545" mi="0" ci="2" mb="0" cb="0"/><line nr="1547" mi="0" ci="2" mb="0" cb="0"/><line nr="1548" mi="0" ci="5" mb="0" cb="0"/><line nr="1549" mi="0" ci="2" mb="0" cb="0"/><line nr="1550" mi="0" ci="4" mb="0" cb="2"/><line nr="1551" mi="2" ci="8" mb="2" cb="2"/><line nr="1553" mi="3" ci="0" mb="0" cb="0"/><line nr="1554" mi="4" ci="0" mb="0" cb="0"/><line nr="1555" mi="1" ci="0" mb="0" cb="0"/><line nr="1558" mi="0" ci="6" mb="0" cb="0"/><line nr="1561" mi="0" ci="4" mb="0" cb="0"/><line nr="1562" mi="0" ci="8" mb="0" cb="0"/><line nr="1563" mi="0" ci="3" mb="0" cb="0"/><line nr="1564" mi="0" ci="5" mb="0" cb="0"/><line nr="1566" mi="0" ci="10" mb="1" cb="3"/><line nr="1603" mi="0" ci="4" mb="1" cb="1"/><line nr="1604" mi="3" ci="0" mb="0" cb="0"/><line nr="1605" mi="4" ci="0" mb="0" cb="0"/><line nr="1606" mi="5" ci="0" mb="0" cb="0"/><line nr="1610" mi="3" ci="7" mb="1" cb="3"/><line nr="1612" mi="0" ci="3" mb="0" cb="0"/><line nr="1613" mi="0" ci="7" mb="0" cb="0"/><line nr="1614" mi="0" ci="1" mb="0" cb="0"/><line nr="1617" mi="0" ci="6" mb="0" cb="0"/><line nr="1620" mi="0" ci="4" mb="0" cb="0"/><line nr="1621" mi="0" ci="6" mb="0" cb="0"/><line nr="1622" mi="0" ci="3" mb="0" cb="0"/><line nr="1623" mi="0" ci="4" mb="0" cb="0"/><line nr="1624" mi="0" ci="1" mb="0" cb="0"/><line nr="1627" mi="6" ci="0" mb="0" cb="0"/><line nr="1628" mi="4" ci="0" mb="0" cb="0"/><line nr="1629" mi="4" ci="0" mb="0" cb="0"/><line nr="1632" mi="0" ci="14" mb="0" cb="0"/><line nr="1635" mi="0" ci="3" mb="0" cb="0"/><line nr="1639" mi="0" ci="4" mb="0" cb="2"/><line nr="1644" mi="0" ci="3" mb="0" cb="0"/><line nr="1645" mi="0" ci="6" mb="0" cb="0"/><line nr="1647" mi="0" ci="2" mb="0" cb="0"/><line nr="1651" mi="0" ci="2" mb="0" cb="0"/><line nr="1652" mi="0" ci="2" mb="0" cb="0"/><line nr="1653" mi="3" ci="7" mb="1" cb="3"/><line nr="1655" mi="0" ci="4" mb="0" cb="0"/><line nr="1656" mi="0" ci="5" mb="0" cb="0"/><line nr="1657" mi="0" ci="1" mb="0" cb="0"/><line nr="1660" mi="0" ci="6" mb="0" cb="0"/><line nr="1663" mi="0" ci="3" mb="0" cb="0"/><line nr="1664" mi="0" ci="5" mb="0" cb="0"/><line nr="1665" mi="0" ci="11" mb="0" cb="0"/><line nr="1673" mi="0" ci="4" mb="0" cb="2"/><line nr="1674" mi="0" ci="5" mb="0" cb="0"/><line nr="1676" mi="0" ci="10" mb="1" cb="3"/><line nr="1685" mi="0" ci="4" mb="0" cb="0"/><line nr="1686" mi="0" ci="1" mb="0" cb="0"/><line nr="1689" mi="6" ci="0" mb="0" cb="0"/><line nr="1690" mi="4" ci="0" mb="0" cb="0"/><line nr="1691" mi="4" ci="0" mb="0" cb="0"/><line nr="1694" mi="0" ci="2" mb="0" cb="0"/><line nr="1699" mi="0" ci="5" mb="0" cb="0"/><line nr="1700" mi="0" ci="10" mb="1" cb="4"/><line nr="1709" mi="0" ci="4" mb="0" cb="0"/><line nr="1712" mi="0" ci="4" mb="0" cb="0"/><line nr="1713" mi="0" ci="5" mb="0" cb="0"/><line nr="1714" mi="0" ci="5" mb="0" cb="2"/><line nr="1735" mi="0" ci="4" mb="0" cb="0"/><line nr="1738" mi="0" ci="4" mb="0" cb="2"/><line nr="1743" mi="0" ci="4" mb="0" cb="0"/><line nr="1744" mi="0" ci="6" mb="0" cb="0"/><line nr="1749" mi="6" ci="0" mb="0" cb="0"/><line nr="1750" mi="4" ci="0" mb="0" cb="0"/><line nr="1751" mi="4" ci="0" mb="0" cb="0"/><line nr="1753" mi="0" ci="10" mb="0" cb="0"/><line nr="1757" mi="0" ci="2" mb="0" cb="0"/><line nr="1758" mi="0" ci="3" mb="0" cb="0"/><line nr="1759" mi="0" ci="4" mb="0" cb="0"/><line nr="1760" mi="0" ci="6" mb="0" cb="0"/><line nr="1761" mi="0" ci="4" mb="0" cb="0"/><line nr="1762" mi="0" ci="11" mb="0" cb="0"/><line nr="1765" mi="2" ci="0" mb="0" cb="0"/><line nr="1767" mi="3" ci="0" mb="0" cb="0"/><line nr="1768" mi="4" ci="0" mb="0" cb="0"/><line nr="1769" mi="10" ci="0" mb="0" cb="0"/><line nr="1770" mi="4" ci="0" mb="0" cb="0"/><line nr="1773" mi="3" ci="0" mb="0" cb="0"/><line nr="1774" mi="5" ci="0" mb="0" cb="0"/><line nr="1775" mi="10" ci="0" mb="4" cb="0"/><line nr="1799" mi="1" ci="0" mb="0" cb="0"/><line nr="1802" mi="6" ci="0" mb="0" cb="0"/><line nr="1803" mi="1" ci="0" mb="0" cb="0"/><line nr="1806" mi="10" ci="0" mb="0" cb="0"/><line nr="1809" mi="0" ci="4" mb="0" cb="0"/><line nr="1811" mi="0" ci="3" mb="0" cb="0"/><line nr="1812" mi="0" ci="4" mb="0" cb="0"/><line nr="1813" mi="0" ci="2" mb="0" cb="0"/><line nr="1818" mi="0" ci="5" mb="0" cb="0"/><line nr="1820" mi="0" ci="4" mb="0" cb="0"/><line nr="1821" mi="0" ci="3" mb="0" cb="0"/><line nr="1822" mi="0" ci="3" mb="0" cb="0"/><line nr="1823" mi="0" ci="4" mb="0" cb="2"/><line nr="1824" mi="0" ci="3" mb="0" cb="0"/><line nr="1828" mi="0" ci="14" mb="0" cb="0"/><line nr="1829" mi="0" ci="5" mb="0" cb="0"/><line nr="1832" mi="0" ci="4" mb="0" cb="2"/><line nr="1837" mi="0" ci="4" mb="0" cb="0"/><line nr="1838" mi="0" ci="3" mb="0" cb="0"/><line nr="1839" mi="0" ci="3" mb="0" cb="0"/><line nr="1840" mi="0" ci="4" mb="0" cb="2"/><line nr="1841" mi="0" ci="3" mb="0" cb="0"/><line nr="1845" mi="0" ci="14" mb="0" cb="0"/><line nr="1846" mi="0" ci="6" mb="0" cb="0"/><line nr="1848" mi="0" ci="2" mb="0" cb="0"/><line nr="1851" mi="0" ci="7" mb="0" cb="0"/><line nr="1853" mi="0" ci="4" mb="0" cb="0"/><line nr="1854" mi="0" ci="4" mb="0" cb="0"/><line nr="1855" mi="2" ci="8" mb="1" cb="3"/><line nr="1879" mi="0" ci="3" mb="0" cb="0"/><line nr="1880" mi="0" ci="3" mb="0" cb="0"/><line nr="1883" mi="0" ci="10" mb="0" cb="4"/><line nr="1886" mi="0" ci="1" mb="0" cb="0"/><line nr="1889" mi="0" ci="6" mb="0" cb="0"/><line nr="1890" mi="0" ci="1" mb="0" cb="0"/><line nr="1892" mi="0" ci="4" mb="0" cb="0"/><line nr="1893" mi="0" ci="3" mb="0" cb="0"/><line nr="1894" mi="0" ci="4" mb="0" cb="0"/><line nr="1899" mi="0" ci="6" mb="0" cb="0"/><line nr="1902" mi="0" ci="4" mb="0" cb="0"/><line nr="1903" mi="0" ci="4" mb="0" cb="0"/><line nr="1904" mi="0" ci="2" mb="0" cb="0"/><line nr="1909" mi="0" ci="3" mb="0" cb="0"/><line nr="1910" mi="0" ci="10" mb="1" cb="4"/><line nr="1932" mi="0" ci="4" mb="0" cb="0"/><line nr="1933" mi="0" ci="1" mb="0" cb="0"/><line nr="1936" mi="0" ci="4" mb="0" cb="0"/><line nr="1937" mi="0" ci="1" mb="0" cb="0"/><line nr="1940" mi="6" ci="0" mb="0" cb="0"/><line nr="1941" mi="4" ci="0" mb="0" cb="0"/><line nr="1942" mi="4" ci="0" mb="0" cb="0"/><line nr="1944" mi="0" ci="2" mb="0" cb="0"/><line nr="1947" mi="0" ci="2" mb="0" cb="0"/><line nr="1948" mi="0" ci="2" mb="0" cb="0"/><line nr="1950" mi="0" ci="4" mb="0" cb="0"/><line nr="1951" mi="0" ci="4" mb="0" cb="0"/><line nr="1952" mi="0" ci="3" mb="0" cb="0"/><line nr="1953" mi="2" ci="8" mb="1" cb="3"/><line nr="1956" mi="3" ci="7" mb="2" cb="3"/><line nr="1958" mi="0" ci="4" mb="0" cb="0"/><line nr="1959" mi="0" ci="3" mb="0" cb="0"/><line nr="1960" mi="0" ci="4" mb="0" cb="0"/><line nr="1961" mi="0" ci="1" mb="0" cb="0"/><line nr="1964" mi="0" ci="4" mb="0" cb="0"/><line nr="1965" mi="0" ci="3" mb="0" cb="0"/><line nr="1966" mi="0" ci="4" mb="0" cb="0"/><line nr="1967" mi="0" ci="1" mb="0" cb="0"/><line nr="1970" mi="6" ci="0" mb="0" cb="0"/><line nr="1971" mi="4" ci="0" mb="0" cb="0"/><line nr="1972" mi="4" ci="0" mb="0" cb="0"/><line nr="1977" mi="0" ci="6" mb="0" cb="0"/><line nr="1980" mi="0" ci="12" mb="0" cb="0"/><line nr="1984" mi="0" ci="10" mb="1" cb="10"/><line nr="1986" mi="0" ci="4" mb="0" cb="0"/><line nr="1987" mi="0" ci="8" mb="0" cb="0"/><line nr="1988" mi="0" ci="1" mb="0" cb="0"/><line nr="1991" mi="0" ci="4" mb="0" cb="0"/><line nr="1992" mi="0" ci="8" mb="0" cb="0"/><line nr="1993" mi="0" ci="1" mb="0" cb="0"/><line nr="1996" mi="0" ci="4" mb="0" cb="0"/><line nr="1997" mi="0" ci="8" mb="0" cb="0"/><line nr="1998" mi="0" ci="1" mb="0" cb="0"/><line nr="2001" mi="0" ci="4" mb="0" cb="0"/><line nr="2002" mi="0" ci="8" mb="0" cb="0"/><line nr="2003" mi="0" ci="1" mb="0" cb="0"/><line nr="2006" mi="0" ci="4" mb="0" cb="0"/><line nr="2007" mi="0" ci="8" mb="0" cb="0"/><line nr="2008" mi="0" ci="1" mb="0" cb="0"/><line nr="2011" mi="0" ci="4" mb="0" cb="0"/><line nr="2012" mi="0" ci="8" mb="0" cb="0"/><line nr="2013" mi="0" ci="1" mb="0" cb="0"/><line nr="2016" mi="0" ci="4" mb="0" cb="0"/><line nr="2017" mi="0" ci="8" mb="0" cb="0"/><line nr="2018" mi="0" ci="1" mb="0" cb="0"/><line nr="2021" mi="0" ci="4" mb="0" cb="0"/><line nr="2022" mi="0" ci="8" mb="0" cb="0"/><line nr="2023" mi="0" ci="1" mb="0" cb="0"/><line nr="2026" mi="6" ci="0" mb="0" cb="0"/><line nr="2027" mi="4" ci="0" mb="0" cb="0"/><line nr="2028" mi="4" ci="0" mb="0" cb="0"/><line nr="2030" mi="0" ci="2" mb="0" cb="0"/><line nr="2034" mi="0" ci="10" mb="1" cb="4"/><line nr="2036" mi="0" ci="4" mb="0" cb="0"/><line nr="2037" mi="0" ci="6" mb="0" cb="0"/><line nr="2038" mi="0" ci="1" mb="0" cb="0"/><line nr="2061" mi="0" ci="4" mb="0" cb="0"/><line nr="2062" mi="0" ci="1" mb="0" cb="0"/><line nr="2065" mi="6" ci="0" mb="0" cb="0"/><line nr="2066" mi="4" ci="0" mb="0" cb="0"/><line nr="2067" mi="4" ci="0" mb="0" cb="0"/><line nr="2069" mi="0" ci="2" mb="0" cb="0"/><line nr="2073" mi="0" ci="3" mb="0" cb="0"/><line nr="2074" mi="0" ci="10" mb="0" cb="0"/><line nr="2077" mi="0" ci="4" mb="0" cb="2"/><line nr="2082" mi="0" ci="4" mb="0" cb="0"/><line nr="2083" mi="0" ci="3" mb="0" cb="0"/><line nr="2084" mi="0" ci="14" mb="0" cb="0"/><line nr="2086" mi="0" ci="2" mb="0" cb="0"/><line nr="2090" mi="0" ci="3" mb="0" cb="0"/><line nr="2091" mi="0" ci="9" mb="0" cb="0"/><line nr="2092" mi="0" ci="2" mb="0" cb="0"/><line nr="2096" mi="0" ci="10" mb="7" cb="9"/><line nr="2098" mi="0" ci="4" mb="0" cb="0"/><line nr="2099" mi="0" ci="1" mb="0" cb="0"/><line nr="2102" mi="4" ci="0" mb="0" cb="0"/><line nr="2103" mi="1" ci="0" mb="0" cb="0"/><line nr="2106" mi="4" ci="0" mb="0" cb="0"/><line nr="2107" mi="1" ci="0" mb="0" cb="0"/><line nr="2110" mi="0" ci="4" mb="0" cb="0"/><line nr="2111" mi="0" ci="1" mb="0" cb="0"/><line nr="2114" mi="0" ci="4" mb="0" cb="0"/><line nr="2115" mi="0" ci="1" mb="0" cb="0"/><line nr="2118" mi="4" ci="0" mb="0" cb="0"/><line nr="2119" mi="1" ci="0" mb="0" cb="0"/><line nr="2122" mi="4" ci="0" mb="0" cb="0"/><line nr="2123" mi="1" ci="0" mb="0" cb="0"/><line nr="2126" mi="4" ci="0" mb="0" cb="0"/><line nr="2127" mi="1" ci="0" mb="0" cb="0"/><line nr="2130" mi="4" ci="0" mb="0" cb="0"/><line nr="2131" mi="1" ci="0" mb="0" cb="0"/><line nr="2134" mi="4" ci="0" mb="0" cb="0"/><line nr="2135" mi="1" ci="0" mb="0" cb="0"/><line nr="2138" mi="0" ci="4" mb="0" cb="0"/><line nr="2139" mi="0" ci="1" mb="0" cb="0"/><line nr="2142" mi="0" ci="4" mb="0" cb="0"/><line nr="2143" mi="0" ci="1" mb="0" cb="0"/><line nr="2146" mi="0" ci="4" mb="0" cb="0"/><line nr="2147" mi="0" ci="1" mb="0" cb="0"/><line nr="2150" mi="0" ci="6" mb="0" cb="0"/><line nr="2151" mi="4" ci="0" mb="0" cb="0"/><line nr="2152" mi="4" ci="0" mb="0" cb="0"/><line nr="2154" mi="0" ci="7" mb="0" cb="0"/><line nr="2155" mi="0" ci="2" mb="0" cb="0"/><line nr="2165" mi="0" ci="2" mb="0" cb="0"/><line nr="2166" mi="0" ci="5" mb="0" cb="0"/><line nr="2167" mi="0" ci="3" mb="0" cb="0"/><line nr="2168" mi="3" ci="7" mb="1" cb="3"/><line nr="2183" mi="0" ci="4" mb="0" cb="2"/><line nr="2184" mi="0" ci="3" mb="0" cb="0"/><line nr="2185" mi="0" ci="3" mb="0" cb="0"/><line nr="2186" mi="0" ci="13" mb="0" cb="0"/><line nr="2188" mi="3" ci="7" mb="2" cb="3"/><line nr="2190" mi="0" ci="4" mb="0" cb="0"/><line nr="2191" mi="0" ci="3" mb="0" cb="0"/><line nr="2192" mi="0" ci="3" mb="0" cb="2"/><line nr="2193" mi="0" ci="6" mb="0" cb="0"/><line nr="2194" mi="0" ci="3" mb="0" cb="2"/><line nr="2195" mi="0" ci="3" mb="0" cb="0"/><line nr="2196" mi="0" ci="3" mb="1" cb="1"/><line nr="2197" mi="0" ci="8" mb="0" cb="0"/><line nr="2199" mi="0" ci="1" mb="0" cb="0"/><line nr="2200" mi="0" ci="5" mb="0" cb="0"/><line nr="2202" mi="0" ci="1" mb="0" cb="0"/><line nr="2205" mi="0" ci="4" mb="0" cb="0"/><line nr="2206" mi="2" ci="8" mb="2" cb="2"/><line nr="2208" mi="3" ci="0" mb="0" cb="0"/><line nr="2209" mi="1" ci="0" mb="0" cb="0"/><line nr="2212" mi="0" ci="6" mb="0" cb="0"/><line nr="2215" mi="3" ci="7" mb="3" cb="2"/><line nr="2229" mi="0" ci="3" mb="0" cb="0"/><line nr="2230" mi="0" ci="1" mb="0" cb="0"/><line nr="2233" mi="4" ci="0" mb="0" cb="0"/><line nr="2234" mi="1" ci="0" mb="0" cb="0"/><line nr="2237" mi="6" ci="0" mb="0" cb="0"/><line nr="2238" mi="4" ci="0" mb="0" cb="0"/><line nr="2239" mi="4" ci="0" mb="0" cb="0"/><line nr="2241" mi="0" ci="15" mb="0" cb="0"/><line nr="2242" mi="0" ci="1" mb="0" cb="0"/><line nr="2245" mi="6" ci="0" mb="0" cb="0"/><line nr="2246" mi="4" ci="0" mb="0" cb="0"/><line nr="2247" mi="4" ci="0" mb="0" cb="0"/><line nr="2253" mi="0" ci="6" mb="0" cb="0"/><line nr="2256" mi="0" ci="2" mb="0" cb="0"/><line nr="2260" mi="3" ci="7" mb="2" cb="13"/><line nr="2262" mi="0" ci="4" mb="0" cb="0"/><line nr="2263" mi="0" ci="2" mb="0" cb="0"/><line nr="2264" mi="0" ci="1" mb="0" cb="0"/><line nr="2267" mi="0" ci="4" mb="0" cb="0"/><line nr="2268" mi="0" ci="2" mb="0" cb="0"/><line nr="2269" mi="0" ci="1" mb="0" cb="0"/><line nr="2272" mi="0" ci="4" mb="0" cb="0"/><line nr="2273" mi="0" ci="2" mb="0" cb="0"/><line nr="2274" mi="0" ci="1" mb="0" cb="0"/><line nr="2277" mi="0" ci="4" mb="0" cb="0"/><line nr="2278" mi="0" ci="2" mb="0" cb="0"/><line nr="2279" mi="0" ci="1" mb="0" cb="0"/><line nr="2282" mi="0" ci="4" mb="0" cb="0"/><line nr="2283" mi="0" ci="2" mb="0" cb="0"/><line nr="2284" mi="0" ci="1" mb="0" cb="0"/><line nr="2287" mi="0" ci="4" mb="0" cb="0"/><line nr="2288" mi="0" ci="2" mb="0" cb="0"/><line nr="2289" mi="0" ci="1" mb="0" cb="0"/><line nr="2292" mi="0" ci="4" mb="0" cb="0"/><line nr="2293" mi="0" ci="2" mb="0" cb="0"/><line nr="2294" mi="0" ci="1" mb="0" cb="0"/><line nr="2297" mi="0" ci="4" mb="0" cb="0"/><line nr="2298" mi="0" ci="2" mb="0" cb="0"/><line nr="2299" mi="0" ci="1" mb="0" cb="0"/><line nr="2302" mi="0" ci="4" mb="0" cb="0"/><line nr="2303" mi="0" ci="2" mb="0" cb="0"/><line nr="2304" mi="0" ci="1" mb="0" cb="0"/><line nr="2307" mi="0" ci="4" mb="0" cb="0"/><line nr="2308" mi="0" ci="2" mb="0" cb="0"/><line nr="2309" mi="0" ci="1" mb="0" cb="0"/><line nr="2312" mi="0" ci="4" mb="0" cb="0"/><line nr="2313" mi="0" ci="2" mb="0" cb="0"/><line nr="2314" mi="0" ci="1" mb="0" cb="0"/><line nr="2317" mi="0" ci="4" mb="0" cb="0"/><line nr="2318" mi="0" ci="2" mb="0" cb="0"/><line nr="2319" mi="0" ci="1" mb="0" cb="0"/><line nr="2322" mi="6" ci="0" mb="0" cb="0"/><line nr="2323" mi="4" ci="0" mb="0" cb="0"/><line nr="2324" mi="4" ci="0" mb="0" cb="0"/><line nr="2326" mi="0" ci="2" mb="0" cb="0"/><line nr="2332" mi="0" ci="3" mb="0" cb="0"/><line nr="2333" mi="3" ci="7" mb="1" cb="3"/><line nr="2335" mi="0" ci="4" mb="0" cb="0"/><line nr="2336" mi="0" ci="3" mb="0" cb="0"/><line nr="2337" mi="0" ci="4" mb="0" cb="0"/><line nr="2338" mi="0" ci="3" mb="0" cb="0"/><line nr="2339" mi="0" ci="12" mb="0" cb="0"/><line nr="2340" mi="0" ci="1" mb="0" cb="0"/><line nr="2343" mi="0" ci="6" mb="0" cb="0"/><line nr="2346" mi="0" ci="2" mb="0" cb="0"/><line nr="2351" mi="0" ci="3" mb="0" cb="0"/><line nr="2354" mi="3" ci="7" mb="1" cb="3"/><line nr="2357" mi="0" ci="1" mb="0" cb="0"/><line nr="2360" mi="0" ci="6" mb="0" cb="0"/><line nr="2361" mi="0" ci="1" mb="0" cb="0"/><line nr="2363" mi="0" ci="4" mb="0" cb="0"/><line nr="2364" mi="0" ci="3" mb="0" cb="0"/><line nr="2365" mi="0" ci="13" mb="0" cb="0"/><line nr="2367" mi="0" ci="2" mb="0" cb="0"/><line nr="2372" mi="0" ci="3" mb="0" cb="0"/><line nr="2375" mi="3" ci="7" mb="1" cb="3"/><line nr="2378" mi="0" ci="1" mb="0" cb="0"/><line nr="2381" mi="0" ci="6" mb="0" cb="0"/><line nr="2382" mi="0" ci="1" mb="0" cb="0"/><line nr="2384" mi="0" ci="4" mb="0" cb="0"/><line nr="2385" mi="0" ci="3" mb="0" cb="0"/><line nr="2386" mi="0" ci="13" mb="0" cb="0"/><line nr="2388" mi="0" ci="2" mb="0" cb="0"/><line nr="2393" mi="0" ci="3" mb="0" cb="0"/><line nr="2396" mi="3" ci="7" mb="1" cb="3"/><line nr="2399" mi="0" ci="1" mb="0" cb="0"/><line nr="2402" mi="0" ci="6" mb="0" cb="0"/><line nr="2403" mi="0" ci="1" mb="0" cb="0"/><line nr="2405" mi="0" ci="4" mb="0" cb="0"/><line nr="2406" mi="0" ci="3" mb="0" cb="0"/><line nr="2407" mi="0" ci="13" mb="0" cb="0"/><line nr="2409" mi="0" ci="2" mb="0" cb="0"/><line nr="2414" mi="0" ci="3" mb="0" cb="0"/><line nr="2417" mi="3" ci="7" mb="1" cb="3"/><line nr="2420" mi="0" ci="1" mb="0" cb="0"/><line nr="2423" mi="0" ci="6" mb="0" cb="0"/><line nr="2424" mi="0" ci="1" mb="0" cb="0"/><line nr="2426" mi="0" ci="4" mb="0" cb="0"/><line nr="2427" mi="0" ci="3" mb="0" cb="0"/><line nr="2428" mi="0" ci="13" mb="0" cb="0"/><line nr="2430" mi="0" ci="2" mb="0" cb="0"/><line nr="2435" mi="0" ci="3" mb="0" cb="0"/><line nr="2438" mi="3" ci="7" mb="1" cb="3"/><line nr="2441" mi="0" ci="1" mb="0" cb="0"/><line nr="2444" mi="0" ci="6" mb="0" cb="0"/><line nr="2445" mi="0" ci="1" mb="0" cb="0"/><line nr="2447" mi="0" ci="4" mb="0" cb="0"/><line nr="2448" mi="0" ci="3" mb="0" cb="0"/><line nr="2449" mi="0" ci="13" mb="0" cb="0"/><line nr="2451" mi="0" ci="2" mb="0" cb="0"/><line nr="2457" mi="0" ci="3" mb="0" cb="0"/><line nr="2460" mi="0" ci="10" mb="0" cb="4"/><line nr="2464" mi="0" ci="1" mb="0" cb="0"/><line nr="2467" mi="0" ci="6" mb="0" cb="0"/><line nr="2468" mi="0" ci="1" mb="0" cb="0"/><line nr="2470" mi="3" ci="7" mb="2" cb="3"/><line nr="2472" mi="0" ci="4" mb="0" cb="0"/><line nr="2473" mi="0" ci="2" mb="0" cb="0"/><line nr="2474" mi="0" ci="1" mb="0" cb="0"/><line nr="2477" mi="0" ci="4" mb="0" cb="0"/><line nr="2478" mi="0" ci="2" mb="0" cb="0"/><line nr="2479" mi="0" ci="1" mb="0" cb="0"/><line nr="2482" mi="6" ci="0" mb="0" cb="0"/><line nr="2483" mi="4" ci="0" mb="0" cb="0"/><line nr="2484" mi="4" ci="0" mb="0" cb="0"/><line nr="2486" mi="0" ci="3" mb="0" cb="0"/><line nr="2487" mi="0" ci="13" mb="0" cb="0"/><line nr="2489" mi="0" ci="2" mb="0" cb="0"/><line nr="2495" mi="0" ci="3" mb="0" cb="0"/><line nr="2496" mi="3" ci="7" mb="1" cb="3"/><line nr="2498" mi="0" ci="4" mb="0" cb="0"/><line nr="2499" mi="0" ci="3" mb="0" cb="0"/><line nr="2500" mi="0" ci="11" mb="0" cb="0"/><line nr="2501" mi="0" ci="1" mb="0" cb="0"/><line nr="2504" mi="0" ci="6" mb="0" cb="0"/><line nr="2507" mi="0" ci="2" mb="0" cb="0"/><line nr="2513" mi="0" ci="3" mb="0" cb="0"/><line nr="2516" mi="3" ci="7" mb="1" cb="3"/><line nr="2522" mi="0" ci="1" mb="0" cb="0"/><line nr="2525" mi="0" ci="6" mb="0" cb="0"/><line nr="2526" mi="0" ci="1" mb="0" cb="0"/><line nr="2528" mi="3" ci="7" mb="2" cb="5"/><line nr="2530" mi="0" ci="4" mb="0" cb="0"/><line nr="2531" mi="0" ci="2" mb="0" cb="0"/><line nr="2532" mi="0" ci="1" mb="0" cb="0"/><line nr="2535" mi="0" ci="4" mb="0" cb="0"/><line nr="2536" mi="0" ci="2" mb="0" cb="0"/><line nr="2537" mi="0" ci="1" mb="0" cb="0"/><line nr="2540" mi="0" ci="4" mb="0" cb="0"/><line nr="2541" mi="0" ci="2" mb="0" cb="0"/><line nr="2542" mi="0" ci="1" mb="0" cb="0"/><line nr="2545" mi="0" ci="4" mb="0" cb="0"/><line nr="2546" mi="0" ci="2" mb="0" cb="0"/><line nr="2547" mi="0" ci="1" mb="0" cb="0"/><line nr="2550" mi="6" ci="0" mb="0" cb="0"/><line nr="2551" mi="4" ci="0" mb="0" cb="0"/><line nr="2552" mi="4" ci="0" mb="0" cb="0"/><line nr="2554" mi="0" ci="3" mb="0" cb="0"/><line nr="2555" mi="0" ci="13" mb="0" cb="0"/><line nr="2557" mi="0" ci="2" mb="0" cb="0"/><line nr="2563" mi="0" ci="3" mb="0" cb="0"/><line nr="2566" mi="0" ci="4" mb="0" cb="2"/><line nr="2571" mi="3" ci="7" mb="1" cb="3"/><line nr="2573" mi="0" ci="4" mb="0" cb="0"/><line nr="2574" mi="0" ci="2" mb="0" cb="0"/><line nr="2575" mi="0" ci="1" mb="0" cb="0"/><line nr="2578" mi="0" ci="6" mb="0" cb="0"/><line nr="2579" mi="0" ci="4" mb="0" cb="2"/><line nr="2580" mi="0" ci="2" mb="0" cb="0"/><line nr="2581" mi="0" ci="3" mb="0" cb="0"/><line nr="2582" mi="0" ci="4" mb="1" cb="1"/><line nr="2583" mi="0" ci="2" mb="0" cb="0"/><line nr="2584" mi="0" ci="3" mb="0" cb="0"/><line nr="2586" mi="4" ci="0" mb="0" cb="0"/><line nr="2587" mi="4" ci="0" mb="0" cb="0"/><line nr="2590" mi="0" ci="3" mb="0" cb="0"/><line nr="2591" mi="0" ci="13" mb="0" cb="0"/><line nr="2593" mi="0" ci="2" mb="0" cb="0"/><line nr="2599" mi="0" ci="3" mb="0" cb="0"/><line nr="2602" mi="3" ci="7" mb="1" cb="3"/><line nr="2606" mi="0" ci="1" mb="0" cb="0"/><line nr="2609" mi="0" ci="6" mb="0" cb="0"/><line nr="2610" mi="0" ci="1" mb="0" cb="0"/><line nr="2612" mi="3" ci="7" mb="2" cb="3"/><line nr="2614" mi="0" ci="4" mb="0" cb="0"/><line nr="2615" mi="0" ci="2" mb="0" cb="0"/><line nr="2616" mi="0" ci="1" mb="0" cb="0"/><line nr="2619" mi="0" ci="4" mb="0" cb="0"/><line nr="2620" mi="0" ci="2" mb="0" cb="0"/><line nr="2621" mi="0" ci="1" mb="0" cb="0"/><line nr="2624" mi="6" ci="0" mb="0" cb="0"/><line nr="2625" mi="4" ci="0" mb="0" cb="0"/><line nr="2626" mi="4" ci="0" mb="0" cb="0"/><line nr="2628" mi="0" ci="3" mb="0" cb="0"/><line nr="2629" mi="0" ci="13" mb="0" cb="0"/><line nr="2631" mi="0" ci="2" mb="0" cb="0"/><line nr="2637" mi="0" ci="3" mb="0" cb="0"/><line nr="2640" mi="0" ci="10" mb="0" cb="4"/><line nr="2645" mi="0" ci="1" mb="0" cb="0"/><line nr="2648" mi="0" ci="6" mb="0" cb="0"/><line nr="2649" mi="0" ci="1" mb="0" cb="0"/><line nr="2651" mi="3" ci="7" mb="2" cb="4"/><line nr="2653" mi="0" ci="4" mb="0" cb="0"/><line nr="2654" mi="0" ci="2" mb="0" cb="0"/><line nr="2655" mi="0" ci="1" mb="0" cb="0"/><line nr="2658" mi="0" ci="4" mb="0" cb="0"/><line nr="2659" mi="0" ci="2" mb="0" cb="0"/><line nr="2660" mi="0" ci="1" mb="0" cb="0"/><line nr="2663" mi="0" ci="4" mb="0" cb="0"/><line nr="2664" mi="0" ci="2" mb="0" cb="0"/><line nr="2665" mi="0" ci="1" mb="0" cb="0"/><line nr="2668" mi="6" ci="0" mb="0" cb="0"/><line nr="2669" mi="4" ci="0" mb="0" cb="0"/><line nr="2670" mi="4" ci="0" mb="0" cb="0"/><line nr="2672" mi="0" ci="3" mb="0" cb="0"/><line nr="2673" mi="0" ci="13" mb="0" cb="0"/><line nr="2675" mi="0" ci="2" mb="0" cb="0"/><line nr="2680" mi="0" ci="2" mb="0" cb="0"/><line nr="2681" mi="0" ci="10" mb="1" cb="6"/><line nr="2683" mi="0" ci="3" mb="0" cb="0"/><line nr="2684" mi="0" ci="1" mb="0" cb="0"/><line nr="2687" mi="0" ci="3" mb="0" cb="0"/><line nr="2688" mi="0" ci="1" mb="0" cb="0"/><line nr="2692" mi="3" ci="7" mb="2" cb="3"/><line nr="2694" mi="0" ci="4" mb="0" cb="0"/><line nr="2695" mi="0" ci="5" mb="0" cb="0"/><line nr="2696" mi="0" ci="1" mb="0" cb="0"/><line nr="2699" mi="0" ci="4" mb="0" cb="0"/><line nr="2700" mi="0" ci="5" mb="0" cb="0"/><line nr="2701" mi="0" ci="1" mb="0" cb="0"/><line nr="2704" mi="6" ci="0" mb="0" cb="0"/><line nr="2705" mi="4" ci="0" mb="0" cb="0"/><line nr="2706" mi="4" ci="0" mb="0" cb="0"/><line nr="2708" mi="0" ci="3" mb="0" cb="0"/><line nr="2709" mi="0" ci="11" mb="0" cb="0"/><line nr="2710" mi="0" ci="1" mb="0" cb="0"/><line nr="2750" mi="0" ci="3" mb="0" cb="0"/><line nr="2751" mi="0" ci="1" mb="0" cb="0"/><line nr="2754" mi="6" ci="0" mb="0" cb="0"/><line nr="2755" mi="4" ci="0" mb="0" cb="0"/><line nr="2756" mi="4" ci="0" mb="0" cb="0"/><line nr="2758" mi="0" ci="2" mb="0" cb="0"/><line nr="2762" mi="0" ci="2" mb="0" cb="0"/><line nr="2763" mi="0" ci="4" mb="0" cb="0"/><line nr="2764" mi="0" ci="3" mb="0" cb="0"/><line nr="2765" mi="0" ci="3" mb="0" cb="0"/><line nr="2766" mi="0" ci="11" mb="0" cb="0"/><line nr="2767" mi="0" ci="2" mb="0" cb="0"/><line nr="2772" mi="0" ci="4" mb="0" cb="0"/><line nr="2773" mi="0" ci="3" mb="0" cb="0"/><line nr="2774" mi="0" ci="3" mb="0" cb="0"/><line nr="2775" mi="0" ci="11" mb="0" cb="0"/><line nr="2776" mi="0" ci="2" mb="0" cb="0"/><line nr="2781" mi="0" ci="2" mb="0" cb="0"/><line nr="2782" mi="0" ci="10" mb="0" cb="4"/><line nr="2785" mi="3" ci="7" mb="2" cb="3"/><line nr="2787" mi="0" ci="4" mb="0" cb="0"/><line nr="2788" mi="0" ci="5" mb="0" cb="0"/><line nr="2789" mi="0" ci="1" mb="0" cb="0"/><line nr="2792" mi="0" ci="4" mb="0" cb="0"/><line nr="2793" mi="0" ci="5" mb="0" cb="0"/><line nr="2794" mi="0" ci="1" mb="0" cb="0"/><line nr="2797" mi="6" ci="0" mb="0" cb="0"/><line nr="2798" mi="4" ci="0" mb="0" cb="0"/><line nr="2799" mi="4" ci="0" mb="0" cb="0"/><line nr="2801" mi="0" ci="3" mb="0" cb="0"/><line nr="2802" mi="0" ci="11" mb="0" cb="0"/><line nr="2803" mi="0" ci="1" mb="0" cb="0"/><line nr="2806" mi="0" ci="6" mb="0" cb="0"/><line nr="2807" mi="0" ci="4" mb="0" cb="2"/><line nr="2808" mi="0" ci="4" mb="0" cb="0"/><line nr="2810" mi="3" ci="7" mb="2" cb="3"/><line nr="2846" mi="0" ci="3" mb="0" cb="0"/><line nr="2847" mi="0" ci="1" mb="0" cb="0"/><line nr="2850" mi="0" ci="3" mb="0" cb="0"/><line nr="2851" mi="0" ci="1" mb="0" cb="0"/><line nr="2854" mi="6" ci="0" mb="0" cb="0"/><line nr="2855" mi="4" ci="0" mb="0" cb="0"/><line nr="2856" mi="4" ci="0" mb="0" cb="0"/><line nr="2860" mi="0" ci="2" mb="0" cb="0"/><line nr="2865" mi="0" ci="3" mb="0" cb="0"/><line nr="2866" mi="0" ci="4" mb="0" cb="2"/><line nr="2867" mi="3" ci="7" mb="2" cb="3"/><line nr="2869" mi="0" ci="4" mb="0" cb="0"/><line nr="2870" mi="0" ci="2" mb="0" cb="0"/><line nr="2871" mi="0" ci="1" mb="0" cb="0"/><line nr="2874" mi="0" ci="4" mb="0" cb="0"/><line nr="2875" mi="0" ci="2" mb="0" cb="0"/><line nr="2876" mi="0" ci="1" mb="0" cb="0"/><line nr="2879" mi="6" ci="0" mb="0" cb="0"/><line nr="2880" mi="4" ci="0" mb="0" cb="0"/><line nr="2881" mi="4" ci="0" mb="0" cb="0"/><line nr="2883" mi="0" ci="11" mb="0" cb="0"/><line nr="2887" mi="0" ci="2" mb="0" cb="0"/><line nr="2893" mi="0" ci="2" mb="0" cb="0"/><line nr="2895" mi="0" ci="3" mb="0" cb="0"/><line nr="2896" mi="0" ci="4" mb="0" cb="0"/><line nr="2897" mi="0" ci="3" mb="0" cb="0"/><line nr="2898" mi="0" ci="3" mb="0" cb="0"/><line nr="2899" mi="0" ci="4" mb="0" cb="2"/><line nr="2900" mi="0" ci="4" mb="0" cb="0"/><line nr="2901" mi="0" ci="4" mb="0" cb="0"/><line nr="2902" mi="0" ci="3" mb="0" cb="0"/><line nr="2903" mi="0" ci="12" mb="0" cb="0"/><line nr="2905" mi="2" ci="8" mb="2" cb="2"/><line nr="2927" mi="0" ci="4" mb="0" cb="0"/><line nr="2928" mi="0" ci="5" mb="0" cb="0"/><line nr="2931" mi="2" ci="8" mb="1" cb="3"/><line nr="2934" mi="0" ci="1" mb="0" cb="0"/><line nr="2937" mi="0" ci="6" mb="0" cb="0"/><line nr="2938" mi="0" ci="1" mb="0" cb="0"/><line nr="2940" mi="0" ci="4" mb="0" cb="0"/><line nr="2941" mi="0" ci="3" mb="0" cb="0"/><line nr="2942" mi="0" ci="6" mb="0" cb="0"/><line nr="2944" mi="0" ci="4" mb="0" cb="0"/><line nr="2945" mi="0" ci="3" mb="0" cb="0"/><line nr="2946" mi="0" ci="4" mb="0" cb="2"/><line nr="2947" mi="0" ci="26" mb="0" cb="0"/><line nr="2949" mi="0" ci="11" mb="0" cb="0"/><line nr="2951" mi="0" ci="1" mb="0" cb="0"/><line nr="2954" mi="6" ci="0" mb="0" cb="0"/><line nr="2955" mi="4" ci="0" mb="0" cb="0"/><line nr="2956" mi="4" ci="0" mb="0" cb="0"/><line nr="2959" mi="0" ci="2" mb="0" cb="0"/><line nr="2963" mi="0" ci="3" mb="0" cb="0"/><line nr="2966" mi="0" ci="4" mb="0" cb="2"/><line nr="2971" mi="0" ci="5" mb="0" cb="0"/><line nr="2973" mi="0" ci="2" mb="0" cb="0"/><line nr="2977" mi="3" ci="0" mb="0" cb="0"/><line nr="2980" mi="4" ci="0" mb="2" cb="0"/><line nr="2985" mi="5" ci="0" mb="0" cb="0"/><line nr="2987" mi="2" ci="0" mb="0" cb="0"/><line nr="2990" mi="0" ci="2" mb="0" cb="0"/><line nr="2992" mi="0" ci="5" mb="0" cb="0"/><line nr="2993" mi="0" ci="3" mb="0" cb="0"/><line nr="2994" mi="0" ci="3" mb="0" cb="0"/><line nr="2995" mi="0" ci="2" mb="0" cb="0"/><line nr="2996" mi="0" ci="2" mb="0" cb="0"/><line nr="2999" mi="0" ci="2" mb="0" cb="0"/><line nr="3000" mi="0" ci="2" mb="0" cb="0"/><line nr="3001" mi="3" ci="7" mb="1" cb="7"/><line nr="3010" mi="0" ci="3" mb="0" cb="0"/><line nr="3011" mi="0" ci="1" mb="0" cb="0"/><line nr="3014" mi="0" ci="4" mb="0" cb="0"/><line nr="3015" mi="0" ci="7" mb="0" cb="0"/><line nr="3016" mi="0" ci="1" mb="0" cb="0"/><line nr="3019" mi="0" ci="4" mb="0" cb="0"/><line nr="3020" mi="0" ci="7" mb="0" cb="0"/><line nr="3021" mi="2" ci="8" mb="2" cb="3"/><line nr="3023" mi="0" ci="4" mb="0" cb="0"/><line nr="3024" mi="2" ci="8" mb="1" cb="3"/><line nr="3026" mi="0" ci="3" mb="0" cb="0"/><line nr="3027" mi="0" ci="1" mb="0" cb="0"/><line nr="3030" mi="0" ci="6" mb="0" cb="0"/><line nr="3033" mi="0" ci="3" mb="0" cb="0"/><line nr="3034" mi="2" ci="8" mb="1" cb="3"/><line nr="3036" mi="0" ci="3" mb="0" cb="0"/><line nr="3037" mi="0" ci="2" mb="0" cb="0"/><line nr="3038" mi="0" ci="1" mb="0" cb="0"/><line nr="3041" mi="0" ci="6" mb="0" cb="0"/><line nr="3044" mi="0" ci="2" mb="0" cb="2"/><line nr="3045" mi="0" ci="15" mb="0" cb="0"/><line nr="3047" mi="0" ci="13" mb="0" cb="0"/><line nr="3049" mi="0" ci="1" mb="0" cb="0"/><line nr="3052" mi="4" ci="0" mb="0" cb="0"/><line nr="3053" mi="10" ci="0" mb="4" cb="0"/><line nr="3055" mi="3" ci="0" mb="0" cb="0"/><line nr="3056" mi="1" ci="0" mb="0" cb="0"/><line nr="3059" mi="6" ci="0" mb="0" cb="0"/><line nr="3062" mi="10" ci="0" mb="5" cb="0"/><line nr="3076" mi="3" ci="0" mb="0" cb="0"/><line nr="3077" mi="1" ci="0" mb="0" cb="0"/><line nr="3080" mi="4" ci="0" mb="0" cb="0"/><line nr="3081" mi="1" ci="0" mb="0" cb="0"/><line nr="3084" mi="6" ci="0" mb="0" cb="0"/><line nr="3085" mi="4" ci="0" mb="0" cb="0"/><line nr="3086" mi="4" ci="0" mb="0" cb="0"/><line nr="3088" mi="15" ci="0" mb="0" cb="0"/><line nr="3089" mi="1" ci="0" mb="0" cb="0"/><line nr="3092" mi="0" ci="6" mb="0" cb="0"/><line nr="3093" mi="4" ci="0" mb="0" cb="0"/><line nr="3094" mi="4" ci="0" mb="0" cb="0"/><line nr="3099" mi="0" ci="4" mb="0" cb="0"/><line nr="3100" mi="0" ci="3" mb="0" cb="0"/><line nr="3101" mi="2" ci="8" mb="1" cb="3"/><line nr="3103" mi="0" ci="4" mb="0" cb="0"/><line nr="3104" mi="0" ci="14" mb="0" cb="0"/><line nr="3105" mi="0" ci="1" mb="0" cb="0"/><line nr="3108" mi="0" ci="6" mb="0" cb="0"/><line nr="3109" mi="0" ci="4" mb="0" cb="2"/><line nr="3110" mi="0" ci="3" mb="0" cb="0"/><line nr="3111" mi="0" ci="4" mb="0" cb="0"/><line nr="3112" mi="0" ci="15" mb="0" cb="0"/><line nr="3113" mi="0" ci="4" mb="0" cb="2"/><line nr="3114" mi="0" ci="3" mb="0" cb="0"/><line nr="3115" mi="0" ci="4" mb="0" cb="0"/><line nr="3116" mi="0" ci="15" mb="0" cb="0"/><line nr="3118" mi="3" ci="7" mb="2" cb="2"/><line nr="3162" mi="0" ci="3" mb="0" cb="0"/><line nr="3163" mi="0" ci="4" mb="0" cb="0"/><line nr="3164" mi="0" ci="10" mb="0" cb="0"/><line nr="3165" mi="0" ci="1" mb="0" cb="0"/><line nr="3168" mi="6" ci="0" mb="0" cb="0"/><line nr="3169" mi="4" ci="0" mb="0" cb="0"/><line nr="3170" mi="4" ci="0" mb="0" cb="0"/><line nr="3177" mi="0" ci="4" mb="0" cb="0"/><line nr="3178" mi="0" ci="1" mb="0" cb="0"/><line nr="3181" mi="0" ci="6" mb="0" cb="0"/><line nr="3182" mi="0" ci="4" mb="0" cb="2"/><line nr="3183" mi="0" ci="5" mb="0" cb="0"/><line nr="3184" mi="0" ci="4" mb="0" cb="0"/><line nr="3185" mi="0" ci="4" mb="0" cb="0"/><line nr="3186" mi="0" ci="11" mb="0" cb="0"/><line nr="3187" mi="0" ci="4" mb="0" cb="2"/><line nr="3188" mi="0" ci="3" mb="0" cb="0"/><line nr="3189" mi="0" ci="4" mb="0" cb="0"/><line nr="3190" mi="2" ci="8" mb="1" cb="3"/><line nr="3192" mi="0" ci="3" mb="0" cb="0"/><line nr="3193" mi="0" ci="1" mb="0" cb="0"/><line nr="3196" mi="0" ci="6" mb="0" cb="0"/><line nr="3199" mi="0" ci="10" mb="1" cb="4"/><line nr="3213" mi="0" ci="3" mb="0" cb="0"/><line nr="3214" mi="0" ci="1" mb="0" cb="0"/><line nr="3217" mi="0" ci="4" mb="0" cb="0"/><line nr="3218" mi="0" ci="1" mb="0" cb="0"/><line nr="3221" mi="6" ci="0" mb="0" cb="0"/><line nr="3222" mi="4" ci="0" mb="0" cb="0"/><line nr="3223" mi="4" ci="0" mb="0" cb="0"/><line nr="3225" mi="0" ci="9" mb="0" cb="0"/><line nr="3226" mi="0" ci="16" mb="0" cb="0"/><line nr="3228" mi="3" ci="7" mb="2" cb="2"/><line nr="3242" mi="0" ci="3" mb="0" cb="0"/><line nr="3243" mi="0" ci="3" mb="0" cb="0"/><line nr="3244" mi="2" ci="8" mb="1" cb="3"/><line nr="3246" mi="0" ci="3" mb="0" cb="0"/><line nr="3247" mi="0" ci="2" mb="0" cb="0"/><line nr="3248" mi="0" ci="1" mb="0" cb="0"/><line nr="3251" mi="0" ci="6" mb="0" cb="0"/><line nr="3254" mi="0" ci="2" mb="0" cb="2"/><line nr="3255" mi="0" ci="14" mb="0" cb="0"/><line nr="3257" mi="0" ci="5" mb="0" cb="0"/><line nr="3259" mi="0" ci="1" mb="0" cb="0"/><line nr="3262" mi="6" ci="0" mb="0" cb="0"/><line nr="3263" mi="4" ci="0" mb="0" cb="0"/><line nr="3264" mi="4" ci="0" mb="0" cb="0"/><line nr="3268" mi="0" ci="2" mb="0" cb="0"/><line nr="3272" mi="0" ci="4" mb="0" cb="2"/><line nr="3273" mi="0" ci="5" mb="0" cb="0"/><line nr="3275" mi="3" ci="7" mb="2" cb="2"/><line nr="3277" mi="0" ci="4" mb="0" cb="0"/><line nr="3278" mi="0" ci="4" mb="0" cb="0"/><line nr="3279" mi="0" ci="10" mb="0" cb="0"/><line nr="3280" mi="0" ci="1" mb="0" cb="0"/><line nr="3283" mi="6" ci="0" mb="0" cb="0"/><line nr="3284" mi="4" ci="0" mb="0" cb="0"/><line nr="3285" mi="4" ci="0" mb="0" cb="0"/><line nr="3288" mi="0" ci="2" mb="0" cb="0"/><line nr="3292" mi="0" ci="5" mb="0" cb="0"/><line nr="3293" mi="0" ci="3" mb="0" cb="0"/><line nr="3294" mi="0" ci="2" mb="0" cb="0"/><line nr="3296" mi="0" ci="10" mb="1" cb="4"/><line nr="3298" mi="0" ci="4" mb="0" cb="0"/><line nr="3299" mi="2" ci="8" mb="1" cb="4"/><line nr="3301" mi="0" ci="4" mb="0" cb="0"/><line nr="3302" mi="0" ci="10" mb="0" cb="0"/><line nr="3303" mi="0" ci="1" mb="0" cb="0"/><line nr="3306" mi="0" ci="4" mb="0" cb="0"/><line nr="3307" mi="0" ci="1" mb="0" cb="0"/><line nr="3310" mi="0" ci="6" mb="0" cb="0"/><line nr="3311" mi="0" ci="4" mb="1" cb="1"/><line nr="3312" mi="3" ci="7" mb="1" cb="3"/><line nr="3314" mi="0" ci="3" mb="0" cb="0"/><line nr="3315" mi="0" ci="1" mb="0" cb="0"/><line nr="3318" mi="0" ci="6" mb="0" cb="0"/><line nr="3321" mi="0" ci="3" mb="0" cb="0"/><line nr="3322" mi="2" ci="8" mb="1" cb="3"/><line nr="3324" mi="0" ci="3" mb="0" cb="0"/><line nr="3325" mi="0" ci="2" mb="0" cb="0"/><line nr="3326" mi="0" ci="1" mb="0" cb="0"/><line nr="3329" mi="0" ci="6" mb="0" cb="0"/><line nr="3332" mi="0" ci="2" mb="0" cb="2"/><line nr="3333" mi="0" ci="15" mb="0" cb="0"/><line nr="3335" mi="0" ci="14" mb="0" cb="0"/><line nr="3338" mi="4" ci="0" mb="0" cb="0"/><line nr="3339" mi="4" ci="0" mb="0" cb="0"/><line nr="3345" mi="0" ci="4" mb="0" cb="0"/><line nr="3346" mi="0" ci="3" mb="0" cb="0"/><line nr="3347" mi="0" ci="4" mb="0" cb="0"/><line nr="3348" mi="0" ci="11" mb="0" cb="0"/><line nr="3349" mi="0" ci="1" mb="0" cb="0"/><line nr="3352" mi="6" ci="0" mb="0" cb="0"/><line nr="3353" mi="4" ci="0" mb="0" cb="0"/><line nr="3354" mi="4" ci="0" mb="0" cb="0"/><line nr="3356" mi="0" ci="2" mb="0" cb="0"/><line nr="3360" mi="3" ci="7" mb="2" cb="8"/><line nr="3362" mi="0" ci="4" mb="0" cb="0"/><line nr="3363" mi="0" ci="9" mb="0" cb="0"/><line nr="3364" mi="0" ci="1" mb="0" cb="0"/><line nr="3367" mi="0" ci="4" mb="0" cb="0"/><line nr="3368" mi="0" ci="9" mb="0" cb="0"/><line nr="3369" mi="0" ci="1" mb="0" cb="0"/><line nr="3372" mi="0" ci="4" mb="0" cb="0"/><line nr="3373" mi="0" ci="9" mb="0" cb="0"/><line nr="3374" mi="0" ci="1" mb="0" cb="0"/><line nr="3377" mi="0" ci="4" mb="0" cb="0"/><line nr="3378" mi="0" ci="17" mb="0" cb="0"/><line nr="3379" mi="0" ci="1" mb="0" cb="0"/><line nr="3382" mi="0" ci="4" mb="0" cb="0"/><line nr="3383" mi="0" ci="17" mb="0" cb="0"/><line nr="3384" mi="0" ci="1" mb="0" cb="0"/><line nr="3388" mi="0" ci="3" mb="0" cb="0"/><line nr="3389" mi="0" ci="1" mb="0" cb="0"/><line nr="3392" mi="0" ci="3" mb="0" cb="0"/><line nr="3393" mi="0" ci="1" mb="0" cb="0"/><line nr="3396" mi="6" ci="0" mb="0" cb="0"/><line nr="3397" mi="4" ci="0" mb="0" cb="0"/><line nr="3398" mi="4" ci="0" mb="0" cb="0"/><line nr="3400" mi="0" ci="2" mb="0" cb="0"/><line nr="3404" mi="3" ci="7" mb="2" cb="3"/><line nr="3406" mi="0" ci="4" mb="0" cb="0"/><line nr="3407" mi="0" ci="7" mb="0" cb="0"/><line nr="3408" mi="0" ci="1" mb="0" cb="0"/><line nr="3411" mi="0" ci="4" mb="0" cb="0"/><line nr="3412" mi="0" ci="7" mb="0" cb="0"/><line nr="3413" mi="0" ci="1" mb="0" cb="0"/><line nr="3416" mi="6" ci="0" mb="0" cb="0"/><line nr="3417" mi="4" ci="0" mb="0" cb="0"/><line nr="3418" mi="4" ci="0" mb="0" cb="0"/><line nr="3420" mi="0" ci="2" mb="0" cb="0"/><line nr="3424" mi="0" ci="4" mb="0" cb="0"/><line nr="3425" mi="0" ci="6" mb="0" cb="0"/><line nr="3428" mi="0" ci="3" mb="0" cb="0"/><line nr="3429" mi="0" ci="4" mb="0" cb="0"/><line nr="3430" mi="2" ci="8" mb="1" cb="3"/><line nr="3473" mi="0" ci="3" mb="0" cb="0"/><line nr="3474" mi="0" ci="1" mb="0" cb="0"/><line nr="3477" mi="0" ci="6" mb="0" cb="0"/><line nr="3480" mi="0" ci="4" mb="0" cb="0"/><line nr="3481" mi="0" ci="2" mb="0" cb="0"/><line nr="3484" mi="0" ci="3" mb="0" cb="0"/><line nr="3486" mi="0" ci="3" mb="0" cb="0"/><line nr="3487" mi="0" ci="4" mb="0" cb="0"/><line nr="3490" mi="0" ci="10" mb="0" cb="4"/><line nr="3493" mi="0" ci="1" mb="0" cb="0"/><line nr="3496" mi="0" ci="6" mb="0" cb="0"/><line nr="3497" mi="0" ci="1" mb="0" cb="0"/><line nr="3499" mi="0" ci="4" mb="0" cb="0"/><line nr="3500" mi="0" ci="3" mb="0" cb="0"/><line nr="3501" mi="0" ci="5" mb="0" cb="0"/><line nr="3503" mi="0" ci="2" mb="0" cb="0"/><line nr="3508" mi="0" ci="5" mb="0" cb="0"/><line nr="3509" mi="0" ci="2" mb="0" cb="0"/><line nr="3511" mi="0" ci="2" mb="0" cb="0"/><line nr="3512" mi="0" ci="4" mb="0" cb="0"/><line nr="3513" mi="0" ci="4" mb="0" cb="0"/><line nr="3514" mi="0" ci="11" mb="0" cb="2"/><line nr="3515" mi="0" ci="3" mb="0" cb="0"/><line nr="3516" mi="2" ci="8" mb="2" cb="3"/><line nr="3525" mi="0" ci="4" mb="0" cb="0"/><line nr="3526" mi="0" ci="5" mb="0" cb="0"/><line nr="3527" mi="0" ci="1" mb="0" cb="0"/><line nr="3544" mi="3" ci="7" mb="1" cb="3"/><line nr="3546" mi="0" ci="3" mb="0" cb="0"/><line nr="3547" mi="0" ci="1" mb="0" cb="0"/><line nr="3550" mi="0" ci="6" mb="0" cb="0"/><line nr="3553" mi="0" ci="3" mb="0" cb="0"/><line nr="3554" mi="2" ci="8" mb="2" cb="3"/><line nr="3557" mi="0" ci="5" mb="0" cb="0"/><line nr="3558" mi="0" ci="1" mb="0" cb="0"/><line nr="3561" mi="0" ci="3" mb="0" cb="0"/><line nr="3562" mi="0" ci="4" mb="0" cb="2"/><line nr="3563" mi="0" ci="3" mb="0" cb="0"/><line nr="3567" mi="0" ci="16" mb="0" cb="0"/><line nr="3568" mi="0" ci="1" mb="0" cb="0"/><line nr="3571" mi="6" ci="0" mb="0" cb="0"/><line nr="3572" mi="4" ci="0" mb="0" cb="0"/><line nr="3573" mi="4" ci="0" mb="0" cb="0"/><line nr="3578" mi="6" ci="0" mb="0" cb="0"/><line nr="3579" mi="4" ci="0" mb="0" cb="0"/><line nr="3580" mi="4" ci="0" mb="0" cb="0"/><line nr="3582" mi="0" ci="2" mb="0" cb="0"/><line nr="3585" mi="0" ci="2" mb="0" cb="0"/><line nr="3586" mi="0" ci="2" mb="0" cb="0"/><line nr="3587" mi="0" ci="3" mb="0" cb="0"/><line nr="3588" mi="0" ci="4" mb="0" cb="0"/><line nr="3589" mi="0" ci="4" mb="0" cb="0"/><line nr="3590" mi="0" ci="2" mb="0" cb="0"/><line nr="3591" mi="0" ci="4" mb="0" cb="0"/><line nr="3594" mi="0" ci="3" mb="0" cb="0"/><line nr="3595" mi="0" ci="4" mb="0" cb="0"/><line nr="3596" mi="0" ci="13" mb="0" cb="2"/><line nr="3597" mi="2" ci="8" mb="1" cb="3"/><line nr="3640" mi="0" ci="3" mb="0" cb="0"/><line nr="3641" mi="0" ci="1" mb="0" cb="0"/><line nr="3644" mi="0" ci="6" mb="0" cb="0"/><line nr="3647" mi="0" ci="14" mb="0" cb="0"/><line nr="3648" mi="0" ci="4" mb="0" cb="0"/><line nr="3649" mi="0" ci="8" mb="0" cb="0"/><line nr="3650" mi="0" ci="5" mb="0" cb="2"/><line nr="3656" mi="2" ci="8" mb="1" cb="3"/><line nr="3658" mi="0" ci="3" mb="0" cb="0"/><line nr="3659" mi="0" ci="1" mb="0" cb="0"/><line nr="3662" mi="0" ci="6" mb="0" cb="0"/><line nr="3665" mi="0" ci="13" mb="0" cb="0"/><line nr="3674" mi="0" ci="4" mb="0" cb="2"/><line nr="3675" mi="0" ci="4" mb="0" cb="0"/><line nr="3677" mi="0" ci="10" mb="1" cb="17"/><line nr="3679" mi="0" ci="3" mb="0" cb="0"/><line nr="3680" mi="0" ci="1" mb="0" cb="0"/><line nr="3683" mi="0" ci="3" mb="0" cb="0"/><line nr="3684" mi="0" ci="1" mb="0" cb="0"/><line nr="3687" mi="0" ci="3" mb="0" cb="0"/><line nr="3688" mi="0" ci="1" mb="0" cb="0"/><line nr="3727" mi="0" ci="3" mb="0" cb="0"/><line nr="3728" mi="0" ci="1" mb="0" cb="0"/><line nr="3731" mi="0" ci="3" mb="0" cb="0"/><line nr="3732" mi="0" ci="1" mb="0" cb="0"/><line nr="3735" mi="0" ci="3" mb="0" cb="0"/><line nr="3736" mi="0" ci="1" mb="0" cb="0"/><line nr="3739" mi="0" ci="3" mb="0" cb="0"/><line nr="3740" mi="0" ci="1" mb="0" cb="0"/><line nr="3743" mi="0" ci="3" mb="0" cb="0"/><line nr="3744" mi="0" ci="1" mb="0" cb="0"/><line nr="3747" mi="0" ci="3" mb="0" cb="0"/><line nr="3748" mi="0" ci="1" mb="0" cb="0"/><line nr="3751" mi="0" ci="3" mb="0" cb="0"/><line nr="3752" mi="0" ci="1" mb="0" cb="0"/><line nr="3755" mi="0" ci="3" mb="0" cb="0"/><line nr="3756" mi="0" ci="1" mb="0" cb="0"/><line nr="3759" mi="0" ci="3" mb="0" cb="0"/><line nr="3760" mi="0" ci="1" mb="0" cb="0"/><line nr="3763" mi="0" ci="3" mb="0" cb="0"/><line nr="3764" mi="0" ci="1" mb="0" cb="0"/><line nr="3767" mi="0" ci="3" mb="0" cb="0"/><line nr="3768" mi="0" ci="1" mb="0" cb="0"/><line nr="3771" mi="0" ci="3" mb="0" cb="0"/><line nr="3772" mi="0" ci="1" mb="0" cb="0"/><line nr="3775" mi="6" ci="0" mb="0" cb="0"/><line nr="3776" mi="4" ci="0" mb="0" cb="0"/><line nr="3777" mi="4" ci="0" mb="0" cb="0"/><line nr="3780" mi="0" ci="2" mb="0" cb="0"/><line nr="3781" mi="0" ci="1" mb="0" cb="0"/><line nr="3782" mi="0" ci="5" mb="0" cb="0"/><line nr="3783" mi="0" ci="5" mb="0" cb="0"/><line nr="3788" mi="0" ci="2" mb="0" cb="0"/><line nr="3790" mi="0" ci="4" mb="0" cb="0"/><line nr="3791" mi="0" ci="3" mb="0" cb="0"/><line nr="3792" mi="0" ci="3" mb="0" cb="0"/><line nr="3793" mi="3" ci="7" mb="1" cb="3"/><line nr="3795" mi="0" ci="4" mb="0" cb="0"/><line nr="3796" mi="0" ci="3" mb="0" cb="0"/><line nr="3797" mi="0" ci="1" mb="0" cb="0"/><line nr="3800" mi="0" ci="6" mb="0" cb="0"/><line nr="3803" mi="0" ci="4" mb="0" cb="0"/><line nr="3804" mi="0" ci="11" mb="0" cb="0"/><line nr="3810" mi="0" ci="3" mb="0" cb="0"/><line nr="3811" mi="0" ci="3" mb="0" cb="0"/><line nr="3812" mi="0" ci="4" mb="0" cb="0"/><line nr="3813" mi="0" ci="3" mb="0" cb="0"/><line nr="3814" mi="0" ci="11" mb="0" cb="0"/><line nr="3817" mi="0" ci="3" mb="0" cb="0"/><line nr="3819" mi="0" ci="4" mb="0" cb="0"/><line nr="3820" mi="0" ci="3" mb="0" cb="0"/><line nr="3822" mi="0" ci="3" mb="0" cb="0"/><line nr="3823" mi="0" ci="4" mb="0" cb="0"/><line nr="3824" mi="0" ci="10" mb="0" cb="0"/><line nr="3825" mi="0" ci="1" mb="0" cb="0"/><line nr="3826" mi="0" ci="5" mb="0" cb="0"/><line nr="3827" mi="0" ci="12" mb="0" cb="0"/><line nr="3828" mi="0" ci="4" mb="0" cb="0"/><line nr="3829" mi="0" ci="2" mb="0" cb="0"/><line nr="3841" mi="0" ci="4" mb="0" cb="2"/><line nr="3842" mi="0" ci="3" mb="0" cb="0"/><line nr="3843" mi="0" ci="4" mb="0" cb="0"/><line nr="3844" mi="0" ci="11" mb="0" cb="0"/><line nr="3845" mi="0" ci="4" mb="0" cb="2"/><line nr="3846" mi="0" ci="3" mb="0" cb="0"/><line nr="3847" mi="0" ci="4" mb="0" cb="0"/><line nr="3848" mi="0" ci="11" mb="0" cb="0"/><line nr="3850" mi="0" ci="10" mb="1" cb="3"/><line nr="3902" mi="0" ci="3" mb="0" cb="0"/><line nr="3903" mi="0" ci="1" mb="0" cb="0"/><line nr="3906" mi="6" ci="0" mb="0" cb="0"/><line nr="3907" mi="4" ci="0" mb="0" cb="0"/><line nr="3908" mi="4" ci="0" mb="0" cb="0"/><line nr="3911" mi="0" ci="2" mb="0" cb="0"/><line nr="3912" mi="0" ci="1" mb="0" cb="0"/><line nr="3913" mi="0" ci="5" mb="0" cb="0"/><line nr="3914" mi="0" ci="5" mb="0" cb="0"/><line nr="3920" mi="0" ci="4" mb="0" cb="0"/><line nr="3922" mi="0" ci="3" mb="0" cb="0"/><line nr="3923" mi="0" ci="5" mb="0" cb="0"/><line nr="3924" mi="0" ci="4" mb="0" cb="0"/><line nr="3925" mi="0" ci="4" mb="0" cb="0"/><line nr="3928" mi="0" ci="10" mb="0" cb="4"/><line nr="3931" mi="0" ci="1" mb="0" cb="0"/><line nr="3934" mi="0" ci="6" mb="0" cb="0"/><line nr="3935" mi="0" ci="1" mb="0" cb="0"/><line nr="3937" mi="0" ci="4" mb="0" cb="0"/><line nr="3938" mi="0" ci="4" mb="0" cb="0"/><line nr="3939" mi="0" ci="5" mb="0" cb="0"/><line nr="3941" mi="0" ci="6" mb="0" cb="0"/><line nr="3942" mi="0" ci="14" mb="0" cb="0"/><line nr="3946" mi="0" ci="4" mb="0" cb="0"/><line nr="3947" mi="0" ci="6" mb="0" cb="0"/><line nr="3951" mi="0" ci="2" mb="0" cb="0"/><line nr="3952" mi="2" ci="8" mb="2" cb="3"/><line nr="3995" mi="0" ci="3" mb="0" cb="0"/><line nr="3996" mi="0" ci="10" mb="0" cb="0"/><line nr="3997" mi="0" ci="1" mb="0" cb="0"/><line nr="4000" mi="0" ci="3" mb="0" cb="0"/><line nr="4001" mi="0" ci="1" mb="0" cb="0"/><line nr="4004" mi="6" ci="0" mb="0" cb="0"/><line nr="4005" mi="4" ci="0" mb="0" cb="0"/><line nr="4006" mi="4" ci="0" mb="0" cb="0"/><line nr="4008" mi="0" ci="2" mb="0" cb="0"/><line nr="4014" mi="0" ci="5" mb="0" cb="0"/><line nr="4016" mi="0" ci="4" mb="0" cb="2"/><line nr="4017" mi="0" ci="4" mb="0" cb="0"/><line nr="4019" mi="3" ci="7" mb="2" cb="3"/><line nr="4021" mi="0" ci="3" mb="0" cb="0"/><line nr="4022" mi="0" ci="1" mb="0" cb="0"/><line nr="4059" mi="0" ci="3" mb="0" cb="0"/><line nr="4060" mi="0" ci="10" mb="0" cb="4"/><line nr="4075" mi="3" ci="7" mb="2" cb="4"/><line nr="4077" mi="0" ci="4" mb="0" cb="0"/><line nr="4078" mi="0" ci="11" mb="0" cb="0"/><line nr="4079" mi="0" ci="1" mb="0" cb="0"/><line nr="4082" mi="0" ci="4" mb="0" cb="0"/><line nr="4083" mi="0" ci="11" mb="0" cb="0"/><line nr="4084" mi="0" ci="1" mb="0" cb="0"/><line nr="4098" mi="0" ci="3" mb="0" cb="0"/><line nr="4099" mi="0" ci="3" mb="0" cb="0"/><line nr="4100" mi="0" ci="12" mb="0" cb="0"/><line nr="4101" mi="0" ci="1" mb="0" cb="0"/><line nr="4104" mi="6" ci="0" mb="0" cb="0"/><line nr="4105" mi="4" ci="0" mb="0" cb="0"/><line nr="4106" mi="4" ci="0" mb="0" cb="0"/><line nr="4111" mi="0" ci="6" mb="0" cb="0"/><line nr="4114" mi="0" ci="1" mb="0" cb="0"/><line nr="4117" mi="6" ci="0" mb="0" cb="0"/><line nr="4118" mi="4" ci="0" mb="0" cb="0"/><line nr="4119" mi="4" ci="0" mb="0" cb="0"/><line nr="4122" mi="0" ci="4" mb="0" cb="0"/><line nr="4123" mi="0" ci="10" mb="0" cb="0"/><line nr="4128" mi="0" ci="3" mb="0" cb="0"/><line nr="4130" mi="0" ci="4" mb="0" cb="0"/><line nr="4131" mi="0" ci="3" mb="0" cb="0"/><line nr="4132" mi="0" ci="4" mb="0" cb="0"/><line nr="4133" mi="0" ci="3" mb="0" cb="0"/><line nr="4134" mi="0" ci="4" mb="0" cb="0"/><line nr="4135" mi="0" ci="4" mb="0" cb="0"/><line nr="4138" mi="0" ci="10" mb="0" cb="4"/><line nr="4142" mi="0" ci="1" mb="0" cb="0"/><line nr="4145" mi="0" ci="6" mb="0" cb="0"/><line nr="4146" mi="0" ci="1" mb="0" cb="0"/><line nr="4148" mi="0" ci="3" mb="0" cb="0"/><line nr="4149" mi="0" ci="6" mb="0" cb="0"/><line nr="4151" mi="0" ci="4" mb="0" cb="0"/><line nr="4152" mi="0" ci="11" mb="0" cb="0"/><line nr="4157" mi="0" ci="3" mb="0" cb="0"/><line nr="4159" mi="0" ci="4" mb="0" cb="0"/><line nr="4160" mi="0" ci="3" mb="0" cb="0"/><line nr="4161" mi="0" ci="4" mb="0" cb="0"/><line nr="4162" mi="0" ci="3" mb="0" cb="0"/><line nr="4163" mi="0" ci="4" mb="0" cb="0"/><line nr="4164" mi="0" ci="4" mb="0" cb="0"/><line nr="4167" mi="2" ci="8" mb="1" cb="3"/><line nr="4171" mi="0" ci="1" mb="0" cb="0"/><line nr="4174" mi="0" ci="6" mb="0" cb="0"/><line nr="4175" mi="0" ci="1" mb="0" cb="0"/><line nr="4177" mi="0" ci="3" mb="0" cb="0"/><line nr="4178" mi="0" ci="6" mb="0" cb="0"/><line nr="4180" mi="0" ci="4" mb="0" cb="0"/><line nr="4181" mi="0" ci="11" mb="0" cb="0"/><line nr="4184" mi="0" ci="2" mb="0" cb="0"/><line nr="4185" mi="0" ci="3" mb="0" cb="0"/><line nr="4186" mi="0" ci="3" mb="0" cb="0"/><line nr="4189" mi="0" ci="2" mb="0" cb="0"/><line nr="4190" mi="0" ci="2" mb="0" cb="0"/><line nr="4191" mi="3" ci="7" mb="2" cb="3"/><line nr="4193" mi="0" ci="4" mb="0" cb="0"/><line nr="4194" mi="0" ci="3" mb="0" cb="0"/><line nr="4195" mi="0" ci="3" mb="0" cb="0"/><line nr="4196" mi="0" ci="5" mb="0" cb="0"/><line nr="4199" mi="3" ci="7" mb="1" cb="3"/><line nr="4202" mi="0" ci="1" mb="0" cb="0"/><line nr="4205" mi="0" ci="6" mb="0" cb="0"/><line nr="4206" mi="0" ci="1" mb="0" cb="0"/><line nr="4208" mi="0" ci="4" mb="0" cb="0"/><line nr="4209" mi="0" ci="3" mb="0" cb="0"/><line nr="4210" mi="0" ci="6" mb="0" cb="0"/><line nr="4215" mi="0" ci="4" mb="0" cb="0"/><line nr="4216" mi="0" ci="3" mb="0" cb="0"/><line nr="4217" mi="0" ci="1" mb="0" cb="0"/><line nr="4220" mi="6" ci="0" mb="0" cb="0"/><line nr="4221" mi="4" ci="0" mb="0" cb="0"/><line nr="4222" mi="4" ci="0" mb="0" cb="0"/><line nr="4224" mi="0" ci="10" mb="1" cb="4"/><line nr="4226" mi="0" ci="4" mb="0" cb="0"/><line nr="4227" mi="0" ci="3" mb="0" cb="0"/><line nr="4228" mi="0" ci="12" mb="0" cb="0"/><line nr="4229" mi="0" ci="1" mb="0" cb="0"/><line nr="4232" mi="0" ci="4" mb="0" cb="0"/><line nr="4233" mi="2" ci="8" mb="2" cb="4"/><line nr="4276" mi="0" ci="3" mb="0" cb="0"/><line nr="4277" mi="0" ci="4" mb="0" cb="0"/><line nr="4278" mi="0" ci="6" mb="0" cb="0"/><line nr="4279" mi="0" ci="8" mb="0" cb="0"/><line nr="4280" mi="0" ci="8" mb="0" cb="0"/><line nr="4281" mi="0" ci="1" mb="0" cb="0"/><line nr="4284" mi="0" ci="3" mb="0" cb="0"/><line nr="4285" mi="0" ci="6" mb="0" cb="0"/><line nr="4286" mi="0" ci="4" mb="0" cb="0"/><line nr="4287" mi="0" ci="8" mb="0" cb="0"/><line nr="4288" mi="0" ci="1" mb="0" cb="0"/><line nr="4291" mi="0" ci="3" mb="0" cb="0"/><line nr="4292" mi="0" ci="6" mb="0" cb="0"/><line nr="4293" mi="0" ci="4" mb="0" cb="0"/><line nr="4294" mi="0" ci="8" mb="0" cb="0"/><line nr="4295" mi="0" ci="1" mb="0" cb="0"/><line nr="4298" mi="6" ci="0" mb="0" cb="0"/><line nr="4299" mi="4" ci="0" mb="0" cb="0"/><line nr="4300" mi="4" ci="0" mb="0" cb="0"/><line nr="4305" mi="6" ci="0" mb="0" cb="0"/><line nr="4306" mi="4" ci="0" mb="0" cb="0"/><line nr="4307" mi="4" ci="0" mb="0" cb="0"/><line nr="4309" mi="0" ci="2" mb="0" cb="0"/><line nr="4314" mi="0" ci="2" mb="0" cb="0"/><line nr="4316" mi="0" ci="4" mb="0" cb="0"/><line nr="4317" mi="0" ci="3" mb="0" cb="0"/><line nr="4318" mi="0" ci="4" mb="0" cb="0"/><line nr="4319" mi="0" ci="3" mb="0" cb="0"/><line nr="4320" mi="0" ci="4" mb="0" cb="0"/><line nr="4322" mi="0" ci="3" mb="0" cb="0"/><line nr="4323" mi="0" ci="10" mb="0" cb="4"/><line nr="4325" mi="0" ci="4" mb="0" cb="0"/><line nr="4327" mi="0" ci="3" mb="0" cb="0"/><line nr="4328" mi="0" ci="1" mb="0" cb="0"/><line nr="4331" mi="0" ci="6" mb="0" cb="0"/><line nr="4334" mi="0" ci="12" mb="0" cb="0"/><line nr="4340" mi="0" ci="4" mb="0" cb="0"/><line nr="4341" mi="0" ci="3" mb="0" cb="0"/><line nr="4342" mi="0" ci="4" mb="0" cb="0"/><line nr="4343" mi="0" ci="3" mb="0" cb="0"/><line nr="4344" mi="0" ci="4" mb="0" cb="0"/><line nr="4345" mi="0" ci="3" mb="0" cb="0"/><line nr="4346" mi="0" ci="11" mb="0" cb="0"/><line nr="4352" mi="0" ci="4" mb="0" cb="0"/><line nr="4353" mi="0" ci="3" mb="0" cb="0"/><line nr="4354" mi="0" ci="3" mb="0" cb="0"/><line nr="4355" mi="0" ci="4" mb="0" cb="0"/><line nr="4356" mi="0" ci="4" mb="0" cb="0"/><line nr="4357" mi="0" ci="3" mb="0" cb="0"/><line nr="4358" mi="0" ci="4" mb="0" cb="0"/><line nr="4359" mi="0" ci="4" mb="0" cb="0"/><line nr="4360" mi="0" ci="11" mb="0" cb="0"/><line nr="4363" mi="0" ci="2" mb="0" cb="0"/><line nr="4364" mi="0" ci="2" mb="0" cb="0"/><line nr="4365" mi="0" ci="3" mb="0" cb="0"/><line nr="4366" mi="0" ci="3" mb="0" cb="0"/><line nr="4369" mi="0" ci="4" mb="0" cb="0"/><line nr="4370" mi="0" ci="3" mb="0" cb="0"/><line nr="4371" mi="0" ci="4" mb="0" cb="0"/><line nr="4372" mi="0" ci="4" mb="0" cb="2"/><line nr="4373" mi="0" ci="3" mb="0" cb="0"/><line nr="4374" mi="0" ci="4" mb="0" cb="0"/><line nr="4375" mi="0" ci="4" mb="0" cb="0"/><line nr="4377" mi="2" ci="8" mb="2" cb="2"/><line nr="4432" mi="3" ci="7" mb="1" cb="3"/><line nr="4486" mi="0" ci="3" mb="0" cb="0"/><line nr="4487" mi="0" ci="1" mb="0" cb="0"/><line nr="4490" mi="0" ci="6" mb="0" cb="0"/><line nr="4493" mi="0" ci="4" mb="0" cb="0"/><line nr="4494" mi="2" ci="8" mb="1" cb="3"/><line nr="4537" mi="0" ci="3" mb="0" cb="0"/><line nr="4538" mi="0" ci="1" mb="0" cb="0"/><line nr="4541" mi="0" ci="6" mb="0" cb="0"/><line nr="4544" mi="0" ci="4" mb="0" cb="0"/><line nr="4545" mi="2" ci="8" mb="1" cb="3"/><line nr="4588" mi="0" ci="3" mb="0" cb="0"/><line nr="4589" mi="0" ci="1" mb="0" cb="0"/><line nr="4592" mi="0" ci="6" mb="0" cb="0"/><line nr="4595" mi="0" ci="1" mb="0" cb="0"/><line nr="4598" mi="6" ci="0" mb="0" cb="0"/><line nr="4599" mi="4" ci="0" mb="0" cb="0"/><line nr="4600" mi="4" ci="0" mb="0" cb="0"/><line nr="4603" mi="0" ci="4" mb="0" cb="0"/><line nr="4604" mi="0" ci="3" mb="0" cb="0"/><line nr="4605" mi="0" ci="2" mb="0" cb="2"/><line nr="4606" mi="0" ci="12" mb="0" cb="0"/><line nr="4608" mi="0" ci="13" mb="0" cb="0"/><line nr="4613" mi="0" ci="4" mb="0" cb="2"/><line nr="4614" mi="0" ci="3" mb="0" cb="0"/><line nr="4615" mi="0" ci="9" mb="0" cb="0"/><line nr="4617" mi="3" ci="7" mb="2" cb="2"/><line nr="4660" mi="0" ci="3" mb="0" cb="0"/><line nr="4661" mi="0" ci="1" mb="0" cb="0"/><line nr="4664" mi="6" ci="0" mb="0" cb="0"/><line nr="4665" mi="4" ci="0" mb="0" cb="0"/><line nr="4666" mi="4" ci="0" mb="0" cb="0"/><line nr="4669" mi="0" ci="2" mb="0" cb="0"/><line nr="4672" mi="0" ci="4" mb="0" cb="0"/><line nr="4674" mi="0" ci="3" mb="0" cb="0"/><line nr="4675" mi="0" ci="4" mb="0" cb="0"/><line nr="4678" mi="3" ci="7" mb="1" cb="3"/><line nr="4681" mi="0" ci="1" mb="0" cb="0"/><line nr="4684" mi="0" ci="6" mb="0" cb="0"/><line nr="4685" mi="0" ci="1" mb="0" cb="0"/><line nr="4687" mi="0" ci="4" mb="0" cb="0"/><line nr="4688" mi="0" ci="3" mb="0" cb="0"/><line nr="4689" mi="0" ci="5" mb="0" cb="0"/><line nr="4691" mi="0" ci="2" mb="0" cb="0"/><line nr="4695" mi="0" ci="3" mb="0" cb="0"/><line nr="4696" mi="0" ci="2" mb="0" cb="0"/><line nr="4699" mi="0" ci="2" mb="0" cb="0"/><line nr="4701" mi="0" ci="4" mb="0" cb="0"/><line nr="4702" mi="0" ci="3" mb="0" cb="0"/><line nr="4703" mi="2" ci="8" mb="1" cb="3"/><line nr="4746" mi="0" ci="3" mb="0" cb="0"/><line nr="4747" mi="0" ci="1" mb="0" cb="0"/><line nr="4750" mi="0" ci="6" mb="0" cb="0"/><line nr="4753" mi="0" ci="4" mb="0" cb="0"/><line nr="4754" mi="0" ci="10" mb="0" cb="0"/><line nr="4757" mi="0" ci="2" mb="0" cb="0"/><line nr="4759" mi="0" ci="4" mb="0" cb="0"/><line nr="4760" mi="0" ci="3" mb="0" cb="0"/><line nr="4761" mi="2" ci="8" mb="1" cb="3"/><line nr="4775" mi="0" ci="3" mb="0" cb="0"/><line nr="4776" mi="0" ci="1" mb="0" cb="0"/><line nr="4779" mi="0" ci="6" mb="0" cb="0"/><line nr="4782" mi="0" ci="4" mb="0" cb="0"/><line nr="4783" mi="0" ci="10" mb="0" cb="0"/><line nr="4786" mi="0" ci="2" mb="0" cb="0"/><line nr="4788" mi="0" ci="4" mb="0" cb="0"/><line nr="4789" mi="0" ci="3" mb="0" cb="0"/><line nr="4790" mi="2" ci="8" mb="1" cb="3"/><line nr="4833" mi="0" ci="3" mb="0" cb="0"/><line nr="4834" mi="0" ci="1" mb="0" cb="0"/><line nr="4837" mi="0" ci="6" mb="0" cb="0"/><line nr="4840" mi="0" ci="4" mb="0" cb="0"/><line nr="4841" mi="0" ci="10" mb="0" cb="0"/><line nr="4846" mi="0" ci="4" mb="0" cb="0"/><line nr="4847" mi="0" ci="3" mb="0" cb="0"/><line nr="4848" mi="0" ci="3" mb="0" cb="0"/><line nr="4849" mi="0" ci="4" mb="0" cb="0"/><line nr="4850" mi="0" ci="10" mb="0" cb="0"/><line nr="4856" mi="0" ci="4" mb="0" cb="0"/><line nr="4857" mi="0" ci="3" mb="0" cb="0"/><line nr="4858" mi="0" ci="4" mb="0" cb="0"/><line nr="4859" mi="0" ci="3" mb="0" cb="0"/><line nr="4860" mi="0" ci="4" mb="0" cb="0"/><line nr="4861" mi="0" ci="3" mb="0" cb="0"/><line nr="4862" mi="0" ci="11" mb="0" cb="0"/><line nr="4865" mi="0" ci="3" mb="0" cb="0"/><line nr="4867" mi="0" ci="2" mb="0" cb="0"/><line nr="4868" mi="0" ci="3" mb="0" cb="0"/><line nr="4872" mi="0" ci="3" mb="0" cb="0"/><line nr="4879" mi="0" ci="4" mb="0" cb="0"/><line nr="4880" mi="0" ci="3" mb="0" cb="0"/><line nr="4881" mi="2" ci="8" mb="1" cb="3"/><line nr="4883" mi="0" ci="3" mb="0" cb="0"/><line nr="4884" mi="0" ci="1" mb="0" cb="0"/><line nr="4887" mi="0" ci="6" mb="0" cb="0"/><line nr="4890" mi="0" ci="3" mb="0" cb="0"/><line nr="4893" mi="2" ci="8" mb="1" cb="3"/><line nr="4896" mi="0" ci="1" mb="0" cb="0"/><line nr="4899" mi="0" ci="6" mb="0" cb="0"/><line nr="4900" mi="0" ci="1" mb="0" cb="0"/><line nr="4902" mi="0" ci="4" mb="0" cb="0"/><line nr="4903" mi="0" ci="3" mb="0" cb="0"/><line nr="4904" mi="0" ci="4" mb="0" cb="0"/><line nr="4905" mi="0" ci="3" mb="0" cb="0"/><line nr="4906" mi="0" ci="3" mb="0" cb="0"/><line nr="4907" mi="0" ci="5" mb="0" cb="0"/><line nr="4908" mi="0" ci="4" mb="0" cb="0"/><line nr="4911" mi="2" ci="8" mb="1" cb="3"/><line nr="4914" mi="0" ci="1" mb="0" cb="0"/><line nr="4917" mi="0" ci="6" mb="0" cb="0"/><line nr="4918" mi="0" ci="1" mb="0" cb="0"/><line nr="4920" mi="0" ci="4" mb="0" cb="0"/><line nr="4921" mi="0" ci="3" mb="0" cb="0"/><line nr="4922" mi="0" ci="5" mb="0" cb="0"/><line nr="4924" mi="0" ci="3" mb="0" cb="0"/><line nr="4925" mi="0" ci="3" mb="0" cb="0"/><line nr="4926" mi="0" ci="4" mb="0" cb="0"/><line nr="4927" mi="0" ci="3" mb="0" cb="0"/><line nr="4928" mi="0" ci="4" mb="0" cb="2"/><line nr="4929" mi="0" ci="17" mb="0" cb="0"/><line nr="4931" mi="0" ci="5" mb="0" cb="0"/><line nr="4933" mi="0" ci="19" mb="0" cb="0"/><line nr="4934" mi="0" ci="14" mb="0" cb="0"/><line nr="4935" mi="0" ci="3" mb="0" cb="0"/><line nr="4936" mi="0" ci="1" mb="0" cb="0"/><line nr="4937" mi="3" ci="7" mb="1" cb="3"/><line nr="4939" mi="0" ci="4" mb="0" cb="0"/><line nr="4940" mi="0" ci="3" mb="0" cb="0"/><line nr="4941" mi="0" ci="1" mb="0" cb="0"/><line nr="4944" mi="0" ci="6" mb="0" cb="0"/><line nr="4947" mi="0" ci="13" mb="0" cb="0"/><line nr="4951" mi="0" ci="4" mb="0" cb="0"/><line nr="4952" mi="0" ci="3" mb="0" cb="0"/><line nr="4953" mi="0" ci="4" mb="1" cb="1"/><line nr="4954" mi="4" ci="0" mb="0" cb="0"/><line nr="4958" mi="0" ci="4" mb="0" cb="0"/><line nr="4959" mi="0" ci="2" mb="0" cb="0"/><line nr="4962" mi="0" ci="4" mb="0" cb="0"/><line nr="4964" mi="0" ci="3" mb="0" cb="0"/><line nr="4965" mi="0" ci="4" mb="0" cb="0"/><line nr="4968" mi="0" ci="4" mb="0" cb="2"/><line nr="4973" mi="0" ci="4" mb="0" cb="0"/><line nr="4974" mi="0" ci="3" mb="0" cb="0"/><line nr="4975" mi="0" ci="5" mb="0" cb="0"/><line nr="4977" mi="0" ci="2" mb="0" cb="0"/><line nr="4981" mi="0" ci="4" mb="0" cb="2"/><line nr="4983" mi="0" ci="4" mb="0" cb="0"/><line nr="4985" mi="2" ci="8" mb="2" cb="2"/><line nr="5021" mi="0" ci="3" mb="0" cb="0"/><line nr="5022" mi="0" ci="1" mb="0" cb="0"/><line nr="5025" mi="6" ci="0" mb="0" cb="0"/><line nr="5026" mi="4" ci="0" mb="0" cb="0"/><line nr="5027" mi="4" ci="0" mb="0" cb="0"/><line nr="5030" mi="0" ci="2" mb="0" cb="0"/><line nr="5038" mi="0" ci="8" mb="1" cb="1"/><line nr="5039" mi="0" ci="5" mb="1" cb="1"/><line nr="5042" mi="4" ci="0" mb="0" cb="0"/><line nr="5043" mi="4" ci="0" mb="0" cb="0"/><line nr="5045" mi="0" ci="4" mb="0" cb="0"/><line nr="5046" mi="0" ci="4" mb="0" cb="0"/><line nr="5047" mi="0" ci="4" mb="0" cb="0"/><line nr="5048" mi="0" ci="1" mb="0" cb="0"/><line nr="5051" mi="0" ci="8" mb="1" cb="1"/><line nr="5052" mi="0" ci="5" mb="1" cb="1"/><line nr="5055" mi="4" ci="0" mb="0" cb="0"/><line nr="5056" mi="4" ci="0" mb="0" cb="0"/><line nr="5058" mi="0" ci="4" mb="0" cb="0"/><line nr="5059" mi="0" ci="4" mb="0" cb="0"/><line nr="5060" mi="0" ci="1" mb="0" cb="0"/><line nr="5064" mi="0" ci="4" mb="0" cb="0"/><line nr="5068" mi="0" ci="4" mb="0" cb="2"/><line nr="5073" mi="0" ci="3" mb="0" cb="0"/><line nr="5074" mi="0" ci="6" mb="0" cb="0"/><line nr="5076" mi="0" ci="2" mb="0" cb="0"/><line nr="5081" mi="0" ci="3" mb="0" cb="0"/><line nr="5084" mi="0" ci="4" mb="0" cb="0"/><line nr="5085" mi="0" ci="3" mb="0" cb="0"/><line nr="5086" mi="0" ci="3" mb="0" cb="0"/><line nr="5087" mi="0" ci="4" mb="0" cb="2"/><line nr="5088" mi="0" ci="4" mb="0" cb="0"/><line nr="5089" mi="2" ci="8" mb="1" cb="3"/><line nr="5103" mi="0" ci="3" mb="0" cb="0"/><line nr="5104" mi="0" ci="1" mb="0" cb="0"/><line nr="5107" mi="0" ci="6" mb="0" cb="0"/><line nr="5110" mi="0" ci="4" mb="0" cb="0"/><line nr="5111" mi="0" ci="12" mb="0" cb="0"/><line nr="5112" mi="0" ci="4" mb="0" cb="2"/><line nr="5113" mi="0" ci="4" mb="0" cb="0"/><line nr="5114" mi="0" ci="3" mb="0" cb="0"/><line nr="5115" mi="0" ci="4" mb="0" cb="0"/><line nr="5116" mi="0" ci="12" mb="0" cb="0"/><line nr="5118" mi="0" ci="10" mb="0" cb="0"/><line nr="5120" mi="0" ci="2" mb="0" cb="0"/><line nr="5123" mi="0" ci="4" mb="0" cb="0"/><line nr="5125" mi="0" ci="3" mb="0" cb="0"/><line nr="5126" mi="0" ci="4" mb="0" cb="0"/><line nr="5129" mi="0" ci="10" mb="1" cb="3"/><line nr="5132" mi="1" ci="0" mb="0" cb="0"/><line nr="5135" mi="0" ci="6" mb="0" cb="0"/><line nr="5136" mi="0" ci="1" mb="0" cb="0"/><line nr="5138" mi="4" ci="0" mb="0" cb="0"/><line nr="5139" mi="3" ci="0" mb="0" cb="0"/><line nr="5140" mi="5" ci="0" mb="0" cb="0"/><line nr="5142" mi="0" ci="2" mb="0" cb="0"/><line nr="5148" mi="0" ci="3" mb="0" cb="0"/><line nr="5149" mi="0" ci="3" mb="0" cb="0"/><line nr="5150" mi="0" ci="4" mb="0" cb="0"/><line nr="5151" mi="0" ci="3" mb="0" cb="0"/><line nr="5152" mi="0" ci="11" mb="0" cb="0"/><line nr="5156" mi="0" ci="4" mb="1" cb="1"/><line nr="5157" mi="4" ci="0" mb="0" cb="0"/><line nr="5159" mi="0" ci="10" mb="1" cb="4"/><line nr="5161" mi="0" ci="3" mb="0" cb="0"/><line nr="5162" mi="0" ci="1" mb="0" cb="0"/><line nr="5206" mi="0" ci="3" mb="0" cb="0"/><line nr="5207" mi="0" ci="1" mb="0" cb="0"/><line nr="5210" mi="6" ci="0" mb="0" cb="0"/><line nr="5211" mi="4" ci="0" mb="0" cb="0"/><line nr="5212" mi="4" ci="0" mb="0" cb="0"/><line nr="5215" mi="0" ci="2" mb="0" cb="0"/><line nr="5218" mi="0" ci="3" mb="0" cb="0"/><line nr="5221" mi="0" ci="4" mb="0" cb="0"/><line nr="5222" mi="0" ci="3" mb="0" cb="0"/><line nr="5223" mi="2" ci="8" mb="1" cb="3"/><line nr="5267" mi="0" ci="3" mb="0" cb="0"/><line nr="5268" mi="0" ci="4" mb="0" cb="0"/><line nr="5271" mi="0" ci="4" mb="0" cb="2"/><line nr="5276" mi="0" ci="4" mb="0" cb="0"/><line nr="5277" mi="0" ci="3" mb="0" cb="0"/><line nr="5278" mi="0" ci="5" mb="0" cb="0"/><line nr="5283" mi="0" ci="6" mb="0" cb="0"/><line nr="5286" mi="3" ci="7" mb="2" cb="2"/><line nr="5288" mi="4" ci="0" mb="0" cb="0"/><line nr="5289" mi="1" ci="0" mb="0" cb="0"/><line nr="5292" mi="0" ci="6" mb="0" cb="0"/><line nr="5295" mi="0" ci="4" mb="0" cb="0"/><line nr="5296" mi="0" ci="10" mb="0" cb="0"/><line nr="5302" mi="0" ci="3" mb="0" cb="0"/><line nr="5303" mi="0" ci="3" mb="0" cb="0"/><line nr="5304" mi="0" ci="4" mb="0" cb="0"/><line nr="5305" mi="0" ci="6" mb="0" cb="0"/><line nr="5306" mi="0" ci="4" mb="0" cb="0"/><line nr="5307" mi="0" ci="3" mb="0" cb="0"/><line nr="5308" mi="0" ci="3" mb="0" cb="0"/><line nr="5309" mi="0" ci="15" mb="0" cb="0"/><line nr="5312" mi="0" ci="3" mb="0" cb="0"/><line nr="5314" mi="0" ci="4" mb="0" cb="0"/><line nr="5317" mi="2" ci="8" mb="1" cb="3"/><line nr="5355" mi="0" ci="1" mb="0" cb="0"/><line nr="5358" mi="0" ci="6" mb="0" cb="0"/><line nr="5359" mi="0" ci="1" mb="0" cb="0"/><line nr="5361" mi="3" ci="7" mb="2" cb="3"/><line nr="5397" mi="0" ci="3" mb="0" cb="0"/><line nr="5398" mi="0" ci="5" mb="0" cb="0"/><line nr="5399" mi="0" ci="1" mb="0" cb="0"/><line nr="5402" mi="0" ci="4" mb="0" cb="0"/><line nr="5403" mi="0" ci="1" mb="0" cb="0"/><line nr="5406" mi="6" ci="0" mb="0" cb="0"/><line nr="5407" mi="4" ci="0" mb="0" cb="0"/><line nr="5408" mi="4" ci="0" mb="0" cb="0"/><line nr="5411" mi="0" ci="4" mb="0" cb="0"/><line nr="5412" mi="0" ci="2" mb="0" cb="0"/><line nr="5417" mi="0" ci="3" mb="0" cb="0"/><line nr="5418" mi="0" ci="4" mb="0" cb="2"/><line nr="5419" mi="0" ci="5" mb="0" cb="0"/><line nr="5421" mi="2" ci="8" mb="2" cb="2"/><line nr="5424" mi="0" ci="4" mb="0" cb="0"/><line nr="5425" mi="0" ci="1" mb="0" cb="0"/><line nr="5428" mi="6" ci="0" mb="0" cb="0"/><line nr="5429" mi="4" ci="0" mb="2" cb="0"/><line nr="5430" mi="5" ci="0" mb="0" cb="0"/><line nr="5432" mi="10" ci="0" mb="5" cb="0"/><line nr="5434" mi="4" ci="0" mb="0" cb="0"/><line nr="5435" mi="1" ci="0" mb="0" cb="0"/><line nr="5458" mi="4" ci="0" mb="0" cb="0"/><line nr="5459" mi="1" ci="0" mb="0" cb="0"/><line nr="5462" mi="6" ci="0" mb="0" cb="0"/><line nr="5463" mi="4" ci="0" mb="0" cb="0"/><line nr="5464" mi="4" ci="0" mb="0" cb="0"/><line nr="5469" mi="0" ci="2" mb="0" cb="0"/><line nr="5474" mi="0" ci="2" mb="0" cb="0"/><line nr="5475" mi="0" ci="5" mb="0" cb="0"/><line nr="5476" mi="0" ci="3" mb="0" cb="0"/><line nr="5477" mi="0" ci="4" mb="0" cb="0"/><line nr="5478" mi="0" ci="4" mb="0" cb="0"/><line nr="5479" mi="2" ci="8" mb="1" cb="3"/><line nr="5481" mi="0" ci="3" mb="0" cb="0"/><line nr="5482" mi="0" ci="1" mb="0" cb="0"/><line nr="5485" mi="0" ci="6" mb="0" cb="0"/><line nr="5488" mi="0" ci="4" mb="0" cb="0"/><line nr="5489" mi="0" ci="6" mb="0" cb="0"/><line nr="5490" mi="0" ci="16" mb="0" cb="0"/><line nr="5494" mi="0" ci="4" mb="0" cb="0"/><line nr="5495" mi="0" ci="3" mb="0" cb="0"/><line nr="5496" mi="0" ci="2" mb="0" cb="0"/><line nr="5505" mi="0" ci="3" mb="0" cb="0"/><line nr="5509" mi="0" ci="4" mb="0" cb="2"/><line nr="5510" mi="0" ci="4" mb="0" cb="0"/><line nr="5511" mi="0" ci="3" mb="0" cb="0"/><line nr="5512" mi="0" ci="4" mb="0" cb="0"/><line nr="5513" mi="0" ci="6" mb="0" cb="0"/><line nr="5514" mi="0" ci="4" mb="0" cb="0"/><line nr="5515" mi="0" ci="23" mb="0" cb="0"/><line nr="5517" mi="0" ci="10" mb="1" cb="7"/><line nr="5519" mi="0" ci="4" mb="0" cb="0"/><line nr="5520" mi="0" ci="3" mb="0" cb="0"/><line nr="5521" mi="0" ci="3" mb="0" cb="0"/><line nr="5522" mi="0" ci="3" mb="0" cb="0"/><line nr="5523" mi="0" ci="4" mb="0" cb="0"/><line nr="5524" mi="0" ci="12" mb="0" cb="0"/><line nr="5525" mi="0" ci="1" mb="0" cb="0"/><line nr="5528" mi="0" ci="4" mb="0" cb="0"/><line nr="5529" mi="0" ci="3" mb="0" cb="0"/><line nr="5530" mi="0" ci="3" mb="0" cb="0"/><line nr="5531" mi="2" ci="8" mb="1" cb="3"/><line nr="5533" mi="0" ci="4" mb="0" cb="0"/><line nr="5534" mi="0" ci="3" mb="0" cb="0"/><line nr="5535" mi="0" ci="4" mb="0" cb="0"/><line nr="5538" mi="2" ci="8" mb="1" cb="3"/><line nr="5541" mi="0" ci="1" mb="0" cb="0"/><line nr="5544" mi="0" ci="6" mb="0" cb="0"/><line nr="5545" mi="0" ci="1" mb="0" cb="0"/><line nr="5547" mi="0" ci="4" mb="0" cb="0"/><line nr="5548" mi="0" ci="3" mb="0" cb="0"/><line nr="5549" mi="0" ci="5" mb="0" cb="0"/><line nr="5554" mi="0" ci="6" mb="0" cb="0"/><line nr="5557" mi="0" ci="4" mb="0" cb="0"/><line nr="5558" mi="0" ci="11" mb="0" cb="0"/><line nr="5559" mi="0" ci="1" mb="0" cb="0"/><line nr="5562" mi="0" ci="4" mb="0" cb="0"/><line nr="5563" mi="0" ci="3" mb="0" cb="0"/><line nr="5564" mi="0" ci="3" mb="0" cb="0"/><line nr="5565" mi="2" ci="8" mb="1" cb="3"/><line nr="5567" mi="0" ci="4" mb="0" cb="0"/><line nr="5568" mi="0" ci="3" mb="0" cb="0"/><line nr="5569" mi="0" ci="4" mb="0" cb="0"/><line nr="5572" mi="2" ci="8" mb="1" cb="3"/><line nr="5575" mi="0" ci="1" mb="0" cb="0"/><line nr="5578" mi="0" ci="6" mb="0" cb="0"/><line nr="5579" mi="0" ci="1" mb="0" cb="0"/><line nr="5581" mi="0" ci="4" mb="0" cb="0"/><line nr="5582" mi="0" ci="3" mb="0" cb="0"/><line nr="5583" mi="0" ci="5" mb="0" cb="0"/><line nr="5588" mi="0" ci="6" mb="0" cb="0"/><line nr="5591" mi="0" ci="4" mb="0" cb="0"/><line nr="5592" mi="0" ci="11" mb="0" cb="0"/><line nr="5593" mi="0" ci="1" mb="0" cb="0"/><line nr="5596" mi="0" ci="4" mb="0" cb="0"/><line nr="5597" mi="0" ci="3" mb="0" cb="0"/><line nr="5598" mi="0" ci="3" mb="0" cb="0"/><line nr="5599" mi="0" ci="4" mb="0" cb="0"/><line nr="5600" mi="0" ci="10" mb="0" cb="0"/><line nr="5601" mi="0" ci="1" mb="0" cb="0"/><line nr="5604" mi="0" ci="4" mb="0" cb="0"/><line nr="5605" mi="0" ci="3" mb="0" cb="0"/><line nr="5606" mi="0" ci="3" mb="0" cb="0"/><line nr="5607" mi="0" ci="4" mb="0" cb="0"/><line nr="5608" mi="0" ci="3" mb="0" cb="0"/><line nr="5609" mi="0" ci="4" mb="0" cb="0"/><line nr="5612" mi="2" ci="8" mb="1" cb="3"/><line nr="5615" mi="0" ci="1" mb="0" cb="0"/><line nr="5618" mi="0" ci="6" mb="0" cb="0"/><line nr="5619" mi="0" ci="1" mb="0" cb="0"/><line nr="5621" mi="0" ci="4" mb="0" cb="0"/><line nr="5622" mi="0" ci="3" mb="0" cb="0"/><line nr="5623" mi="0" ci="5" mb="0" cb="0"/><line nr="5625" mi="0" ci="4" mb="0" cb="0"/><line nr="5626" mi="0" ci="11" mb="0" cb="0"/><line nr="5627" mi="0" ci="1" mb="0" cb="0"/><line nr="5630" mi="6" ci="0" mb="0" cb="0"/><line nr="5631" mi="4" ci="0" mb="0" cb="0"/><line nr="5632" mi="4" ci="0" mb="0" cb="0"/><line nr="5635" mi="0" ci="2" mb="0" cb="0"/><line nr="5638" mi="0" ci="4" mb="0" cb="0"/><line nr="5639" mi="0" ci="2" mb="0" cb="0"/><line nr="5642" mi="0" ci="3" mb="0" cb="0"/><line nr="5643" mi="0" ci="10" mb="0" cb="4"/><line nr="5645" mi="0" ci="4" mb="0" cb="0"/><line nr="5646" mi="0" ci="8" mb="0" cb="0"/><line nr="5647" mi="0" ci="1" mb="0" cb="0"/><line nr="5650" mi="0" ci="6" mb="0" cb="0"/><line nr="5653" mi="0" ci="4" mb="0" cb="0"/><line nr="5654" mi="0" ci="6" mb="0" cb="0"/><line nr="5655" mi="0" ci="3" mb="0" cb="0"/><line nr="5656" mi="0" ci="4" mb="0" cb="0"/><line nr="5659" mi="2" ci="8" mb="1" cb="3"/><line nr="5666" mi="0" ci="1" mb="0" cb="0"/><line nr="5669" mi="0" ci="6" mb="0" cb="0"/><line nr="5670" mi="0" ci="1" mb="0" cb="0"/><line nr="5672" mi="0" ci="3" mb="0" cb="0"/><line nr="5673" mi="0" ci="6" mb="0" cb="0"/><line nr="5675" mi="0" ci="4" mb="0" cb="0"/><line nr="5676" mi="0" ci="14" mb="0" cb="0"/><line nr="5687" mi="0" ci="3" mb="0" cb="0"/><line nr="5688" mi="0" ci="4" mb="0" cb="0"/><line nr="5689" mi="0" ci="2" mb="0" cb="0"/><line nr="5693" mi="0" ci="4" mb="0" cb="2"/><line nr="5694" mi="0" ci="4" mb="0" cb="0"/><line nr="5696" mi="2" ci="8" mb="2" cb="2"/><line nr="5733" mi="0" ci="3" mb="0" cb="0"/><line nr="5734" mi="0" ci="1" mb="0" cb="0"/><line nr="5737" mi="6" ci="0" mb="0" cb="0"/><line nr="5738" mi="4" ci="0" mb="0" cb="0"/><line nr="5739" mi="4" ci="0" mb="0" cb="0"/><line nr="5742" mi="0" ci="4" mb="0" cb="0"/><line nr="5743" mi="0" ci="2" mb="0" cb="0"/><line nr="5747" mi="0" ci="3" mb="0" cb="0"/><line nr="5748" mi="0" ci="4" mb="0" cb="0"/><line nr="5749" mi="0" ci="2" mb="0" cb="0"/><line nr="5753" mi="0" ci="3" mb="0" cb="0"/><line nr="5754" mi="0" ci="4" mb="0" cb="0"/><line nr="5755" mi="0" ci="2" mb="0" cb="0"/><line nr="5759" mi="0" ci="3" mb="0" cb="0"/><line nr="5760" mi="0" ci="4" mb="0" cb="0"/><line nr="5761" mi="0" ci="2" mb="0" cb="0"/><line nr="5765" mi="0" ci="3" mb="0" cb="0"/><line nr="5766" mi="0" ci="4" mb="0" cb="0"/><line nr="5767" mi="0" ci="2" mb="0" cb="0"/><line nr="5771" mi="0" ci="3" mb="0" cb="0"/><line nr="5772" mi="0" ci="4" mb="0" cb="0"/><line nr="5773" mi="0" ci="2" mb="0" cb="0"/><line nr="5777" mi="0" ci="3" mb="0" cb="0"/><line nr="5778" mi="0" ci="4" mb="0" cb="0"/><line nr="5779" mi="0" ci="2" mb="0" cb="0"/><line nr="5783" mi="0" ci="3" mb="0" cb="0"/><line nr="5784" mi="0" ci="4" mb="0" cb="0"/><line nr="5785" mi="0" ci="4" mb="0" cb="0"/><line nr="5786" mi="0" ci="2" mb="0" cb="0"/><line nr="5790" mi="0" ci="3" mb="0" cb="0"/><line nr="5791" mi="0" ci="4" mb="0" cb="0"/><line nr="5792" mi="0" ci="2" mb="0" cb="0"/><line nr="5796" mi="3" ci="0" mb="0" cb="0"/><line nr="5797" mi="4" ci="0" mb="0" cb="0"/><line nr="5798" mi="2" ci="0" mb="0" cb="0"/><line nr="5802" mi="0" ci="3" mb="0" cb="0"/><line nr="5803" mi="0" ci="4" mb="0" cb="0"/><line nr="5804" mi="0" ci="2" mb="0" cb="0"/><line nr="5808" mi="0" ci="3" mb="0" cb="0"/><line nr="5809" mi="0" ci="4" mb="0" cb="0"/><line nr="5810" mi="0" ci="2" mb="0" cb="0"/><line nr="5814" mi="0" ci="3" mb="0" cb="0"/><line nr="5815" mi="0" ci="4" mb="0" cb="0"/><line nr="5816" mi="0" ci="2" mb="0" cb="0"/><line nr="5820" mi="0" ci="3" mb="0" cb="0"/><line nr="5821" mi="0" ci="4" mb="0" cb="0"/><line nr="5822" mi="0" ci="2" mb="0" cb="0"/><line nr="5827" mi="0" ci="3" mb="0" cb="0"/><line nr="5828" mi="2" ci="8" mb="4" cb="2"/><line nr="5831" mi="4" ci="0" mb="0" cb="0"/><line nr="5832" mi="1" ci="0" mb="0" cb="0"/><line nr="5835" mi="0" ci="4" mb="0" cb="0"/><line nr="5836" mi="0" ci="1" mb="0" cb="0"/><line nr="5839" mi="4" ci="0" mb="0" cb="0"/><line nr="5840" mi="1" ci="0" mb="0" cb="0"/><line nr="5843" mi="6" ci="0" mb="0" cb="0"/><line nr="5844" mi="4" ci="0" mb="0" cb="0"/><line nr="5845" mi="4" ci="0" mb="0" cb="0"/><line nr="5847" mi="0" ci="4" mb="0" cb="0"/><line nr="5848" mi="0" ci="2" mb="0" cb="0"/><line nr="5853" mi="0" ci="3" mb="0" cb="0"/><line nr="5854" mi="0" ci="4" mb="0" cb="0"/><line nr="5855" mi="0" ci="4" mb="0" cb="0"/><line nr="5856" mi="0" ci="2" mb="0" cb="0"/><line nr="5860" mi="0" ci="3" mb="0" cb="0"/><line nr="5861" mi="0" ci="4" mb="0" cb="0"/><line nr="5862" mi="0" ci="2" mb="0" cb="0"/><line nr="5867" mi="0" ci="3" mb="0" cb="0"/><line nr="5868" mi="0" ci="4" mb="0" cb="0"/><line nr="5869" mi="0" ci="4" mb="0" cb="0"/><line nr="5870" mi="0" ci="2" mb="0" cb="0"/><line nr="5875" mi="0" ci="10" mb="0" cb="0"/><line nr="5876" mi="0" ci="9" mb="0" cb="2"/><line nr="5877" mi="5" ci="0" mb="0" cb="0"/><line nr="5878" mi="0" ci="4" mb="0" cb="0"/><line nr="5883" mi="0" ci="10" mb="0" cb="0"/><line nr="5884" mi="0" ci="9" mb="0" cb="2"/><line nr="5885" mi="5" ci="0" mb="0" cb="0"/><line nr="5886" mi="0" ci="4" mb="0" cb="0"/><line nr="5891" mi="0" ci="10" mb="0" cb="0"/><line nr="5892" mi="0" ci="9" mb="0" cb="2"/><line nr="5893" mi="0" ci="5" mb="0" cb="0"/><line nr="5894" mi="0" ci="4" mb="0" cb="0"/><line nr="5899" mi="0" ci="10" mb="0" cb="0"/><line nr="5900" mi="2" ci="7" mb="1" cb="1"/><line nr="5901" mi="0" ci="5" mb="0" cb="0"/><line nr="5902" mi="0" ci="4" mb="0" cb="0"/><line nr="5907" mi="0" ci="10" mb="0" cb="0"/><line nr="5908" mi="0" ci="9" mb="0" cb="2"/><line nr="5909" mi="5" ci="0" mb="0" cb="0"/><line nr="5910" mi="0" ci="4" mb="0" cb="0"/><line nr="5915" mi="0" ci="10" mb="0" cb="0"/><line nr="5916" mi="0" ci="9" mb="0" cb="2"/><line nr="5917" mi="5" ci="0" mb="0" cb="0"/><line nr="5918" mi="0" ci="4" mb="0" cb="0"/><line nr="5923" mi="0" ci="10" mb="0" cb="0"/><line nr="5924" mi="0" ci="9" mb="0" cb="2"/><line nr="5925" mi="5" ci="0" mb="0" cb="0"/><line nr="5926" mi="0" ci="4" mb="0" cb="0"/><line nr="5931" mi="0" ci="10" mb="0" cb="0"/><line nr="5932" mi="0" ci="9" mb="0" cb="2"/><line nr="5933" mi="5" ci="0" mb="0" cb="0"/><line nr="5934" mi="0" ci="4" mb="0" cb="0"/><line nr="5939" mi="0" ci="10" mb="0" cb="0"/><line nr="5940" mi="2" ci="7" mb="1" cb="1"/><line nr="5941" mi="0" ci="5" mb="0" cb="0"/><line nr="5942" mi="0" ci="4" mb="0" cb="0"/><line nr="5947" mi="0" ci="10" mb="0" cb="0"/><line nr="5948" mi="2" ci="7" mb="1" cb="1"/><line nr="5949" mi="0" ci="5" mb="0" cb="0"/><line nr="5950" mi="0" ci="4" mb="0" cb="0"/><line nr="5955" mi="0" ci="10" mb="0" cb="0"/><line nr="5956" mi="0" ci="9" mb="0" cb="2"/><line nr="5957" mi="5" ci="0" mb="0" cb="0"/><line nr="5958" mi="0" ci="4" mb="0" cb="0"/><line nr="5963" mi="0" ci="10" mb="0" cb="0"/><line nr="5964" mi="0" ci="9" mb="0" cb="2"/><line nr="5965" mi="5" ci="0" mb="0" cb="0"/><line nr="5966" mi="0" ci="4" mb="0" cb="0"/><line nr="5971" mi="0" ci="10" mb="0" cb="0"/><line nr="5972" mi="0" ci="9" mb="0" cb="2"/><line nr="5973" mi="5" ci="0" mb="0" cb="0"/><line nr="5974" mi="0" ci="4" mb="0" cb="0"/><line nr="5979" mi="0" ci="10" mb="0" cb="0"/><line nr="5980" mi="2" ci="7" mb="1" cb="1"/><line nr="5981" mi="5" ci="0" mb="0" cb="0"/><line nr="5982" mi="0" ci="4" mb="0" cb="0"/><line nr="5987" mi="0" ci="10" mb="0" cb="0"/><line nr="5988" mi="0" ci="9" mb="0" cb="2"/><line nr="5989" mi="5" ci="0" mb="0" cb="0"/><line nr="5990" mi="0" ci="4" mb="0" cb="0"/><line nr="5995" mi="0" ci="10" mb="0" cb="0"/><line nr="5996" mi="0" ci="9" mb="0" cb="2"/><line nr="5997" mi="0" ci="5" mb="0" cb="0"/><line nr="5998" mi="0" ci="4" mb="0" cb="0"/><line nr="6003" mi="0" ci="10" mb="0" cb="0"/><line nr="6004" mi="0" ci="9" mb="0" cb="2"/><line nr="6005" mi="0" ci="5" mb="0" cb="0"/><line nr="6006" mi="0" ci="4" mb="0" cb="0"/><line nr="6011" mi="0" ci="10" mb="0" cb="0"/><line nr="6012" mi="0" ci="9" mb="0" cb="2"/><line nr="6013" mi="5" ci="0" mb="0" cb="0"/><line nr="6014" mi="0" ci="4" mb="0" cb="0"/><line nr="6019" mi="0" ci="10" mb="0" cb="0"/><line nr="6020" mi="0" ci="9" mb="0" cb="2"/><line nr="6021" mi="5" ci="0" mb="0" cb="0"/><line nr="6022" mi="0" ci="4" mb="0" cb="0"/><line nr="6027" mi="0" ci="10" mb="0" cb="0"/><line nr="6028" mi="2" ci="7" mb="1" cb="1"/><line nr="6029" mi="0" ci="5" mb="0" cb="0"/><line nr="6030" mi="0" ci="4" mb="0" cb="0"/><line nr="6035" mi="0" ci="10" mb="0" cb="0"/><line nr="6036" mi="2" ci="7" mb="1" cb="1"/><line nr="6037" mi="0" ci="5" mb="0" cb="0"/><line nr="6038" mi="0" ci="4" mb="0" cb="0"/><line nr="6043" mi="0" ci="10" mb="0" cb="0"/><line nr="6044" mi="2" ci="7" mb="1" cb="1"/><line nr="6045" mi="0" ci="5" mb="0" cb="0"/><line nr="6046" mi="0" ci="4" mb="0" cb="0"/><line nr="6051" mi="0" ci="10" mb="0" cb="0"/><line nr="6052" mi="2" ci="7" mb="1" cb="1"/><line nr="6053" mi="0" ci="5" mb="0" cb="0"/><line nr="6054" mi="0" ci="4" mb="0" cb="0"/><line nr="6059" mi="0" ci="10" mb="0" cb="0"/><line nr="6060" mi="2" ci="7" mb="1" cb="1"/><line nr="6061" mi="0" ci="5" mb="0" cb="0"/><line nr="6062" mi="0" ci="4" mb="0" cb="0"/><line nr="6067" mi="0" ci="10" mb="0" cb="0"/><line nr="6068" mi="2" ci="7" mb="1" cb="1"/><line nr="6069" mi="0" ci="5" mb="0" cb="0"/><line nr="6070" mi="0" ci="4" mb="0" cb="0"/><line nr="6075" mi="0" ci="10" mb="0" cb="0"/><line nr="6076" mi="2" ci="7" mb="1" cb="1"/><line nr="6077" mi="0" ci="5" mb="0" cb="0"/><line nr="6078" mi="0" ci="4" mb="0" cb="0"/><line nr="6083" mi="0" ci="10" mb="0" cb="0"/><line nr="6084" mi="9" ci="0" mb="2" cb="0"/><line nr="6085" mi="0" ci="5" mb="0" cb="0"/><line nr="6086" mi="0" ci="4" mb="0" cb="0"/><line nr="6091" mi="0" ci="10" mb="0" cb="0"/><line nr="6092" mi="0" ci="9" mb="0" cb="2"/><line nr="6093" mi="5" ci="0" mb="0" cb="0"/><line nr="6094" mi="0" ci="4" mb="0" cb="0"/><line nr="6099" mi="0" ci="10" mb="0" cb="0"/><line nr="6100" mi="0" ci="9" mb="0" cb="2"/><line nr="6101" mi="5" ci="0" mb="0" cb="0"/><line nr="6102" mi="0" ci="4" mb="0" cb="0"/><line nr="6107" mi="0" ci="10" mb="0" cb="0"/><line nr="6108" mi="2" ci="7" mb="1" cb="1"/><line nr="6109" mi="0" ci="5" mb="0" cb="0"/><line nr="6110" mi="0" ci="4" mb="0" cb="0"/><line nr="6115" mi="0" ci="10" mb="0" cb="0"/><line nr="6116" mi="2" ci="7" mb="1" cb="1"/><line nr="6117" mi="0" ci="5" mb="0" cb="0"/><line nr="6118" mi="0" ci="4" mb="0" cb="0"/><line nr="6123" mi="10" ci="0" mb="0" cb="0"/><line nr="6124" mi="9" ci="0" mb="2" cb="0"/><line nr="6125" mi="5" ci="0" mb="0" cb="0"/><line nr="6126" mi="4" ci="0" mb="0" cb="0"/><line nr="6131" mi="0" ci="10" mb="0" cb="0"/><line nr="6132" mi="0" ci="9" mb="0" cb="2"/><line nr="6133" mi="5" ci="0" mb="0" cb="0"/><line nr="6134" mi="0" ci="4" mb="0" cb="0"/><line nr="6139" mi="0" ci="10" mb="0" cb="0"/><line nr="6140" mi="0" ci="9" mb="0" cb="2"/><line nr="6141" mi="5" ci="0" mb="0" cb="0"/><line nr="6142" mi="0" ci="4" mb="0" cb="0"/><line nr="6147" mi="0" ci="10" mb="0" cb="0"/><line nr="6148" mi="0" ci="9" mb="0" cb="2"/><line nr="6149" mi="5" ci="0" mb="0" cb="0"/><line nr="6150" mi="0" ci="4" mb="0" cb="0"/><line nr="6155" mi="0" ci="10" mb="0" cb="0"/><line nr="6156" mi="0" ci="9" mb="0" cb="2"/><line nr="6157" mi="5" ci="0" mb="0" cb="0"/><line nr="6158" mi="0" ci="4" mb="0" cb="0"/><line nr="6163" mi="0" ci="10" mb="0" cb="0"/><line nr="6164" mi="2" ci="7" mb="1" cb="1"/><line nr="6165" mi="0" ci="5" mb="0" cb="0"/><line nr="6166" mi="0" ci="4" mb="0" cb="0"/><line nr="6171" mi="0" ci="10" mb="0" cb="0"/><line nr="6172" mi="1" ci="8" mb="1" cb="1"/><line nr="6173" mi="5" ci="0" mb="0" cb="0"/><line nr="6174" mi="0" ci="4" mb="0" cb="0"/><line nr="6179" mi="0" ci="10" mb="0" cb="0"/><line nr="6180" mi="2" ci="7" mb="1" cb="1"/><line nr="6181" mi="0" ci="5" mb="0" cb="0"/><line nr="6182" mi="0" ci="4" mb="0" cb="0"/><line nr="6187" mi="0" ci="10" mb="0" cb="0"/><line nr="6188" mi="2" ci="7" mb="1" cb="1"/><line nr="6189" mi="0" ci="5" mb="0" cb="0"/><line nr="6190" mi="0" ci="4" mb="0" cb="0"/><line nr="6195" mi="0" ci="10" mb="0" cb="0"/><line nr="6196" mi="2" ci="7" mb="1" cb="1"/><line nr="6197" mi="0" ci="5" mb="0" cb="0"/><line nr="6198" mi="0" ci="4" mb="0" cb="0"/><line nr="6203" mi="0" ci="10" mb="0" cb="0"/><line nr="6204" mi="0" ci="9" mb="0" cb="2"/><line nr="6205" mi="5" ci="0" mb="0" cb="0"/><line nr="6206" mi="0" ci="4" mb="0" cb="0"/><line nr="6211" mi="0" ci="10" mb="0" cb="0"/><line nr="6212" mi="0" ci="9" mb="0" cb="2"/><line nr="6213" mi="5" ci="0" mb="0" cb="0"/><line nr="6214" mi="0" ci="4" mb="0" cb="0"/><line nr="6219" mi="0" ci="10" mb="0" cb="0"/><line nr="6220" mi="2" ci="7" mb="1" cb="1"/><line nr="6221" mi="0" ci="5" mb="0" cb="0"/><line nr="6222" mi="0" ci="4" mb="0" cb="0"/><line nr="6227" mi="0" ci="10" mb="0" cb="0"/><line nr="6228" mi="0" ci="9" mb="0" cb="2"/><line nr="6229" mi="5" ci="0" mb="0" cb="0"/><line nr="6230" mi="0" ci="4" mb="0" cb="0"/><line nr="6235" mi="0" ci="10" mb="0" cb="0"/><line nr="6236" mi="0" ci="9" mb="0" cb="2"/><line nr="6237" mi="5" ci="0" mb="0" cb="0"/><line nr="6238" mi="0" ci="4" mb="0" cb="0"/><line nr="6243" mi="0" ci="10" mb="0" cb="0"/><line nr="6244" mi="2" ci="7" mb="1" cb="1"/><line nr="6245" mi="5" ci="0" mb="0" cb="0"/><line nr="6246" mi="0" ci="4" mb="0" cb="0"/><line nr="6251" mi="0" ci="10" mb="0" cb="0"/><line nr="6252" mi="2" ci="7" mb="1" cb="1"/><line nr="6253" mi="0" ci="5" mb="0" cb="0"/><line nr="6254" mi="0" ci="4" mb="0" cb="0"/><line nr="6259" mi="0" ci="10" mb="0" cb="0"/><line nr="6260" mi="0" ci="9" mb="0" cb="2"/><line nr="6261" mi="5" ci="0" mb="0" cb="0"/><line nr="6262" mi="0" ci="4" mb="0" cb="0"/><line nr="6267" mi="0" ci="10" mb="0" cb="0"/><line nr="6268" mi="0" ci="9" mb="0" cb="2"/><line nr="6269" mi="5" ci="0" mb="0" cb="0"/><line nr="6270" mi="0" ci="4" mb="0" cb="0"/><line nr="6275" mi="0" ci="10" mb="0" cb="0"/><line nr="6276" mi="0" ci="9" mb="0" cb="2"/><line nr="6277" mi="5" ci="0" mb="0" cb="0"/><line nr="6278" mi="0" ci="4" mb="0" cb="0"/><line nr="6283" mi="0" ci="10" mb="0" cb="0"/><line nr="6284" mi="0" ci="9" mb="0" cb="2"/><line nr="6285" mi="5" ci="0" mb="0" cb="0"/><line nr="6286" mi="0" ci="4" mb="0" cb="0"/><line nr="6291" mi="0" ci="10" mb="0" cb="0"/><line nr="6292" mi="2" ci="7" mb="1" cb="1"/><line nr="6293" mi="5" ci="0" mb="0" cb="0"/><line nr="6294" mi="0" ci="4" mb="0" cb="0"/><line nr="6299" mi="0" ci="10" mb="0" cb="0"/><line nr="6300" mi="2" ci="7" mb="1" cb="1"/><line nr="6301" mi="0" ci="5" mb="0" cb="0"/><line nr="6302" mi="0" ci="4" mb="0" cb="0"/><line nr="6307" mi="0" ci="10" mb="0" cb="0"/><line nr="6308" mi="0" ci="9" mb="0" cb="2"/><line nr="6309" mi="5" ci="0" mb="0" cb="0"/><line nr="6310" mi="0" ci="4" mb="0" cb="0"/><line nr="6315" mi="10" ci="0" mb="0" cb="0"/><line nr="6316" mi="9" ci="0" mb="2" cb="0"/><line nr="6317" mi="5" ci="0" mb="0" cb="0"/><line nr="6318" mi="4" ci="0" mb="0" cb="0"/><line nr="6323" mi="0" ci="10" mb="0" cb="0"/><line nr="6324" mi="0" ci="9" mb="0" cb="2"/><line nr="6325" mi="5" ci="0" mb="0" cb="0"/><line nr="6326" mi="0" ci="4" mb="0" cb="0"/><line nr="6331" mi="0" ci="10" mb="0" cb="0"/><line nr="6332" mi="0" ci="9" mb="0" cb="2"/><line nr="6333" mi="0" ci="5" mb="0" cb="0"/><line nr="6334" mi="0" ci="4" mb="0" cb="0"/><line nr="6339" mi="0" ci="6" mb="0" cb="2"/><line nr="6340" mi="0" ci="2" mb="0" cb="0"/><line nr="6345" mi="0" ci="5" mb="0" cb="2"/><line nr="6348" mi="0" ci="3" mb="0" cb="0"/><line nr="6349" mi="0" ci="7" mb="0" cb="2"/><line nr="6351" mi="0" ci="2" mb="0" cb="0"/><line nr="6356" mi="5" ci="0" mb="2" cb="0"/><line nr="6357" mi="2" ci="0" mb="0" cb="0"/><line nr="6362" mi="5" ci="0" mb="2" cb="0"/><line nr="6363" mi="2" ci="0" mb="0" cb="0"/><line nr="6368" mi="5" ci="0" mb="2" cb="0"/><line nr="6369" mi="2" ci="0" mb="0" cb="0"/><line nr="6375" mi="0" ci="3" mb="0" cb="0"/><line nr="6376" mi="0" ci="4" mb="0" cb="2"/><line nr="6377" mi="0" ci="3" mb="0" cb="0"/><line nr="6378" mi="0" ci="5" mb="0" cb="2"/><line nr="6380" mi="5" ci="0" mb="2" cb="0"/><line nr="6381" mi="3" ci="0" mb="0" cb="0"/><line nr="6382" mi="6" ci="0" mb="2" cb="0"/><line nr="6383" mi="3" ci="0" mb="0" cb="0"/><line nr="6384" mi="6" ci="0" mb="2" cb="0"/><line nr="6385" mi="3" ci="0" mb="0" cb="0"/><line nr="6386" mi="6" ci="0" mb="2" cb="0"/><line nr="6387" mi="5" ci="0" mb="2" cb="0"/><line nr="6388" mi="2" ci="0" mb="0" cb="0"/><line nr="6393" mi="0" ci="5" mb="0" cb="2"/><line nr="6396" mi="0" ci="3" mb="0" cb="0"/><line nr="6397" mi="0" ci="7" mb="0" cb="2"/><line nr="6399" mi="0" ci="2" mb="0" cb="0"/><line nr="6404" mi="0" ci="5" mb="0" cb="2"/><line nr="6405" mi="2" ci="4" mb="1" cb="1"/><line nr="6406" mi="0" ci="2" mb="0" cb="0"/><line nr="6411" mi="0" ci="6" mb="0" cb="2"/><line nr="6412" mi="2" ci="3" mb="1" cb="1"/><line nr="6413" mi="0" ci="2" mb="0" cb="0"/><line nr="6418" mi="0" ci="6" mb="0" cb="2"/><line nr="6419" mi="2" ci="3" mb="1" cb="1"/><line nr="6420" mi="0" ci="2" mb="0" cb="0"/><line nr="6425" mi="0" ci="6" mb="0" cb="2"/><line nr="6426" mi="0" ci="2" mb="0" cb="0"/><line nr="6431" mi="2" ci="4" mb="1" cb="1"/><line nr="6433" mi="0" ci="3" mb="0" cb="0"/><line nr="6434" mi="0" ci="3" mb="0" cb="2"/><line nr="6435" mi="0" ci="3" mb="0" cb="0"/><line nr="6436" mi="0" ci="3" mb="1" cb="1"/><line nr="6437" mi="3" ci="0" mb="0" cb="0"/><line nr="6438" mi="5" ci="0" mb="2" cb="0"/><line nr="6441" mi="0" ci="2" mb="0" cb="0"/><line nr="6446" mi="0" ci="6" mb="0" cb="2"/><line nr="6447" mi="2" ci="3" mb="1" cb="1"/><line nr="6450" mi="0" ci="3" mb="0" cb="0"/><line nr="6451" mi="0" ci="7" mb="0" cb="2"/><line nr="6453" mi="0" ci="2" mb="0" cb="0"/><line nr="6458" mi="0" ci="6" mb="0" cb="2"/><line nr="6459" mi="2" ci="3" mb="1" cb="1"/><line nr="6460" mi="0" ci="2" mb="0" cb="0"/><line nr="6465" mi="2" ci="3" mb="1" cb="1"/><line nr="6466" mi="0" ci="2" mb="0" cb="0"/><line nr="6471" mi="0" ci="5" mb="0" cb="2"/><line nr="6474" mi="0" ci="3" mb="0" cb="0"/><line nr="6475" mi="0" ci="7" mb="0" cb="2"/><line nr="6477" mi="0" ci="2" mb="0" cb="0"/><line nr="6483" mi="0" ci="3" mb="0" cb="0"/><line nr="6484" mi="0" ci="3" mb="0" cb="2"/><line nr="6485" mi="0" ci="3" mb="0" cb="0"/><line nr="6486" mi="0" ci="5" mb="0" cb="2"/><line nr="6488" mi="0" ci="3" mb="0" cb="0"/><line nr="6489" mi="0" ci="3" mb="0" cb="2"/><line nr="6490" mi="0" ci="3" mb="0" cb="0"/><line nr="6491" mi="2" ci="3" mb="1" cb="1"/><line nr="6493" mi="0" ci="2" mb="0" cb="0"/><line nr="6498" mi="0" ci="6" mb="0" cb="2"/><line nr="6499" mi="2" ci="3" mb="1" cb="1"/><line nr="6500" mi="2" ci="4" mb="1" cb="1"/><line nr="6501" mi="2" ci="3" mb="1" cb="1"/><line nr="6502" mi="0" ci="2" mb="0" cb="0"/><line nr="6507" mi="0" ci="5" mb="0" cb="2"/><line nr="6509" mi="0" ci="3" mb="0" cb="0"/><line nr="6510" mi="0" ci="6" mb="0" cb="2"/><line nr="6511" mi="0" ci="2" mb="0" cb="0"/><line nr="6516" mi="0" ci="5" mb="0" cb="2"/><line nr="6517" mi="0" ci="2" mb="0" cb="0"/><line nr="6522" mi="0" ci="6" mb="0" cb="2"/><line nr="6523" mi="0" ci="2" mb="0" cb="0"/><line nr="6528" mi="0" ci="6" mb="0" cb="2"/><line nr="6529" mi="0" ci="2" mb="0" cb="0"/><line nr="6534" mi="0" ci="6" mb="0" cb="2"/><line nr="6535" mi="0" ci="2" mb="0" cb="0"/><line nr="6540" mi="0" ci="6" mb="1" cb="1"/><line nr="6541" mi="2" ci="0" mb="0" cb="0"/><line nr="6546" mi="0" ci="6" mb="0" cb="2"/><line nr="6547" mi="0" ci="2" mb="0" cb="0"/><line nr="6552" mi="0" ci="6" mb="1" cb="1"/><line nr="6553" mi="2" ci="0" mb="0" cb="0"/><line nr="6558" mi="0" ci="6" mb="0" cb="2"/><line nr="6559" mi="0" ci="2" mb="0" cb="0"/><line nr="6564" mi="0" ci="6" mb="0" cb="2"/><line nr="6565" mi="0" ci="2" mb="0" cb="0"/><line nr="6570" mi="0" ci="6" mb="1" cb="1"/><line nr="6571" mi="2" ci="0" mb="0" cb="0"/><line nr="6576" mi="0" ci="6" mb="1" cb="1"/><line nr="6577" mi="2" ci="0" mb="0" cb="0"/><line nr="6582" mi="0" ci="6" mb="0" cb="2"/><line nr="6583" mi="0" ci="2" mb="0" cb="0"/><line nr="6588" mi="0" ci="6" mb="0" cb="2"/><line nr="6589" mi="0" ci="2" mb="0" cb="0"/><line nr="6594" mi="0" ci="6" mb="0" cb="2"/><line nr="6595" mi="0" ci="2" mb="0" cb="0"/><line nr="6600" mi="0" ci="5" mb="0" cb="2"/><line nr="6601" mi="0" ci="2" mb="0" cb="0"/><line nr="6606" mi="0" ci="6" mb="0" cb="2"/><line nr="6607" mi="0" ci="2" mb="0" cb="0"/><line nr="6612" mi="0" ci="6" mb="0" cb="2"/><line nr="6613" mi="0" ci="2" mb="0" cb="0"/><line nr="6618" mi="0" ci="6" mb="1" cb="1"/><line nr="6619" mi="2" ci="0" mb="0" cb="0"/><line nr="6624" mi="0" ci="6" mb="0" cb="2"/><line nr="6625" mi="0" ci="2" mb="0" cb="0"/><line nr="6630" mi="0" ci="6" mb="1" cb="1"/><line nr="6631" mi="2" ci="0" mb="0" cb="0"/><line nr="6636" mi="0" ci="6" mb="1" cb="1"/><line nr="6637" mi="2" ci="0" mb="0" cb="0"/><line nr="6642" mi="0" ci="5" mb="1" cb="1"/><line nr="6643" mi="2" ci="0" mb="0" cb="0"/><line nr="6648" mi="0" ci="6" mb="0" cb="2"/><line nr="6649" mi="0" ci="2" mb="0" cb="0"/><line nr="6654" mi="0" ci="6" mb="0" cb="2"/><line nr="6655" mi="0" ci="2" mb="0" cb="0"/><line nr="6660" mi="0" ci="6" mb="0" cb="2"/><line nr="6661" mi="2" ci="4" mb="1" cb="1"/><line nr="6662" mi="2" ci="3" mb="1" cb="1"/><line nr="6663" mi="2" ci="4" mb="1" cb="1"/><line nr="6664" mi="2" ci="4" mb="1" cb="1"/><line nr="6667" mi="0" ci="3" mb="0" cb="0"/><line nr="6668" mi="0" ci="7" mb="0" cb="2"/><line nr="6670" mi="2" ci="4" mb="1" cb="1"/><line nr="6671" mi="0" ci="2" mb="0" cb="0"/><line nr="6676" mi="0" ci="6" mb="0" cb="2"/><line nr="6677" mi="0" ci="2" mb="0" cb="0"/><line nr="6682" mi="0" ci="6" mb="0" cb="2"/><line nr="6683" mi="0" ci="2" mb="0" cb="0"/><line nr="6689" mi="0" ci="3" mb="0" cb="0"/><line nr="6690" mi="0" ci="3" mb="0" cb="2"/><line nr="6691" mi="0" ci="3" mb="0" cb="0"/><line nr="6692" mi="0" ci="3" mb="1" cb="1"/><line nr="6693" mi="0" ci="3" mb="0" cb="0"/><line nr="6694" mi="0" ci="3" mb="1" cb="1"/><line nr="6695" mi="0" ci="3" mb="0" cb="0"/><line nr="6696" mi="0" ci="3" mb="1" cb="1"/><line nr="6697" mi="0" ci="3" mb="0" cb="0"/><line nr="6698" mi="0" ci="3" mb="0" cb="2"/><line nr="6699" mi="0" ci="3" mb="0" cb="0"/><line nr="6700" mi="0" ci="3" mb="0" cb="2"/><line nr="6701" mi="0" ci="3" mb="0" cb="0"/><line nr="6702" mi="0" ci="3" mb="0" cb="2"/><line nr="6703" mi="0" ci="3" mb="0" cb="0"/><line nr="6704" mi="0" ci="3" mb="1" cb="1"/><line nr="6705" mi="0" ci="3" mb="0" cb="0"/><line nr="6706" mi="0" ci="3" mb="1" cb="1"/><line nr="6707" mi="0" ci="3" mb="0" cb="0"/><line nr="6708" mi="0" ci="3" mb="0" cb="2"/><line nr="6709" mi="0" ci="3" mb="0" cb="0"/><line nr="6710" mi="0" ci="3" mb="1" cb="1"/><line nr="6711" mi="0" ci="3" mb="0" cb="0"/><line nr="6712" mi="0" ci="5" mb="1" cb="1"/><line nr="6724" mi="0" ci="2" mb="0" cb="0"/><line nr="6729" mi="0" ci="6" mb="0" cb="2"/><line nr="6730" mi="0" ci="2" mb="0" cb="0"/><line nr="6735" mi="0" ci="6" mb="0" cb="2"/><line nr="6737" mi="0" ci="3" mb="0" cb="0"/><line nr="6738" mi="0" ci="6" mb="1" cb="1"/><line nr="6739" mi="0" ci="3" mb="0" cb="0"/><line nr="6740" mi="0" ci="3" mb="1" cb="1"/><line nr="6741" mi="3" ci="0" mb="0" cb="0"/><line nr="6742" mi="6" ci="0" mb="2" cb="0"/><line nr="6744" mi="0" ci="2" mb="0" cb="0"/><line nr="6749" mi="0" ci="6" mb="0" cb="2"/><line nr="6750" mi="0" ci="2" mb="0" cb="0"/><line nr="6755" mi="5" ci="0" mb="2" cb="0"/><line nr="6756" mi="2" ci="0" mb="0" cb="0"/><line nr="6762" mi="0" ci="3" mb="0" cb="0"/><line nr="6763" mi="0" ci="3" mb="0" cb="2"/><line nr="6764" mi="0" ci="3" mb="0" cb="0"/><line nr="6765" mi="0" ci="3" mb="0" cb="2"/><line nr="6766" mi="0" ci="3" mb="0" cb="0"/><line nr="6767" mi="0" ci="3" mb="0" cb="2"/><line nr="6768" mi="0" ci="3" mb="0" cb="0"/><line nr="6769" mi="0" ci="3" mb="0" cb="2"/><line nr="6770" mi="0" ci="3" mb="0" cb="0"/><line nr="6771" mi="0" ci="3" mb="0" cb="2"/><line nr="6772" mi="0" ci="3" mb="0" cb="0"/><line nr="6773" mi="0" ci="3" mb="0" cb="2"/><line nr="6774" mi="0" ci="3" mb="0" cb="0"/><line nr="6775" mi="0" ci="3" mb="0" cb="2"/><line nr="6776" mi="0" ci="3" mb="0" cb="0"/><line nr="6777" mi="0" ci="3" mb="0" cb="2"/><line nr="6778" mi="0" ci="3" mb="0" cb="0"/><line nr="6779" mi="0" ci="3" mb="0" cb="2"/><line nr="6780" mi="0" ci="3" mb="0" cb="0"/><line nr="6781" mi="0" ci="3" mb="0" cb="2"/><line nr="6782" mi="0" ci="3" mb="0" cb="0"/><line nr="6783" mi="0" ci="3" mb="0" cb="2"/><line nr="6784" mi="0" ci="3" mb="0" cb="0"/><line nr="6785" mi="0" ci="3" mb="0" cb="2"/><line nr="6786" mi="0" ci="3" mb="0" cb="0"/><line nr="6787" mi="0" ci="3" mb="0" cb="2"/><line nr="6788" mi="0" ci="3" mb="0" cb="0"/><line nr="6789" mi="0" ci="5" mb="0" cb="2"/><line nr="6803" mi="0" ci="2" mb="0" cb="0"/><line nr="6810" mi="0" ci="3" mb="0" cb="0"/><line nr="6811" mi="0" ci="7" mb="0" cb="2"/><line nr="6813" mi="0" ci="2" mb="0" cb="0"/><line nr="6818" mi="0" ci="6" mb="1" cb="1"/><line nr="6819" mi="6" ci="0" mb="2" cb="0"/><line nr="6820" mi="5" ci="0" mb="2" cb="0"/><line nr="6821" mi="6" ci="0" mb="2" cb="0"/><line nr="6822" mi="6" ci="0" mb="2" cb="0"/><line nr="6825" mi="3" ci="0" mb="0" cb="0"/><line nr="6826" mi="7" ci="0" mb="2" cb="0"/><line nr="6828" mi="6" ci="0" mb="2" cb="0"/><line nr="6829" mi="2" ci="0" mb="0" cb="0"/><line nr="6834" mi="0" ci="5" mb="0" cb="2"/><line nr="6835" mi="2" ci="3" mb="1" cb="1"/><line nr="6836" mi="0" ci="2" mb="0" cb="0"/><line nr="6841" mi="0" ci="6" mb="0" cb="2"/><line nr="6842" mi="2" ci="3" mb="1" cb="1"/><line nr="6843" mi="0" ci="2" mb="0" cb="0"/><line nr="6848" mi="0" ci="6" mb="1" cb="1"/><line nr="6849" mi="2" ci="0" mb="0" cb="0"/><line nr="6854" mi="0" ci="6" mb="1" cb="1"/><line nr="6855" mi="2" ci="0" mb="0" cb="0"/><line nr="6861" mi="0" ci="3" mb="0" cb="0"/><line nr="6862" mi="0" ci="3" mb="1" cb="1"/><line nr="6863" mi="0" ci="3" mb="0" cb="0"/><line nr="6864" mi="0" ci="3" mb="1" cb="1"/><line nr="6865" mi="0" ci="3" mb="0" cb="0"/><line nr="6866" mi="0" ci="5" mb="0" cb="2"/><line nr="6869" mi="0" ci="2" mb="0" cb="0"/><line nr="6874" mi="0" ci="5" mb="1" cb="1"/><line nr="6875" mi="5" ci="0" mb="2" cb="0"/><line nr="6876" mi="2" ci="0" mb="0" cb="0"/><line nr="6882" mi="0" ci="3" mb="0" cb="0"/><line nr="6883" mi="0" ci="3" mb="1" cb="1"/><line nr="6884" mi="0" ci="3" mb="0" cb="0"/><line nr="6885" mi="0" ci="3" mb="0" cb="2"/><line nr="6886" mi="0" ci="3" mb="0" cb="0"/><line nr="6887" mi="0" ci="5" mb="0" cb="2"/><line nr="6890" mi="0" ci="2" mb="0" cb="0"/><line nr="6895" mi="0" ci="5" mb="0" cb="2"/><line nr="6897" mi="0" ci="3" mb="0" cb="0"/><line nr="6898" mi="0" ci="6" mb="0" cb="2"/><line nr="6899" mi="0" ci="2" mb="0" cb="0"/><line nr="6904" mi="0" ci="5" mb="1" cb="1"/><line nr="6905" mi="2" ci="0" mb="0" cb="0"/><line nr="6910" mi="0" ci="5" mb="0" cb="2"/><line nr="6912" mi="0" ci="3" mb="0" cb="0"/><line nr="6913" mi="0" ci="6" mb="0" cb="2"/><line nr="6914" mi="0" ci="2" mb="0" cb="0"/><line nr="6919" mi="0" ci="5" mb="1" cb="1"/><line nr="6920" mi="2" ci="0" mb="0" cb="0"/><line nr="6926" mi="0" ci="3" mb="0" cb="0"/><line nr="6927" mi="0" ci="3" mb="1" cb="1"/><line nr="6928" mi="0" ci="3" mb="0" cb="0"/><line nr="6929" mi="0" ci="3" mb="1" cb="1"/><line nr="6930" mi="0" ci="3" mb="0" cb="0"/><line nr="6931" mi="0" ci="5" mb="0" cb="2"/><line nr="6934" mi="2" ci="4" mb="1" cb="1"/><line nr="6935" mi="0" ci="2" mb="0" cb="0"/><line nr="6940" mi="2" ci="3" mb="1" cb="1"/><line nr="6941" mi="0" ci="6" mb="0" cb="2"/><line nr="6942" mi="2" ci="3" mb="1" cb="1"/><line nr="6943" mi="2" ci="4" mb="1" cb="1"/><line nr="6944" mi="0" ci="2" mb="0" cb="0"/><line nr="6949" mi="2" ci="3" mb="1" cb="1"/><line nr="6950" mi="0" ci="2" mb="0" cb="0"/><line nr="6955" mi="0" ci="5" mb="0" cb="2"/><line nr="6956" mi="0" ci="2" mb="0" cb="0"/><line nr="6962" mi="0" ci="3" mb="0" cb="0"/><line nr="6963" mi="0" ci="3" mb="0" cb="2"/><line nr="6964" mi="0" ci="3" mb="0" cb="0"/><line nr="6965" mi="2" ci="3" mb="1" cb="1"/><line nr="6967" mi="0" ci="2" mb="0" cb="0"/><line nr="6973" mi="0" ci="3" mb="0" cb="0"/><line nr="6974" mi="0" ci="4" mb="0" cb="2"/><line nr="6975" mi="0" ci="3" mb="0" cb="0"/><line nr="6976" mi="0" ci="4" mb="1" cb="1"/><line nr="6977" mi="0" ci="3" mb="0" cb="0"/><line nr="6978" mi="0" ci="4" mb="1" cb="1"/><line nr="6979" mi="0" ci="3" mb="0" cb="0"/><line nr="6980" mi="0" ci="4" mb="0" cb="2"/><line nr="6981" mi="0" ci="3" mb="0" cb="0"/><line nr="6982" mi="0" ci="4" mb="0" cb="2"/><line nr="6983" mi="0" ci="3" mb="0" cb="0"/><line nr="6984" mi="0" ci="4" mb="1" cb="1"/><line nr="6985" mi="0" ci="3" mb="0" cb="0"/><line nr="6986" mi="0" ci="4" mb="1" cb="1"/><line nr="6987" mi="0" ci="3" mb="0" cb="0"/><line nr="6988" mi="0" ci="4" mb="1" cb="1"/><line nr="6989" mi="0" ci="3" mb="0" cb="0"/><line nr="6990" mi="0" ci="4" mb="1" cb="1"/><line nr="6991" mi="0" ci="3" mb="0" cb="0"/><line nr="6992" mi="0" ci="4" mb="1" cb="1"/><line nr="6993" mi="0" ci="3" mb="0" cb="0"/><line nr="6994" mi="0" ci="4" mb="0" cb="2"/><line nr="6995" mi="0" ci="3" mb="0" cb="0"/><line nr="6996" mi="0" ci="4" mb="0" cb="2"/><line nr="6997" mi="0" ci="3" mb="0" cb="0"/><line nr="6998" mi="0" ci="6" mb="0" cb="2"/><line nr="7011" mi="0" ci="2" mb="0" cb="0"/><line nr="7016" mi="0" ci="5" mb="0" cb="2"/><line nr="7017" mi="0" ci="2" mb="0" cb="0"/><line nr="7022" mi="0" ci="6" mb="0" cb="2"/><line nr="7023" mi="0" ci="2" mb="0" cb="0"/><line nr="7028" mi="0" ci="6" mb="0" cb="2"/><line nr="7029" mi="0" ci="2" mb="0" cb="0"/><line nr="7034" mi="0" ci="5" mb="0" cb="2"/><line nr="7035" mi="0" ci="2" mb="0" cb="0"/><line nr="7040" mi="2" ci="3" mb="1" cb="1"/><line nr="7041" mi="0" ci="5" mb="0" cb="2"/><line nr="7042" mi="0" ci="5" mb="0" cb="2"/><line nr="7045" mi="0" ci="3" mb="0" cb="0"/><line nr="7046" mi="0" ci="7" mb="0" cb="2"/><line nr="7048" mi="0" ci="2" mb="0" cb="0"/><line nr="7053" mi="0" ci="6" mb="0" cb="2"/><line nr="7054" mi="0" ci="5" mb="0" cb="2"/><line nr="7055" mi="0" ci="2" mb="0" cb="0"/><line nr="7060" mi="0" ci="5" mb="0" cb="2"/><line nr="7063" mi="0" ci="3" mb="0" cb="0"/><line nr="7064" mi="0" ci="7" mb="0" cb="2"/><line nr="7066" mi="0" ci="2" mb="0" cb="0"/><line nr="7071" mi="0" ci="5" mb="0" cb="2"/><line nr="7072" mi="0" ci="2" mb="0" cb="0"/><line nr="7077" mi="2" ci="3" mb="1" cb="1"/><line nr="7079" mi="0" ci="3" mb="0" cb="0"/><line nr="7080" mi="0" ci="4" mb="0" cb="2"/><line nr="7081" mi="0" ci="3" mb="0" cb="0"/><line nr="7082" mi="0" ci="6" mb="0" cb="2"/><line nr="7084" mi="0" ci="2" mb="0" cb="0"/><line nr="7089" mi="0" ci="5" mb="0" cb="2"/><line nr="7090" mi="0" ci="2" mb="0" cb="0"/><line nr="7095" mi="0" ci="5" mb="0" cb="2"/><line nr="7096" mi="0" ci="2" mb="0" cb="0"/><line nr="7101" mi="0" ci="6" mb="0" cb="2"/><line nr="7102" mi="0" ci="2" mb="0" cb="0"/><line nr="7107" mi="0" ci="5" mb="0" cb="2"/><line nr="7108" mi="2" ci="4" mb="1" cb="1"/><line nr="7109" mi="0" ci="2" mb="0" cb="0"/><line nr="7114" mi="2" ci="3" mb="1" cb="1"/><line nr="7115" mi="0" ci="5" mb="1" cb="1"/><line nr="7116" mi="2" ci="0" mb="0" cb="0"/><line nr="7122" mi="0" ci="3" mb="0" cb="0"/><line nr="7123" mi="0" ci="3" mb="0" cb="2"/><line nr="7124" mi="0" ci="3" mb="0" cb="0"/><line nr="7125" mi="0" ci="5" mb="0" cb="2"/><line nr="7127" mi="0" ci="2" mb="0" cb="0"/><line nr="7132" mi="0" ci="6" mb="1" cb="1"/><line nr="7133" mi="5" ci="0" mb="2" cb="0"/><line nr="7134" mi="2" ci="0" mb="0" cb="0"/><line nr="7140" mi="0" ci="3" mb="0" cb="0"/><line nr="7141" mi="0" ci="3" mb="1" cb="1"/><line nr="7142" mi="0" ci="3" mb="0" cb="0"/><line nr="7143" mi="0" ci="3" mb="0" cb="2"/><line nr="7144" mi="0" ci="3" mb="0" cb="0"/><line nr="7145" mi="0" ci="5" mb="0" cb="2"/><line nr="7148" mi="0" ci="2" mb="0" cb="0"/><line nr="7153" mi="0" ci="6" mb="0" cb="2"/><line nr="7154" mi="0" ci="2" mb="0" cb="0"/><line nr="7159" mi="0" ci="6" mb="0" cb="2"/><line nr="7160" mi="0" ci="2" mb="0" cb="0"/><line nr="7165" mi="0" ci="6" mb="0" cb="2"/><line nr="7166" mi="0" ci="2" mb="0" cb="0"/><line nr="7171" mi="0" ci="6" mb="0" cb="2"/><line nr="7172" mi="0" ci="2" mb="0" cb="0"/><line nr="7177" mi="0" ci="6" mb="0" cb="2"/><line nr="7178" mi="0" ci="2" mb="0" cb="0"/><line nr="7183" mi="0" ci="6" mb="0" cb="2"/><line nr="7184" mi="0" ci="2" mb="0" cb="0"/><line nr="7189" mi="0" ci="6" mb="0" cb="2"/><line nr="7190" mi="0" ci="2" mb="0" cb="0"/><line nr="7195" mi="0" ci="6" mb="0" cb="2"/><line nr="7196" mi="2" ci="3" mb="1" cb="1"/><line nr="7197" mi="2" ci="3" mb="1" cb="1"/><line nr="7198" mi="0" ci="2" mb="0" cb="0"/><line nr="7203" mi="0" ci="6" mb="0" cb="2"/><line nr="7204" mi="2" ci="3" mb="1" cb="1"/><line nr="7205" mi="0" ci="2" mb="0" cb="0"/><line nr="7210" mi="0" ci="6" mb="0" cb="2"/><line nr="7211" mi="0" ci="2" mb="0" cb="0"/><line nr="7216" mi="0" ci="6" mb="0" cb="2"/><line nr="7217" mi="2" ci="3" mb="1" cb="1"/><line nr="7218" mi="2" ci="3" mb="1" cb="1"/><line nr="7219" mi="0" ci="2" mb="0" cb="0"/><line nr="7225" mi="0" ci="3" mb="0" cb="0"/><line nr="7226" mi="0" ci="3" mb="0" cb="2"/><line nr="7227" mi="0" ci="3" mb="0" cb="0"/><line nr="7228" mi="0" ci="5" mb="0" cb="2"/><line nr="7230" mi="0" ci="2" mb="0" cb="0"/><line nr="7236" mi="0" ci="3" mb="0" cb="0"/><line nr="7237" mi="0" ci="3" mb="0" cb="2"/><line nr="7238" mi="0" ci="3" mb="0" cb="0"/><line nr="7239" mi="0" ci="3" mb="0" cb="2"/><line nr="7240" mi="0" ci="3" mb="0" cb="0"/><line nr="7241" mi="0" ci="3" mb="0" cb="2"/><line nr="7242" mi="0" ci="3" mb="0" cb="0"/><line nr="7243" mi="0" ci="3" mb="0" cb="2"/><line nr="7244" mi="0" ci="3" mb="0" cb="0"/><line nr="7245" mi="0" ci="3" mb="0" cb="2"/><line nr="7246" mi="0" ci="3" mb="0" cb="0"/><line nr="7247" mi="0" ci="3" mb="0" cb="2"/><line nr="7248" mi="0" ci="3" mb="0" cb="0"/><line nr="7249" mi="0" ci="3" mb="0" cb="2"/><line nr="7250" mi="0" ci="3" mb="0" cb="0"/><line nr="7251" mi="0" ci="5" mb="0" cb="2"/><line nr="7259" mi="0" ci="2" mb="0" cb="0"/><line nr="7264" mi="0" ci="6" mb="0" cb="2"/><line nr="7265" mi="2" ci="3" mb="1" cb="1"/><line nr="7266" mi="2" ci="4" mb="1" cb="1"/><line nr="7267" mi="0" ci="2" mb="0" cb="0"/><line nr="7272" mi="0" ci="6" mb="0" cb="2"/><line nr="7274" mi="0" ci="3" mb="0" cb="0"/><line nr="7275" mi="0" ci="6" mb="0" cb="2"/><line nr="7276" mi="0" ci="2" mb="0" cb="0"/><line nr="7281" mi="0" ci="5" mb="0" cb="2"/><line nr="7282" mi="0" ci="6" mb="1" cb="1"/><line nr="7283" mi="5" ci="0" mb="2" cb="0"/><line nr="7284" mi="2" ci="0" mb="0" cb="0"/><line nr="7289" mi="0" ci="6" mb="0" cb="2"/><line nr="7290" mi="2" ci="3" mb="1" cb="1"/><line nr="7292" mi="0" ci="3" mb="0" cb="0"/><line nr="7293" mi="0" ci="6" mb="1" cb="1"/><line nr="7294" mi="6" ci="0" mb="2" cb="0"/><line nr="7295" mi="2" ci="0" mb="0" cb="0"/><line nr="7300" mi="0" ci="5" mb="0" cb="2"/><line nr="7301" mi="0" ci="2" mb="0" cb="0"/><line nr="7306" mi="0" ci="5" mb="0" cb="2"/><line nr="7307" mi="0" ci="2" mb="0" cb="0"/><line nr="7312" mi="0" ci="5" mb="0" cb="2"/><line nr="7313" mi="0" ci="2" mb="0" cb="0"/><line nr="7318" mi="2" ci="3" mb="1" cb="1"/><line nr="7320" mi="0" ci="3" mb="0" cb="0"/><line nr="7321" mi="0" ci="3" mb="0" cb="2"/><line nr="7322" mi="0" ci="3" mb="0" cb="0"/><line nr="7323" mi="0" ci="5" mb="0" cb="2"/><line nr="7325" mi="0" ci="2" mb="0" cb="0"/><line nr="7330" mi="0" ci="5" mb="1" cb="1"/><line nr="7331" mi="2" ci="0" mb="0" cb="0"/><line nr="7336" mi="0" ci="5" mb="0" cb="2"/><line nr="7337" mi="0" ci="2" mb="0" cb="0"/><line nr="7342" mi="0" ci="5" mb="0" cb="2"/><line nr="7343" mi="0" ci="2" mb="0" cb="0"/><line nr="7348" mi="0" ci="5" mb="1" cb="1"/><line nr="7349" mi="2" ci="0" mb="0" cb="0"/><line nr="7354" mi="0" ci="5" mb="0" cb="2"/><line nr="7357" mi="0" ci="3" mb="0" cb="0"/><line nr="7358" mi="0" ci="7" mb="0" cb="2"/><line nr="7360" mi="0" ci="2" mb="0" cb="0"/><line nr="7365" mi="0" ci="5" mb="0" cb="2"/><line nr="7366" mi="0" ci="2" mb="0" cb="0"/><line nr="7371" mi="0" ci="5" mb="0" cb="2"/><line nr="7372" mi="0" ci="2" mb="0" cb="0"/><line nr="7377" mi="0" ci="6" mb="0" cb="2"/><line nr="7379" mi="0" ci="3" mb="0" cb="0"/><line nr="7380" mi="0" ci="6" mb="0" cb="2"/><line nr="7381" mi="0" ci="6" mb="0" cb="2"/><line nr="7382" mi="0" ci="2" mb="0" cb="0"/><line nr="7387" mi="0" ci="5" mb="1" cb="1"/><line nr="7388" mi="2" ci="0" mb="0" cb="0"/><line nr="7393" mi="0" ci="5" mb="0" cb="2"/><line nr="7394" mi="0" ci="2" mb="0" cb="0"/><line nr="7399" mi="0" ci="5" mb="0" cb="2"/><line nr="7400" mi="0" ci="2" mb="0" cb="0"/><line nr="7405" mi="0" ci="5" mb="0" cb="2"/><line nr="7406" mi="0" ci="2" mb="0" cb="0"/><line nr="7411" mi="0" ci="5" mb="1" cb="1"/><line nr="7412" mi="2" ci="0" mb="0" cb="0"/><line nr="7417" mi="0" ci="5" mb="0" cb="2"/><line nr="7418" mi="0" ci="2" mb="0" cb="0"/><line nr="7423" mi="0" ci="6" mb="0" cb="2"/><line nr="7424" mi="2" ci="3" mb="1" cb="1"/><line nr="7425" mi="0" ci="5" mb="0" cb="2"/><line nr="7427" mi="0" ci="3" mb="0" cb="0"/><line nr="7428" mi="0" ci="6" mb="0" cb="2"/><line nr="7429" mi="0" ci="2" mb="0" cb="0"/><line nr="7434" mi="0" ci="5" mb="0" cb="2"/><line nr="7435" mi="0" ci="2" mb="0" cb="0"/><line nr="7440" mi="0" ci="5" mb="0" cb="2"/><line nr="7441" mi="0" ci="2" mb="0" cb="0"/><line nr="7446" mi="6" ci="0" mb="2" cb="0"/><line nr="7447" mi="5" ci="0" mb="2" cb="0"/><line nr="7450" mi="3" ci="0" mb="0" cb="0"/><line nr="7451" mi="7" ci="0" mb="2" cb="0"/><line nr="7453" mi="2" ci="0" mb="0" cb="0"/><line nr="7458" mi="0" ci="5" mb="1" cb="1"/><line nr="7459" mi="2" ci="0" mb="0" cb="0"/><line nr="7464" mi="2" ci="3" mb="1" cb="1"/><line nr="7465" mi="0" ci="6" mb="0" cb="2"/><line nr="7466" mi="0" ci="2" mb="0" cb="0"/><line nr="7471" mi="0" ci="5" mb="1" cb="1"/><line nr="7472" mi="2" ci="0" mb="0" cb="0"/><line nr="7477" mi="0" ci="5" mb="0" cb="2"/><line nr="7478" mi="0" ci="2" mb="0" cb="0"/><line nr="7483" mi="0" ci="5" mb="0" cb="2"/><line nr="7485" mi="0" ci="3" mb="0" cb="0"/><line nr="7486" mi="0" ci="6" mb="0" cb="2"/><line nr="7488" mi="0" ci="3" mb="0" cb="0"/><line nr="7489" mi="0" ci="7" mb="0" cb="2"/><line nr="7491" mi="0" ci="2" mb="0" cb="0"/><line nr="7497" mi="0" ci="3" mb="0" cb="0"/><line nr="7498" mi="0" ci="3" mb="1" cb="1"/><line nr="7499" mi="0" ci="3" mb="0" cb="0"/><line nr="7500" mi="0" ci="3" mb="1" cb="1"/><line nr="7501" mi="0" ci="3" mb="0" cb="0"/><line nr="7502" mi="0" ci="3" mb="0" cb="2"/><line nr="7503" mi="0" ci="3" mb="0" cb="0"/><line nr="7504" mi="0" ci="3" mb="0" cb="2"/><line nr="7505" mi="0" ci="3" mb="0" cb="0"/><line nr="7506" mi="0" ci="3" mb="0" cb="2"/><line nr="7507" mi="0" ci="3" mb="0" cb="0"/><line nr="7508" mi="0" ci="3" mb="1" cb="1"/><line nr="7509" mi="0" ci="3" mb="0" cb="0"/><line nr="7510" mi="0" ci="3" mb="0" cb="2"/><line nr="7511" mi="0" ci="3" mb="0" cb="0"/><line nr="7512" mi="0" ci="3" mb="0" cb="2"/><line nr="7513" mi="0" ci="3" mb="0" cb="0"/><line nr="7514" mi="0" ci="3" mb="1" cb="1"/><line nr="7515" mi="0" ci="3" mb="0" cb="0"/><line nr="7516" mi="0" ci="3" mb="0" cb="2"/><line nr="7517" mi="0" ci="3" mb="0" cb="0"/><line nr="7518" mi="0" ci="3" mb="0" cb="2"/><line nr="7519" mi="0" ci="3" mb="0" cb="0"/><line nr="7520" mi="0" ci="3" mb="1" cb="1"/><line nr="7521" mi="0" ci="3" mb="0" cb="0"/><line nr="7522" mi="0" ci="3" mb="0" cb="2"/><line nr="7523" mi="0" ci="3" mb="0" cb="0"/><line nr="7524" mi="0" ci="3" mb="0" cb="2"/><line nr="7525" mi="0" ci="3" mb="0" cb="0"/><line nr="7526" mi="0" ci="3" mb="1" cb="1"/><line nr="7527" mi="0" ci="3" mb="0" cb="0"/><line nr="7528" mi="0" ci="5" mb="0" cb="2"/><line nr="7544" mi="0" ci="2" mb="0" cb="0"/><line nr="7549" mi="2" ci="3" mb="1" cb="1"/><line nr="7550" mi="0" ci="6" mb="0" cb="2"/><line nr="7551" mi="0" ci="2" mb="0" cb="0"/><line nr="7556" mi="0" ci="5" mb="0" cb="2"/><line nr="7557" mi="0" ci="2" mb="0" cb="0"/><line nr="7562" mi="2" ci="3" mb="1" cb="1"/><line nr="7563" mi="2" ci="3" mb="1" cb="1"/><line nr="7564" mi="0" ci="2" mb="0" cb="0"/><line nr="7569" mi="0" ci="5" mb="0" cb="2"/><line nr="7570" mi="0" ci="2" mb="0" cb="0"/><line nr="7575" mi="0" ci="5" mb="0" cb="2"/><line nr="7576" mi="0" ci="2" mb="0" cb="0"/><line nr="7581" mi="0" ci="5" mb="0" cb="2"/><line nr="7582" mi="0" ci="2" mb="0" cb="0"/><line nr="7587" mi="0" ci="5" mb="0" cb="2"/><line nr="7588" mi="0" ci="2" mb="0" cb="0"/><line nr="7593" mi="2" ci="3" mb="1" cb="1"/><line nr="7594" mi="0" ci="6" mb="0" cb="2"/><line nr="7596" mi="0" ci="3" mb="0" cb="0"/><line nr="7597" mi="0" ci="6" mb="0" cb="2"/><line nr="7598" mi="2" ci="4" mb="1" cb="1"/><line nr="7599" mi="0" ci="2" mb="0" cb="0"/><line nr="7605" mi="0" ci="5" mb="0" cb="2"/><line nr="7607" mi="0" ci="3" mb="0" cb="0"/><line nr="7608" mi="0" ci="7" mb="0" cb="2"/><line nr="7610" mi="0" ci="3" mb="0" cb="0"/><line nr="7611" mi="0" ci="6" mb="0" cb="2"/><line nr="7612" mi="0" ci="2" mb="0" cb="0"/><line nr="7617" mi="0" ci="5" mb="0" cb="2"/><line nr="7618" mi="0" ci="2" mb="0" cb="0"/><line nr="7623" mi="0" ci="6" mb="0" cb="2"/><line nr="7624" mi="2" ci="3" mb="1" cb="1"/><line nr="7625" mi="0" ci="2" mb="0" cb="0"/><line nr="7630" mi="2" ci="3" mb="1" cb="1"/><line nr="7632" mi="0" ci="3" mb="0" cb="0"/><line nr="7633" mi="0" ci="6" mb="0" cb="2"/><line nr="7634" mi="0" ci="2" mb="0" cb="0"/><line nr="7639" mi="0" ci="5" mb="0" cb="2"/><line nr="7640" mi="0" ci="2" mb="0" cb="0"/><line nr="7645" mi="2" ci="3" mb="1" cb="1"/><line nr="7646" mi="0" ci="6" mb="0" cb="2"/><line nr="7647" mi="0" ci="6" mb="0" cb="2"/><line nr="7648" mi="0" ci="2" mb="0" cb="0"/><line nr="7653" mi="0" ci="5" mb="0" cb="2"/><line nr="7654" mi="0" ci="2" mb="0" cb="0"/><line nr="7660" mi="0" ci="3" mb="0" cb="0"/><line nr="7661" mi="0" ci="6" mb="0" cb="2"/><line nr="7662" mi="2" ci="3" mb="1" cb="1"/><line nr="7663" mi="0" ci="3" mb="0" cb="0"/><line nr="7664" mi="0" ci="3" mb="0" cb="2"/><line nr="7665" mi="0" ci="3" mb="0" cb="0"/><line nr="7666" mi="2" ci="3" mb="1" cb="1"/><line nr="7668" mi="0" ci="2" mb="0" cb="0"/><line nr="7673" mi="0" ci="5" mb="0" cb="2"/><line nr="7674" mi="2" ci="3" mb="1" cb="1"/><line nr="7675" mi="0" ci="2" mb="0" cb="0"/><line nr="7680" mi="0" ci="5" mb="0" cb="2"/><line nr="7683" mi="0" ci="3" mb="0" cb="0"/><line nr="7684" mi="0" ci="7" mb="0" cb="2"/><line nr="7686" mi="0" ci="2" mb="0" cb="0"/><line nr="7691" mi="0" ci="5" mb="0" cb="2"/><line nr="7693" mi="0" ci="5" mb="0" cb="2"/><line nr="7695" mi="0" ci="3" mb="0" cb="0"/><line nr="7696" mi="0" ci="7" mb="0" cb="2"/><line nr="7698" mi="0" ci="2" mb="0" cb="0"/><line nr="7703" mi="5" ci="0" mb="2" cb="0"/><line nr="7704" mi="2" ci="0" mb="0" cb="0"/><line nr="7710" mi="0" ci="3" mb="0" cb="0"/><line nr="7711" mi="0" ci="3" mb="0" cb="2"/><line nr="7712" mi="0" ci="3" mb="0" cb="0"/><line nr="7713" mi="0" ci="5" mb="0" cb="2"/><line nr="7715" mi="0" ci="2" mb="0" cb="0"/><line nr="7720" mi="0" ci="6" mb="0" cb="2"/><line nr="7721" mi="2" ci="3" mb="1" cb="1"/><line nr="7723" mi="0" ci="3" mb="0" cb="0"/><line nr="7724" mi="0" ci="3" mb="0" cb="2"/><line nr="7725" mi="0" ci="3" mb="0" cb="0"/><line nr="7726" mi="2" ci="3" mb="1" cb="1"/><line nr="7728" mi="0" ci="2" mb="0" cb="0"/><line nr="7733" mi="0" ci="6" mb="0" cb="2"/><line nr="7734" mi="0" ci="6" mb="0" cb="2"/><line nr="7735" mi="0" ci="6" mb="0" cb="2"/><line nr="7736" mi="0" ci="2" mb="0" cb="0"/><line nr="7741" mi="0" ci="5" mb="0" cb="2"/><line nr="7742" mi="0" ci="2" mb="0" cb="0"/><line nr="7747" mi="0" ci="5" mb="0" cb="2"/><line nr="7748" mi="0" ci="2" mb="0" cb="0"/><line nr="7754" mi="0" ci="3" mb="0" cb="0"/><line nr="7755" mi="0" ci="3" mb="0" cb="2"/><line nr="7756" mi="0" ci="3" mb="0" cb="0"/><line nr="7757" mi="0" ci="5" mb="0" cb="2"/><line nr="7759" mi="0" ci="2" mb="0" cb="0"/><line nr="7764" mi="0" ci="5" mb="0" cb="2"/><line nr="7767" mi="0" ci="3" mb="0" cb="0"/><line nr="7768" mi="0" ci="7" mb="0" cb="2"/><line nr="7770" mi="0" ci="2" mb="0" cb="0"/><line nr="7775" mi="0" ci="5" mb="0" cb="2"/><line nr="7776" mi="0" ci="2" mb="0" cb="0"/><line nr="7781" mi="0" ci="6" mb="0" cb="2"/><line nr="7782" mi="0" ci="2" mb="0" cb="0"/><line nr="7787" mi="0" ci="6" mb="0" cb="2"/><line nr="7789" mi="0" ci="3" mb="0" cb="0"/><line nr="7790" mi="0" ci="6" mb="0" cb="2"/><line nr="7791" mi="2" ci="4" mb="1" cb="1"/><line nr="7792" mi="0" ci="2" mb="0" cb="0"/><line nr="7798" mi="0" ci="3" mb="0" cb="0"/><line nr="7799" mi="0" ci="6" mb="0" cb="2"/><line nr="7800" mi="0" ci="5" mb="1" cb="1"/><line nr="7801" mi="2" ci="0" mb="0" cb="0"/><line nr="7806" mi="0" ci="5" mb="0" cb="2"/><line nr="7807" mi="0" ci="2" mb="0" cb="0"/><line nr="7814" mi="0" ci="3" mb="0" cb="0"/><line nr="7815" mi="0" ci="7" mb="0" cb="2"/><line nr="7817" mi="0" ci="2" mb="0" cb="0"/><line nr="7822" mi="0" ci="5" mb="1" cb="1"/><line nr="7823" mi="6" ci="0" mb="2" cb="0"/><line nr="7824" mi="2" ci="0" mb="0" cb="0"/><line nr="7829" mi="0" ci="6" mb="0" cb="2"/><line nr="7830" mi="0" ci="2" mb="0" cb="0"/><line nr="7835" mi="0" ci="6" mb="0" cb="2"/><line nr="7836" mi="0" ci="2" mb="0" cb="0"/><line nr="7841" mi="0" ci="6" mb="0" cb="2"/><line nr="7842" mi="0" ci="2" mb="0" cb="0"/><line nr="7847" mi="6" ci="0" mb="2" cb="0"/><line nr="7848" mi="5" ci="0" mb="2" cb="0"/><line nr="7849" mi="2" ci="0" mb="0" cb="0"/><line nr="7854" mi="0" ci="5" mb="0" cb="2"/><line nr="7855" mi="0" ci="2" mb="0" cb="0"/><line nr="7860" mi="0" ci="5" mb="0" cb="2"/><line nr="7861" mi="0" ci="2" mb="0" cb="0"/><line nr="7867" mi="0" ci="3" mb="0" cb="0"/><line nr="7868" mi="0" ci="6" mb="0" cb="2"/><line nr="7869" mi="0" ci="6" mb="0" cb="2"/><line nr="7870" mi="2" ci="4" mb="1" cb="1"/><line nr="7871" mi="0" ci="2" mb="0" cb="0"/><line nr="7876" mi="0" ci="5" mb="0" cb="2"/><line nr="7877" mi="0" ci="6" mb="1" cb="1"/><line nr="7878" mi="2" ci="0" mb="0" cb="0"/><line nr="7884" mi="0" ci="3" mb="0" cb="0"/><line nr="7885" mi="0" ci="3" mb="0" cb="2"/><line nr="7886" mi="0" ci="3" mb="0" cb="0"/><line nr="7887" mi="0" ci="5" mb="0" cb="2"/><line nr="7889" mi="0" ci="2" mb="0" cb="0"/><line nr="7895" mi="0" ci="3" mb="0" cb="0"/><line nr="7896" mi="0" ci="6" mb="1" cb="1"/><line nr="7897" mi="0" ci="3" mb="0" cb="0"/><line nr="7898" mi="0" ci="6" mb="0" cb="2"/><line nr="7899" mi="0" ci="6" mb="0" cb="2"/><line nr="7900" mi="2" ci="3" mb="1" cb="1"/><line nr="7901" mi="2" ci="4" mb="1" cb="1"/><line nr="7902" mi="0" ci="2" mb="0" cb="0"/><line nr="7907" mi="0" ci="5" mb="0" cb="2"/><line nr="7908" mi="0" ci="2" mb="0" cb="0"/><line nr="7913" mi="6" ci="0" mb="2" cb="0"/><line nr="7914" mi="2" ci="0" mb="0" cb="0"/><line nr="7919" mi="0" ci="5" mb="0" cb="2"/><line nr="7920" mi="0" ci="2" mb="0" cb="0"/><line nr="7925" mi="0" ci="5" mb="0" cb="2"/><line nr="7926" mi="0" ci="2" mb="0" cb="0"/><line nr="7931" mi="5" ci="0" mb="2" cb="0"/><line nr="7932" mi="5" ci="0" mb="2" cb="0"/><line nr="7933" mi="6" ci="0" mb="2" cb="0"/><line nr="7934" mi="6" ci="0" mb="2" cb="0"/><line nr="7936" mi="3" ci="0" mb="0" cb="0"/><line nr="7937" mi="6" ci="0" mb="2" cb="0"/><line nr="7938" mi="6" ci="0" mb="2" cb="0"/><line nr="7939" mi="2" ci="0" mb="0" cb="0"/><line nr="7945" mi="0" ci="3" mb="0" cb="0"/><line nr="7946" mi="0" ci="6" mb="0" cb="2"/><line nr="7947" mi="0" ci="6" mb="0" cb="2"/><line nr="7948" mi="0" ci="5" mb="0" cb="2"/><line nr="7949" mi="2" ci="4" mb="1" cb="1"/><line nr="7950" mi="0" ci="2" mb="0" cb="0"/><line nr="7955" mi="0" ci="6" mb="0" cb="2"/><line nr="7956" mi="0" ci="2" mb="0" cb="0"/><line nr="7961" mi="0" ci="5" mb="0" cb="2"/><line nr="7962" mi="2" ci="3" mb="1" cb="1"/><line nr="7963" mi="2" ci="4" mb="1" cb="1"/><line nr="7964" mi="0" ci="2" mb="0" cb="0"/><line nr="7969" mi="5" ci="0" mb="2" cb="0"/><line nr="7970" mi="2" ci="0" mb="0" cb="0"/><line nr="7975" mi="5" ci="0" mb="2" cb="0"/><line nr="7976" mi="2" ci="0" mb="0" cb="0"/><line nr="7981" mi="0" ci="6" mb="0" cb="2"/><line nr="7982" mi="0" ci="2" mb="0" cb="0"/><line nr="7987" mi="5" ci="0" mb="2" cb="0"/><line nr="7988" mi="2" ci="0" mb="0" cb="0"/><line nr="7993" mi="5" ci="0" mb="2" cb="0"/><line nr="7994" mi="2" ci="0" mb="0" cb="0"/><line nr="8000" mi="0" ci="3" mb="0" cb="0"/><line nr="8001" mi="0" ci="3" mb="0" cb="2"/><line nr="8002" mi="0" ci="3" mb="0" cb="0"/><line nr="8003" mi="0" ci="5" mb="0" cb="2"/><line nr="8005" mi="0" ci="2" mb="0" cb="0"/><line nr="8010" mi="0" ci="6" mb="0" cb="2"/><line nr="8011" mi="0" ci="2" mb="0" cb="0"/><line nr="8016" mi="5" ci="0" mb="2" cb="0"/><line nr="8017" mi="2" ci="0" mb="0" cb="0"/><line nr="8022" mi="0" ci="6" mb="0" cb="2"/><line nr="8023" mi="0" ci="2" mb="0" cb="0"/><line nr="8028" mi="0" ci="6" mb="1" cb="1"/><line nr="8029" mi="5" ci="0" mb="2" cb="0"/><line nr="8030" mi="2" ci="0" mb="0" cb="0"/><line nr="8035" mi="0" ci="5" mb="0" cb="2"/><line nr="8036" mi="0" ci="2" mb="0" cb="0"/><line nr="8041" mi="0" ci="6" mb="0" cb="2"/><line nr="8042" mi="0" ci="2" mb="0" cb="0"/><line nr="8047" mi="2" ci="3" mb="1" cb="1"/><line nr="8048" mi="0" ci="6" mb="1" cb="1"/><line nr="8049" mi="2" ci="0" mb="0" cb="0"/><line nr="8054" mi="0" ci="5" mb="0" cb="2"/><line nr="8055" mi="0" ci="2" mb="0" cb="0"/><line nr="8060" mi="5" ci="0" mb="2" cb="0"/><line nr="8062" mi="3" ci="0" mb="0" cb="0"/><line nr="8063" mi="3" ci="0" mb="2" cb="0"/><line nr="8064" mi="3" ci="0" mb="0" cb="0"/><line nr="8065" mi="3" ci="0" mb="2" cb="0"/><line nr="8066" mi="3" ci="0" mb="0" cb="0"/><line nr="8067" mi="3" ci="0" mb="2" cb="0"/><line nr="8068" mi="3" ci="0" mb="0" cb="0"/><line nr="8069" mi="3" ci="0" mb="2" cb="0"/><line nr="8070" mi="3" ci="0" mb="0" cb="0"/><line nr="8071" mi="5" ci="0" mb="2" cb="0"/><line nr="8076" mi="2" ci="0" mb="0" cb="0"/><line nr="8082" mi="0" ci="3" mb="0" cb="0"/><line nr="8083" mi="0" ci="6" mb="0" cb="2"/><line nr="8084" mi="2" ci="3" mb="1" cb="1"/><line nr="8085" mi="0" ci="2" mb="0" cb="0"/><line nr="8090" mi="5" ci="0" mb="2" cb="0"/><line nr="8091" mi="2" ci="0" mb="0" cb="0"/><line nr="8097" mi="0" ci="3" mb="0" cb="0"/><line nr="8098" mi="0" ci="3" mb="0" cb="2"/><line nr="8099" mi="0" ci="3" mb="0" cb="0"/><line nr="8100" mi="0" ci="3" mb="0" cb="2"/><line nr="8101" mi="0" ci="3" mb="0" cb="0"/><line nr="8102" mi="0" ci="3" mb="0" cb="2"/><line nr="8103" mi="0" ci="3" mb="0" cb="0"/><line nr="8104" mi="0" ci="3" mb="0" cb="2"/><line nr="8105" mi="0" ci="3" mb="0" cb="0"/><line nr="8106" mi="0" ci="3" mb="0" cb="2"/><line nr="8107" mi="0" ci="3" mb="0" cb="0"/><line nr="8108" mi="0" ci="3" mb="0" cb="2"/><line nr="8109" mi="0" ci="3" mb="0" cb="0"/><line nr="8110" mi="0" ci="5" mb="0" cb="2"/><line nr="8117" mi="0" ci="2" mb="0" cb="0"/><line nr="8122" mi="0" ci="6" mb="0" cb="2"/><line nr="8123" mi="2" ci="3" mb="1" cb="1"/><line nr="8124" mi="2" ci="4" mb="1" cb="1"/><line nr="8125" mi="0" ci="2" mb="0" cb="0"/><line nr="8130" mi="5" ci="0" mb="2" cb="0"/><line nr="8131" mi="2" ci="0" mb="0" cb="0"/><line nr="8137" mi="3" ci="0" mb="0" cb="0"/><line nr="8138" mi="3" ci="0" mb="2" cb="0"/><line nr="8139" mi="3" ci="0" mb="0" cb="0"/><line nr="8140" mi="6" ci="0" mb="2" cb="0"/><line nr="8142" mi="2" ci="0" mb="0" cb="0"/><line nr="8147" mi="0" ci="5" mb="0" cb="2"/><line nr="8148" mi="0" ci="2" mb="0" cb="0"/><line nr="8153" mi="6" ci="0" mb="2" cb="0"/><line nr="8154" mi="5" ci="0" mb="2" cb="0"/><line nr="8155" mi="2" ci="0" mb="0" cb="0"/><line nr="8160" mi="0" ci="5" mb="0" cb="2"/><line nr="8161" mi="0" ci="2" mb="0" cb="0"/><line nr="8166" mi="0" ci="5" mb="1" cb="1"/><line nr="8167" mi="2" ci="0" mb="0" cb="0"/><line nr="8172" mi="0" ci="5" mb="0" cb="2"/><line nr="8173" mi="0" ci="2" mb="0" cb="0"/><line nr="8178" mi="6" ci="0" mb="2" cb="0"/><line nr="8181" mi="3" ci="0" mb="0" cb="0"/><line nr="8182" mi="7" ci="0" mb="2" cb="0"/><line nr="8184" mi="6" ci="0" mb="2" cb="0"/><line nr="8185" mi="2" ci="0" mb="0" cb="0"/><line nr="8191" mi="0" ci="3" mb="0" cb="0"/><line nr="8192" mi="0" ci="6" mb="0" cb="2"/><line nr="8193" mi="0" ci="5" mb="0" cb="2"/><line nr="8194" mi="0" ci="5" mb="1" cb="1"/><line nr="8195" mi="3" ci="0" mb="0" cb="0"/><line nr="8196" mi="6" ci="0" mb="2" cb="0"/><line nr="8197" mi="6" ci="0" mb="2" cb="0"/><line nr="8198" mi="3" ci="0" mb="0" cb="0"/><line nr="8199" mi="6" ci="0" mb="2" cb="0"/><line nr="8200" mi="5" ci="0" mb="2" cb="0"/><line nr="8201" mi="6" ci="0" mb="2" cb="0"/><line nr="8202" mi="2" ci="0" mb="0" cb="0"/><line nr="8208" mi="0" ci="3" mb="0" cb="0"/><line nr="8209" mi="0" ci="6" mb="1" cb="1"/><line nr="8210" mi="0" ci="5" mb="0" cb="2"/><line nr="8211" mi="0" ci="3" mb="0" cb="0"/><line nr="8212" mi="0" ci="6" mb="0" cb="2"/><line nr="8213" mi="0" ci="2" mb="0" cb="0"/><line nr="8218" mi="0" ci="5" mb="0" cb="2"/><line nr="8219" mi="0" ci="2" mb="0" cb="0"/><line nr="8224" mi="0" ci="5" mb="0" cb="2"/><line nr="8225" mi="0" ci="2" mb="0" cb="0"/><line nr="8230" mi="0" ci="6" mb="0" cb="2"/><line nr="8231" mi="0" ci="2" mb="0" cb="0"/><line nr="8236" mi="0" ci="5" mb="0" cb="2"/><line nr="8237" mi="0" ci="6" mb="0" cb="2"/><line nr="8238" mi="0" ci="2" mb="0" cb="0"/><line nr="8243" mi="0" ci="6" mb="0" cb="2"/><line nr="8245" mi="0" ci="3" mb="0" cb="0"/><line nr="8246" mi="0" ci="3" mb="0" cb="2"/><line nr="8247" mi="0" ci="3" mb="0" cb="0"/><line nr="8248" mi="0" ci="3" mb="0" cb="2"/><line nr="8249" mi="0" ci="3" mb="0" cb="0"/><line nr="8250" mi="0" ci="5" mb="0" cb="2"/><line nr="8253" mi="0" ci="2" mb="0" cb="0"/><line nr="8258" mi="0" ci="6" mb="1" cb="1"/><line nr="8259" mi="6" ci="0" mb="2" cb="0"/><line nr="8260" mi="5" ci="0" mb="2" cb="0"/><line nr="8261" mi="5" ci="0" mb="2" cb="0"/><line nr="8262" mi="2" ci="0" mb="0" cb="0"/><line nr="8268" mi="0" ci="3" mb="0" cb="0"/><line nr="8269" mi="0" ci="6" mb="0" cb="2"/><line nr="8270" mi="0" ci="6" mb="0" cb="2"/><line nr="8271" mi="0" ci="2" mb="0" cb="0"/><line nr="8276" mi="0" ci="6" mb="1" cb="1"/><line nr="8277" mi="5" ci="0" mb="2" cb="0"/><line nr="8278" mi="2" ci="0" mb="0" cb="0"/><line nr="8284" mi="0" ci="3" mb="0" cb="0"/><line nr="8285" mi="0" ci="3" mb="0" cb="2"/><line nr="8286" mi="0" ci="3" mb="0" cb="0"/><line nr="8287" mi="0" ci="5" mb="0" cb="2"/><line nr="8289" mi="0" ci="2" mb="0" cb="0"/><line nr="8294" mi="0" ci="5" mb="1" cb="1"/><line nr="8297" mi="3" ci="0" mb="0" cb="0"/><line nr="8298" mi="7" ci="0" mb="2" cb="0"/><line nr="8300" mi="2" ci="0" mb="0" cb="0"/><line nr="8305" mi="0" ci="6" mb="1" cb="1"/><line nr="8306" mi="5" ci="0" mb="2" cb="0"/><line nr="8307" mi="2" ci="0" mb="0" cb="0"/><line nr="8312" mi="0" ci="5" mb="1" cb="1"/><line nr="8313" mi="2" ci="0" mb="0" cb="0"/><line nr="8318" mi="2" ci="3" mb="1" cb="1"/><line nr="8319" mi="0" ci="5" mb="0" cb="2"/><line nr="8320" mi="0" ci="5" mb="0" cb="2"/><line nr="8321" mi="0" ci="2" mb="0" cb="0"/><line nr="8326" mi="0" ci="6" mb="1" cb="1"/><line nr="8327" mi="6" ci="0" mb="2" cb="0"/><line nr="8328" mi="2" ci="0" mb="0" cb="0"/><line nr="8333" mi="0" ci="6" mb="0" cb="2"/><line nr="8335" mi="0" ci="3" mb="0" cb="0"/><line nr="8336" mi="0" ci="6" mb="1" cb="1"/><line nr="8337" mi="0" ci="3" mb="0" cb="0"/><line nr="8338" mi="0" ci="7" mb="1" cb="1"/><line nr="8339" mi="2" ci="4" mb="1" cb="1"/><line nr="8340" mi="0" ci="2" mb="0" cb="0"/><line nr="8345" mi="0" ci="5" mb="0" cb="2"/><line nr="8346" mi="0" ci="2" mb="0" cb="0"/><line nr="8351" mi="0" ci="5" mb="0" cb="2"/><line nr="8352" mi="0" ci="2" mb="0" cb="0"/><line nr="8357" mi="0" ci="6" mb="1" cb="1"/><line nr="8358" mi="2" ci="0" mb="0" cb="0"/><line nr="8363" mi="0" ci="5" mb="0" cb="2"/><line nr="8364" mi="0" ci="2" mb="0" cb="0"/><line nr="8369" mi="5" ci="0" mb="2" cb="0"/><line nr="8370" mi="2" ci="0" mb="0" cb="0"/><line nr="8376" mi="0" ci="3" mb="0" cb="0"/><line nr="8377" mi="0" ci="3" mb="0" cb="2"/><line nr="8378" mi="0" ci="3" mb="0" cb="0"/><line nr="8379" mi="0" ci="5" mb="1" cb="1"/><line nr="8381" mi="0" ci="2" mb="0" cb="0"/><line nr="8386" mi="0" ci="5" mb="0" cb="2"/><line nr="8387" mi="0" ci="2" mb="0" cb="0"/><line nr="8392" mi="2" ci="3" mb="1" cb="1"/><line nr="8393" mi="0" ci="5" mb="0" cb="2"/><line nr="8395" mi="0" ci="3" mb="0" cb="0"/><line nr="8396" mi="0" ci="6" mb="1" cb="1"/><line nr="8397" mi="0" ci="5" mb="0" cb="2"/><line nr="8398" mi="0" ci="2" mb="0" cb="0"/><line nr="8403" mi="0" ci="5" mb="0" cb="2"/><line nr="8405" mi="0" ci="3" mb="0" cb="0"/><line nr="8406" mi="0" ci="6" mb="0" cb="2"/><line nr="8407" mi="0" ci="2" mb="0" cb="0"/><line nr="8412" mi="2" ci="3" mb="1" cb="1"/><line nr="8413" mi="0" ci="6" mb="0" cb="2"/><line nr="8414" mi="0" ci="2" mb="0" cb="0"/><line nr="8419" mi="0" ci="5" mb="1" cb="1"/><line nr="8420" mi="2" ci="0" mb="0" cb="0"/><line nr="8426" mi="0" ci="3" mb="0" cb="0"/><line nr="8427" mi="0" ci="3" mb="1" cb="1"/><line nr="8428" mi="0" ci="3" mb="0" cb="0"/><line nr="8429" mi="0" ci="3" mb="0" cb="2"/><line nr="8430" mi="0" ci="3" mb="0" cb="0"/><line nr="8431" mi="0" ci="5" mb="0" cb="2"/><line nr="8434" mi="0" ci="2" mb="0" cb="0"/><line nr="8439" mi="0" ci="5" mb="0" cb="2"/><line nr="8440" mi="0" ci="6" mb="0" cb="2"/><line nr="8441" mi="0" ci="6" mb="0" cb="2"/><line nr="8442" mi="0" ci="2" mb="0" cb="0"/><line nr="8447" mi="0" ci="6" mb="0" cb="2"/><line nr="8448" mi="2" ci="3" mb="1" cb="1"/><line nr="8449" mi="0" ci="2" mb="0" cb="0"/><line nr="8454" mi="0" ci="5" mb="0" cb="2"/><line nr="8455" mi="2" ci="4" mb="1" cb="1"/><line nr="8456" mi="2" ci="3" mb="1" cb="1"/><line nr="8457" mi="0" ci="2" mb="0" cb="0"/><line nr="8462" mi="0" ci="5" mb="0" cb="2"/><line nr="8463" mi="0" ci="6" mb="0" cb="2"/><line nr="8465" mi="0" ci="3" mb="0" cb="0"/><line nr="8466" mi="0" ci="6" mb="1" cb="1"/><line nr="8467" mi="0" ci="3" mb="0" cb="0"/><line nr="8468" mi="0" ci="3" mb="0" cb="2"/><line nr="8469" mi="0" ci="3" mb="0" cb="0"/><line nr="8470" mi="2" ci="4" mb="1" cb="1"/><line nr="8472" mi="0" ci="2" mb="0" cb="0"/><line nr="8477" mi="0" ci="5" mb="0" cb="2"/><line nr="8480" mi="0" ci="3" mb="0" cb="0"/><line nr="8481" mi="0" ci="7" mb="0" cb="2"/><line nr="8483" mi="0" ci="2" mb="0" cb="0"/><line nr="8488" mi="0" ci="5" mb="0" cb="2"/><line nr="8489" mi="0" ci="6" mb="0" cb="2"/><line nr="8490" mi="0" ci="2" mb="0" cb="0"/><line nr="8495" mi="0" ci="5" mb="0" cb="2"/><line nr="8496" mi="0" ci="6" mb="0" cb="2"/><line nr="8497" mi="0" ci="6" mb="0" cb="2"/><line nr="8498" mi="0" ci="2" mb="0" cb="0"/><line nr="8503" mi="0" ci="5" mb="0" cb="2"/><line nr="8504" mi="0" ci="2" mb="0" cb="0"/><line nr="8509" mi="0" ci="5" mb="0" cb="2"/><line nr="8510" mi="0" ci="2" mb="0" cb="0"/><line nr="8515" mi="2" ci="3" mb="1" cb="1"/><line nr="8516" mi="2" ci="4" mb="1" cb="1"/><line nr="8517" mi="0" ci="2" mb="0" cb="0"/><line nr="8522" mi="0" ci="5" mb="0" cb="2"/><line nr="8523" mi="0" ci="6" mb="0" cb="2"/><line nr="8524" mi="0" ci="2" mb="0" cb="0"/><line nr="8529" mi="0" ci="6" mb="0" cb="2"/><line nr="8530" mi="0" ci="2" mb="0" cb="0"/><line nr="8535" mi="0" ci="5" mb="0" cb="2"/><line nr="8538" mi="0" ci="3" mb="0" cb="0"/><line nr="8539" mi="0" ci="7" mb="1" cb="1"/><line nr="8541" mi="0" ci="2" mb="0" cb="0"/><line nr="8546" mi="0" ci="6" mb="0" cb="2"/><line nr="8547" mi="0" ci="5" mb="0" cb="2"/><line nr="8548" mi="0" ci="2" mb="0" cb="0"/><line nr="8553" mi="5" ci="0" mb="2" cb="0"/><line nr="8554" mi="2" ci="0" mb="0" cb="0"/><line nr="8559" mi="0" ci="5" mb="0" cb="2"/><line nr="8562" mi="0" ci="3" mb="0" cb="0"/><line nr="8563" mi="0" ci="7" mb="1" cb="1"/><line nr="8565" mi="0" ci="2" mb="0" cb="0"/><line nr="8570" mi="0" ci="5" mb="0" cb="2"/><line nr="8571" mi="0" ci="6" mb="0" cb="2"/><line nr="8572" mi="0" ci="2" mb="0" cb="0"/><line nr="8577" mi="0" ci="5" mb="0" cb="2"/><line nr="8578" mi="0" ci="2" mb="0" cb="0"/><line nr="8583" mi="0" ci="6" mb="0" cb="2"/><line nr="8584" mi="0" ci="2" mb="0" cb="0"/><line nr="8589" mi="0" ci="6" mb="0" cb="2"/><line nr="8591" mi="0" ci="3" mb="0" cb="0"/><line nr="8592" mi="0" ci="3" mb="0" cb="2"/><line nr="8593" mi="0" ci="3" mb="0" cb="0"/><line nr="8594" mi="0" ci="6" mb="0" cb="2"/><line nr="8596" mi="0" ci="2" mb="0" cb="0"/><line nr="8601" mi="0" ci="5" mb="0" cb="2"/><line nr="8602" mi="2" ci="4" mb="1" cb="1"/><line nr="8603" mi="0" ci="2" mb="0" cb="0"/><line nr="8608" mi="0" ci="2" mb="0" cb="0"/><line nr="8613" mi="0" ci="5" mb="0" cb="2"/><line nr="8614" mi="0" ci="2" mb="0" cb="0"/><line nr="8619" mi="0" ci="6" mb="1" cb="1"/><line nr="8621" mi="3" ci="0" mb="0" cb="0"/><line nr="8622" mi="6" ci="0" mb="2" cb="0"/><line nr="8623" mi="3" ci="0" mb="0" cb="0"/><line nr="8624" mi="3" ci="0" mb="2" cb="0"/><line nr="8625" mi="3" ci="0" mb="0" cb="0"/><line nr="8626" mi="6" ci="0" mb="2" cb="0"/><line nr="8628" mi="2" ci="0" mb="0" cb="0"/><line nr="8633" mi="0" ci="6" mb="0" cb="2"/><line nr="8634" mi="2" ci="3" mb="1" cb="1"/><line nr="8635" mi="0" ci="2" mb="0" cb="0"/><line nr="8640" mi="0" ci="5" mb="0" cb="2"/><line nr="8641" mi="0" ci="2" mb="0" cb="0"/><line nr="8646" mi="0" ci="6" mb="0" cb="2"/><line nr="8648" mi="0" ci="3" mb="0" cb="0"/><line nr="8649" mi="0" ci="3" mb="0" cb="2"/><line nr="8650" mi="0" ci="3" mb="0" cb="0"/><line nr="8651" mi="0" ci="3" mb="0" cb="2"/><line nr="8652" mi="0" ci="3" mb="0" cb="0"/><line nr="8653" mi="0" ci="3" mb="0" cb="2"/><line nr="8654" mi="0" ci="3" mb="0" cb="0"/><line nr="8655" mi="2" ci="3" mb="1" cb="1"/><line nr="8659" mi="0" ci="2" mb="0" cb="0"/><line nr="8664" mi="0" ci="6" mb="0" cb="2"/><line nr="8665" mi="2" ci="3" mb="1" cb="1"/><line nr="8666" mi="2" ci="4" mb="1" cb="1"/><line nr="8667" mi="0" ci="2" mb="0" cb="0"/><line nr="8672" mi="0" ci="5" mb="1" cb="1"/><line nr="8673" mi="2" ci="0" mb="0" cb="0"/><line nr="8678" mi="0" ci="5" mb="1" cb="1"/><line nr="8679" mi="2" ci="0" mb="0" cb="0"/><line nr="8684" mi="0" ci="6" mb="0" cb="2"/><line nr="8686" mi="0" ci="3" mb="0" cb="0"/><line nr="8687" mi="0" ci="6" mb="0" cb="2"/><line nr="8688" mi="0" ci="6" mb="0" cb="2"/><line nr="8689" mi="0" ci="2" mb="0" cb="0"/><line nr="8695" mi="0" ci="3" mb="0" cb="0"/><line nr="8696" mi="0" ci="3" mb="1" cb="1"/><line nr="8697" mi="0" ci="3" mb="0" cb="0"/><line nr="8698" mi="0" ci="5" mb="0" cb="2"/><line nr="8701" mi="0" ci="3" mb="0" cb="0"/><line nr="8702" mi="0" ci="7" mb="0" cb="2"/><line nr="8704" mi="0" ci="2" mb="0" cb="0"/><line nr="8709" mi="2" ci="3" mb="1" cb="1"/><line nr="8710" mi="0" ci="2" mb="0" cb="0"/><line nr="8715" mi="0" ci="6" mb="0" cb="2"/><line nr="8716" mi="0" ci="5" mb="0" cb="2"/><line nr="8718" mi="0" ci="3" mb="0" cb="0"/><line nr="8719" mi="0" ci="3" mb="0" cb="2"/><line nr="8720" mi="0" ci="3" mb="0" cb="0"/><line nr="8721" mi="0" ci="3" mb="0" cb="2"/><line nr="8722" mi="0" ci="3" mb="0" cb="0"/><line nr="8723" mi="2" ci="3" mb="1" cb="1"/><line nr="8726" mi="0" ci="2" mb="0" cb="0"/><line nr="8731" mi="0" ci="6" mb="0" cb="2"/><line nr="8733" mi="0" ci="3" mb="0" cb="0"/><line nr="8734" mi="0" ci="6" mb="0" cb="2"/><line nr="8735" mi="2" ci="4" mb="1" cb="1"/><line nr="8736" mi="0" ci="2" mb="0" cb="0"/><line nr="8741" mi="0" ci="6" mb="0" cb="2"/><line nr="8743" mi="0" ci="3" mb="0" cb="0"/><line nr="8744" mi="0" ci="6" mb="1" cb="1"/><line nr="8745" mi="2" ci="3" mb="1" cb="1"/><line nr="8746" mi="0" ci="3" mb="0" cb="0"/><line nr="8747" mi="3" ci="3" mb="1" cb="1"/><line nr="8748" mi="0" ci="2" mb="0" cb="0"/><line nr="8753" mi="0" ci="5" mb="1" cb="1"/><line nr="8754" mi="2" ci="0" mb="0" cb="0"/><line nr="8759" mi="0" ci="6" mb="0" cb="2"/><line nr="8760" mi="0" ci="2" mb="0" cb="0"/><line nr="8765" mi="5" ci="0" mb="2" cb="0"/><line nr="8766" mi="2" ci="0" mb="0" cb="0"/><line nr="8771" mi="0" ci="6" mb="0" cb="2"/><line nr="8773" mi="0" ci="3" mb="0" cb="0"/><line nr="8774" mi="0" ci="3" mb="0" cb="2"/><line nr="8775" mi="0" ci="3" mb="0" cb="0"/><line nr="8776" mi="0" ci="5" mb="1" cb="1"/><line nr="8778" mi="0" ci="2" mb="0" cb="0"/><line nr="8783" mi="0" ci="6" mb="0" cb="2"/><line nr="8784" mi="0" ci="2" mb="0" cb="0"/><line nr="8789" mi="0" ci="5" mb="0" cb="2"/><line nr="8790" mi="0" ci="2" mb="0" cb="0"/><line nr="8795" mi="2" ci="3" mb="1" cb="1"/><line nr="8796" mi="0" ci="5" mb="0" cb="2"/><line nr="8797" mi="0" ci="2" mb="0" cb="0"/><line nr="8802" mi="0" ci="5" mb="0" cb="2"/><line nr="8803" mi="0" ci="2" mb="0" cb="0"/><line nr="8810" mi="0" ci="3" mb="0" cb="0"/><line nr="8811" mi="0" ci="7" mb="0" cb="2"/><line nr="8813" mi="0" ci="2" mb="0" cb="0"/><line nr="8818" mi="0" ci="5" mb="0" cb="2"/><line nr="8819" mi="0" ci="2" mb="0" cb="0"/><line nr="8824" mi="0" ci="2" mb="0" cb="0"/><line nr="8829" mi="0" ci="6" mb="1" cb="1"/><line nr="8830" mi="5" ci="0" mb="2" cb="0"/><line nr="8831" mi="2" ci="0" mb="0" cb="0"/><line nr="8837" mi="0" ci="3" mb="0" cb="0"/><line nr="8838" mi="0" ci="3" mb="0" cb="2"/><line nr="8839" mi="0" ci="3" mb="0" cb="0"/><line nr="8840" mi="0" ci="3" mb="0" cb="2"/><line nr="8841" mi="0" ci="3" mb="0" cb="0"/><line nr="8842" mi="0" ci="3" mb="0" cb="2"/><line nr="8843" mi="0" ci="3" mb="0" cb="0"/><line nr="8844" mi="0" ci="3" mb="0" cb="2"/><line nr="8845" mi="0" ci="3" mb="0" cb="0"/><line nr="8846" mi="0" ci="3" mb="0" cb="2"/><line nr="8847" mi="0" ci="3" mb="0" cb="0"/><line nr="8848" mi="0" ci="3" mb="0" cb="2"/><line nr="8849" mi="0" ci="3" mb="0" cb="0"/><line nr="8850" mi="0" ci="3" mb="0" cb="2"/><line nr="8851" mi="0" ci="3" mb="0" cb="0"/><line nr="8852" mi="0" ci="5" mb="0" cb="2"/><line nr="8860" mi="0" ci="2" mb="0" cb="0"/><line nr="8865" mi="2" ci="3" mb="1" cb="1"/><line nr="8866" mi="0" ci="5" mb="0" cb="2"/><line nr="8867" mi="0" ci="2" mb="0" cb="0"/><line nr="8872" mi="0" ci="5" mb="0" cb="2"/><line nr="8873" mi="0" ci="2" mb="0" cb="0"/><line nr="8878" mi="0" ci="2" mb="0" cb="0"/><line nr="8883" mi="0" ci="3" mb="0" cb="0"/><line nr="8884" mi="0" ci="9" mb="0" cb="2"/><line nr="8885" mi="0" ci="8" mb="0" cb="2"/><line nr="8886" mi="0" ci="3" mb="0" cb="0"/><line nr="8887" mi="0" ci="8" mb="1" cb="3"/><line nr="8888" mi="2" ci="4" mb="1" cb="1"/><line nr="8889" mi="2" ci="4" mb="1" cb="1"/><line nr="8890" mi="0" ci="2" mb="0" cb="0"/><line nr="8895" mi="6" ci="0" mb="2" cb="0"/><line nr="8896" mi="5" ci="0" mb="2" cb="0"/><line nr="8897" mi="2" ci="0" mb="0" cb="0"/><line nr="8902" mi="2" ci="3" mb="1" cb="1"/><line nr="8903" mi="0" ci="2" mb="0" cb="0"/><line nr="8908" mi="0" ci="6" mb="1" cb="1"/><line nr="8909" mi="5" ci="0" mb="2" cb="0"/><line nr="8912" mi="3" ci="0" mb="0" cb="0"/><line nr="8913" mi="7" ci="0" mb="2" cb="0"/><line nr="8915" mi="2" ci="0" mb="0" cb="0"/><line nr="8920" mi="0" ci="3" mb="0" cb="0"/><line nr="8921" mi="0" ci="9" mb="0" cb="2"/><line nr="8922" mi="0" ci="8" mb="0" cb="2"/><line nr="8923" mi="0" ci="3" mb="0" cb="0"/><line nr="8924" mi="3" ci="5" mb="3" cb="1"/><line nr="8925" mi="6" ci="0" mb="2" cb="0"/><line nr="8926" mi="6" ci="0" mb="2" cb="0"/><line nr="8927" mi="6" ci="0" mb="2" cb="0"/><line nr="8928" mi="2" ci="0" mb="0" cb="0"/><line nr="8933" mi="0" ci="5" mb="0" cb="2"/><line nr="8936" mi="0" ci="3" mb="0" cb="0"/><line nr="8937" mi="0" ci="7" mb="0" cb="2"/><line nr="8939" mi="0" ci="2" mb="0" cb="0"/><line nr="8944" mi="2" ci="3" mb="1" cb="1"/><line nr="8945" mi="0" ci="5" mb="0" cb="2"/><line nr="8946" mi="0" ci="5" mb="0" cb="2"/><line nr="8947" mi="0" ci="2" mb="0" cb="0"/><line nr="8952" mi="0" ci="5" mb="0" cb="2"/><line nr="8953" mi="0" ci="2" mb="0" cb="0"/><line nr="8958" mi="2" ci="3" mb="1" cb="1"/><line nr="8961" mi="0" ci="3" mb="0" cb="0"/><line nr="8962" mi="0" ci="7" mb="0" cb="2"/><line nr="8964" mi="0" ci="2" mb="0" cb="0"/><line nr="8970" mi="0" ci="3" mb="0" cb="0"/><line nr="8971" mi="0" ci="6" mb="0" cb="2"/><line nr="8972" mi="2" ci="3" mb="1" cb="1"/><line nr="8973" mi="0" ci="5" mb="0" cb="2"/><line nr="8974" mi="2" ci="3" mb="1" cb="1"/><line nr="8975" mi="2" ci="3" mb="1" cb="1"/><line nr="8977" mi="0" ci="3" mb="0" cb="0"/><line nr="8978" mi="0" ci="7" mb="1" cb="1"/><line nr="8980" mi="0" ci="3" mb="0" cb="0"/><line nr="8981" mi="0" ci="6" mb="1" cb="1"/><line nr="8982" mi="0" ci="3" mb="0" cb="0"/><line nr="8983" mi="0" ci="3" mb="1" cb="1"/><line nr="8984" mi="3" ci="0" mb="0" cb="0"/><line nr="8985" mi="6" ci="0" mb="2" cb="0"/><line nr="8987" mi="0" ci="2" mb="0" cb="0"/><line nr="8992" mi="5" ci="0" mb="2" cb="0"/><line nr="8993" mi="2" ci="0" mb="0" cb="0"/><line nr="8998" mi="0" ci="5" mb="0" cb="2"/><line nr="9001" mi="0" ci="3" mb="0" cb="0"/><line nr="9002" mi="0" ci="7" mb="0" cb="2"/><line nr="9004" mi="0" ci="2" mb="0" cb="0"/><line nr="9009" mi="0" ci="5" mb="0" cb="2"/><line nr="9010" mi="0" ci="2" mb="0" cb="0"/><line nr="9015" mi="0" ci="5" mb="1" cb="1"/><line nr="9016" mi="2" ci="0" mb="0" cb="0"/><line nr="9022" mi="0" ci="3" mb="0" cb="0"/><line nr="9023" mi="0" ci="3" mb="1" cb="1"/><line nr="9024" mi="0" ci="3" mb="0" cb="0"/><line nr="9025" mi="5" ci="0" mb="2" cb="0"/><line nr="9027" mi="2" ci="0" mb="0" cb="0"/><line nr="9032" mi="0" ci="6" mb="0" cb="2"/><line nr="9033" mi="0" ci="5" mb="0" cb="2"/><line nr="9034" mi="0" ci="2" mb="0" cb="0"/><line nr="9039" mi="5" ci="0" mb="2" cb="0"/><line nr="9042" mi="3" ci="0" mb="0" cb="0"/><line nr="9043" mi="7" ci="0" mb="2" cb="0"/><line nr="9045" mi="2" ci="0" mb="0" cb="0"/><line nr="9050" mi="0" ci="5" mb="0" cb="2"/><line nr="9053" mi="0" ci="3" mb="0" cb="0"/><line nr="9054" mi="0" ci="7" mb="0" cb="2"/><line nr="9056" mi="0" ci="6" mb="0" cb="2"/><line nr="9057" mi="0" ci="5" mb="0" cb="2"/><line nr="9058" mi="0" ci="2" mb="0" cb="0"/><line nr="9063" mi="0" ci="6" mb="0" cb="2"/><line nr="9065" mi="0" ci="3" mb="0" cb="0"/><line nr="9066" mi="3" ci="3" mb="1" cb="1"/><line nr="9067" mi="0" ci="3" mb="0" cb="0"/><line nr="9068" mi="0" ci="7" mb="1" cb="1"/><line nr="9069" mi="2" ci="4" mb="1" cb="1"/><line nr="9070" mi="0" ci="2" mb="0" cb="0"/><line nr="9075" mi="0" ci="5" mb="0" cb="2"/><line nr="9076" mi="0" ci="6" mb="0" cb="2"/><line nr="9077" mi="2" ci="3" mb="1" cb="1"/><line nr="9078" mi="0" ci="2" mb="0" cb="0"/><line nr="9083" mi="0" ci="5" mb="0" cb="2"/><line nr="9084" mi="0" ci="2" mb="0" cb="0"/><line nr="9089" mi="0" ci="5" mb="0" cb="2"/><line nr="9090" mi="0" ci="2" mb="0" cb="0"/><line nr="9095" mi="0" ci="6" mb="0" cb="2"/><line nr="9096" mi="2" ci="3" mb="1" cb="1"/><line nr="9097" mi="0" ci="2" mb="0" cb="0"/><line nr="9102" mi="0" ci="6" mb="1" cb="1"/><line nr="9103" mi="5" ci="0" mb="2" cb="0"/><line nr="9104" mi="2" ci="0" mb="0" cb="0"/><line nr="9109" mi="6" ci="0" mb="2" cb="0"/><line nr="9110" mi="5" ci="0" mb="2" cb="0"/><line nr="9111" mi="2" ci="0" mb="0" cb="0"/><line nr="9116" mi="0" ci="6" mb="1" cb="1"/><line nr="9117" mi="2" ci="0" mb="0" cb="0"/><line nr="9122" mi="0" ci="6" mb="0" cb="2"/><line nr="9123" mi="2" ci="3" mb="1" cb="1"/><line nr="9125" mi="0" ci="3" mb="0" cb="0"/><line nr="9126" mi="0" ci="3" mb="0" cb="2"/><line nr="9127" mi="0" ci="3" mb="0" cb="0"/><line nr="9128" mi="0" ci="5" mb="0" cb="2"/><line nr="9130" mi="0" ci="2" mb="0" cb="0"/><line nr="9135" mi="0" ci="6" mb="1" cb="1"/><line nr="9136" mi="5" ci="0" mb="2" cb="0"/><line nr="9138" mi="3" ci="0" mb="0" cb="0"/><line nr="9139" mi="6" ci="0" mb="2" cb="0"/><line nr="9140" mi="6" ci="0" mb="2" cb="0"/><line nr="9141" mi="2" ci="0" mb="0" cb="0"/><line nr="9147" mi="0" ci="3" mb="0" cb="0"/><line nr="9148" mi="0" ci="3" mb="0" cb="2"/><line nr="9149" mi="0" ci="3" mb="0" cb="0"/><line nr="9150" mi="0" ci="5" mb="0" cb="2"/><line nr="9152" mi="0" ci="2" mb="0" cb="0"/><line nr="9157" mi="0" ci="6" mb="1" cb="1"/><line nr="9158" mi="5" ci="0" mb="2" cb="0"/><line nr="9159" mi="2" ci="0" mb="0" cb="0"/><line nr="9164" mi="0" ci="5" mb="0" cb="2"/><line nr="9165" mi="0" ci="2" mb="0" cb="0"/><line nr="9170" mi="0" ci="5" mb="0" cb="2"/><line nr="9171" mi="0" ci="2" mb="0" cb="0"/><line nr="9176" mi="0" ci="6" mb="0" cb="2"/><line nr="9177" mi="2" ci="4" mb="1" cb="1"/><line nr="9178" mi="2" ci="3" mb="1" cb="1"/><line nr="9179" mi="2" ci="3" mb="1" cb="1"/><line nr="9182" mi="0" ci="3" mb="0" cb="0"/><line nr="9183" mi="0" ci="7" mb="1" cb="1"/><line nr="9185" mi="2" ci="3" mb="1" cb="1"/><line nr="9186" mi="2" ci="4" mb="1" cb="1"/><line nr="9187" mi="2" ci="3" mb="1" cb="1"/><line nr="9188" mi="0" ci="2" mb="0" cb="0"/><line nr="9193" mi="0" ci="5" mb="0" cb="2"/><line nr="9194" mi="0" ci="2" mb="0" cb="0"/><line nr="9199" mi="0" ci="6" mb="0" cb="2"/><line nr="9200" mi="0" ci="2" mb="0" cb="0"/><line nr="9206" mi="0" ci="3" mb="0" cb="0"/><line nr="9207" mi="0" ci="3" mb="0" cb="2"/><line nr="9208" mi="0" ci="3" mb="0" cb="0"/><line nr="9209" mi="0" ci="5" mb="0" cb="2"/><line nr="9211" mi="0" ci="2" mb="0" cb="0"/><line nr="9216" mi="0" ci="6" mb="0" cb="2"/><line nr="9217" mi="0" ci="2" mb="0" cb="0"/><line nr="9222" mi="0" ci="5" mb="0" cb="2"/><line nr="9225" mi="0" ci="3" mb="0" cb="0"/><line nr="9226" mi="0" ci="7" mb="0" cb="2"/><line nr="9228" mi="0" ci="2" mb="0" cb="0"/><line nr="9233" mi="0" ci="5" mb="0" cb="2"/><line nr="9234" mi="0" ci="2" mb="0" cb="0"/><line nr="9239" mi="0" ci="6" mb="0" cb="2"/><line nr="9240" mi="0" ci="2" mb="0" cb="0"/><line nr="9245" mi="0" ci="6" mb="1" cb="1"/><line nr="9246" mi="2" ci="0" mb="0" cb="0"/><line nr="9251" mi="0" ci="5" mb="0" cb="2"/><line nr="9253" mi="0" ci="3" mb="0" cb="0"/><line nr="9254" mi="0" ci="6" mb="0" cb="2"/><line nr="9255" mi="0" ci="2" mb="0" cb="0"/><line nr="9260" mi="0" ci="5" mb="0" cb="2"/><line nr="9261" mi="0" ci="2" mb="0" cb="0"/><line nr="9267" mi="0" ci="3" mb="0" cb="0"/><line nr="9268" mi="0" ci="3" mb="1" cb="1"/><line nr="9269" mi="0" ci="3" mb="0" cb="0"/><line nr="9270" mi="0" ci="5" mb="0" cb="2"/><line nr="9272" mi="2" ci="3" mb="1" cb="1"/><line nr="9273" mi="0" ci="2" mb="0" cb="0"/><line nr="9278" mi="0" ci="5" mb="0" cb="2"/><line nr="9280" mi="0" ci="3" mb="0" cb="0"/><line nr="9281" mi="0" ci="6" mb="0" cb="2"/><line nr="9282" mi="0" ci="2" mb="0" cb="0"/><line nr="9289" mi="0" ci="3" mb="0" cb="0"/><line nr="9290" mi="0" ci="7" mb="0" cb="2"/><line nr="9292" mi="0" ci="3" mb="0" cb="0"/><line nr="9293" mi="0" ci="6" mb="1" cb="1"/><line nr="9294" mi="0" ci="2" mb="0" cb="0"/><line nr="9299" mi="0" ci="6" mb="1" cb="1"/><line nr="9300" mi="5" ci="0" mb="2" cb="0"/><line nr="9301" mi="2" ci="0" mb="0" cb="0"/><line nr="9307" mi="0" ci="3" mb="0" cb="0"/><line nr="9308" mi="0" ci="3" mb="0" cb="2"/><line nr="9309" mi="0" ci="3" mb="0" cb="0"/><line nr="9310" mi="0" ci="3" mb="0" cb="2"/><line nr="9311" mi="0" ci="3" mb="0" cb="0"/><line nr="9312" mi="0" ci="3" mb="0" cb="2"/><line nr="9313" mi="0" ci="3" mb="0" cb="0"/><line nr="9314" mi="0" ci="5" mb="0" cb="2"/><line nr="9318" mi="0" ci="2" mb="0" cb="0"/><line nr="9323" mi="0" ci="5" mb="1" cb="1"/><line nr="9324" mi="2" ci="0" mb="0" cb="0"/><line nr="9329" mi="0" ci="5" mb="0" cb="2"/><line nr="9330" mi="0" ci="2" mb="0" cb="0"/><line nr="9335" mi="0" ci="5" mb="0" cb="2"/><line nr="9336" mi="2" ci="3" mb="1" cb="1"/><line nr="9339" mi="0" ci="3" mb="0" cb="0"/><line nr="9340" mi="0" ci="7" mb="0" cb="2"/><line nr="9342" mi="0" ci="3" mb="0" cb="0"/><line nr="9343" mi="0" ci="4" mb="0" cb="2"/><line nr="9344" mi="0" ci="3" mb="0" cb="0"/><line nr="9345" mi="0" ci="4" mb="0" cb="2"/><line nr="9346" mi="0" ci="3" mb="0" cb="0"/><line nr="9347" mi="0" ci="6" mb="0" cb="2"/><line nr="9350" mi="0" ci="2" mb="0" cb="0"/><line nr="9355" mi="0" ci="6" mb="0" cb="2"/><line nr="9357" mi="0" ci="3" mb="0" cb="0"/><line nr="9358" mi="0" ci="6" mb="1" cb="1"/><line nr="9359" mi="2" ci="3" mb="1" cb="1"/><line nr="9360" mi="0" ci="3" mb="0" cb="0"/><line nr="9361" mi="0" ci="3" mb="1" cb="1"/><line nr="9362" mi="3" ci="0" mb="0" cb="0"/><line nr="9363" mi="5" ci="0" mb="2" cb="0"/><line nr="9365" mi="0" ci="2" mb="0" cb="0"/><line nr="9371" mi="0" ci="3" mb="0" cb="0"/><line nr="9372" mi="0" ci="6" mb="0" cb="2"/><line nr="9373" mi="0" ci="5" mb="0" cb="2"/><line nr="9374" mi="0" ci="6" mb="0" cb="2"/><line nr="9375" mi="0" ci="2" mb="0" cb="0"/><line nr="9380" mi="0" ci="5" mb="0" cb="2"/><line nr="9381" mi="2" ci="3" mb="1" cb="1"/><line nr="9384" mi="0" ci="3" mb="0" cb="0"/><line nr="9385" mi="0" ci="7" mb="1" cb="1"/><line nr="9387" mi="0" ci="6" mb="1" cb="1"/><line nr="9388" mi="2" ci="0" mb="0" cb="0"/><line nr="9393" mi="0" ci="6" mb="0" cb="2"/><line nr="9394" mi="2" ci="4" mb="1" cb="1"/><line nr="9395" mi="0" ci="2" mb="0" cb="0"/><line nr="9400" mi="0" ci="6" mb="0" cb="2"/><line nr="9401" mi="0" ci="2" mb="0" cb="0"/><line nr="9406" mi="0" ci="5" mb="0" cb="2"/><line nr="9407" mi="0" ci="2" mb="0" cb="0"/><line nr="9412" mi="0" ci="5" mb="1" cb="1"/><line nr="9413" mi="2" ci="0" mb="0" cb="0"/><line nr="9418" mi="0" ci="5" mb="1" cb="1"/><line nr="9419" mi="2" ci="0" mb="0" cb="0"/><line nr="9424" mi="0" ci="5" mb="1" cb="1"/><line nr="9425" mi="2" ci="0" mb="0" cb="0"/><line nr="9430" mi="0" ci="6" mb="1" cb="1"/><line nr="9431" mi="5" ci="0" mb="2" cb="0"/><line nr="9432" mi="2" ci="0" mb="0" cb="0"/><line nr="9437" mi="0" ci="5" mb="0" cb="2"/><line nr="9438" mi="0" ci="2" mb="0" cb="0"/><line nr="9443" mi="0" ci="5" mb="1" cb="1"/><line nr="9444" mi="2" ci="0" mb="0" cb="0"/><line nr="9449" mi="0" ci="5" mb="1" cb="1"/><line nr="9450" mi="2" ci="0" mb="0" cb="0"/><line nr="9455" mi="0" ci="6" mb="1" cb="1"/><line nr="9456" mi="6" ci="0" mb="2" cb="0"/><line nr="9457" mi="5" ci="0" mb="2" cb="0"/><line nr="9458" mi="6" ci="0" mb="2" cb="0"/><line nr="9459" mi="5" ci="0" mb="2" cb="0"/><line nr="9460" mi="2" ci="0" mb="0" cb="0"/><line nr="9465" mi="0" ci="5" mb="1" cb="1"/><line nr="9466" mi="2" ci="0" mb="0" cb="0"/><line nr="9471" mi="2" ci="3" mb="1" cb="1"/><line nr="9473" mi="0" ci="3" mb="0" cb="0"/><line nr="9474" mi="0" ci="3" mb="1" cb="1"/><line nr="9475" mi="0" ci="3" mb="0" cb="0"/><line nr="9476" mi="0" ci="3" mb="1" cb="1"/><line nr="9477" mi="0" ci="3" mb="0" cb="0"/><line nr="9478" mi="0" ci="3" mb="1" cb="1"/><line nr="9479" mi="0" ci="3" mb="0" cb="0"/><line nr="9480" mi="0" ci="3" mb="1" cb="1"/><line nr="9481" mi="0" ci="3" mb="0" cb="0"/><line nr="9482" mi="0" ci="3" mb="1" cb="1"/><line nr="9483" mi="0" ci="3" mb="0" cb="0"/><line nr="9484" mi="0" ci="5" mb="0" cb="2"/><line nr="9490" mi="0" ci="2" mb="0" cb="0"/><line nr="9495" mi="0" ci="6" mb="1" cb="1"/><line nr="9496" mi="5" ci="0" mb="2" cb="0"/><line nr="9497" mi="2" ci="0" mb="0" cb="0"/><line nr="9502" mi="0" ci="5" mb="0" cb="2"/><line nr="9503" mi="0" ci="2" mb="0" cb="0"/><line nr="9508" mi="0" ci="5" mb="1" cb="1"/><line nr="9509" mi="2" ci="0" mb="0" cb="0"/><line nr="9514" mi="0" ci="5" mb="0" cb="2"/><line nr="9515" mi="0" ci="2" mb="0" cb="0"/><line nr="9520" mi="0" ci="6" mb="0" cb="2"/><line nr="9521" mi="0" ci="2" mb="0" cb="0"/><line nr="9526" mi="0" ci="6" mb="0" cb="2"/><line nr="9527" mi="0" ci="2" mb="0" cb="0"/><line nr="9532" mi="0" ci="6" mb="0" cb="2"/><line nr="9533" mi="2" ci="3" mb="1" cb="1"/><line nr="9534" mi="2" ci="4" mb="1" cb="1"/><line nr="9535" mi="0" ci="2" mb="0" cb="0"/><line nr="9541" mi="0" ci="3" mb="0" cb="0"/><line nr="9542" mi="0" ci="3" mb="0" cb="2"/><line nr="9543" mi="0" ci="3" mb="0" cb="0"/><line nr="9544" mi="0" ci="5" mb="0" cb="2"/><line nr="9546" mi="2" ci="3" mb="1" cb="1"/><line nr="9547" mi="0" ci="2" mb="0" cb="0"/><line nr="9552" mi="0" ci="5" mb="0" cb="2"/><line nr="9553" mi="0" ci="2" mb="0" cb="0"/><line nr="9558" mi="0" ci="5" mb="1" cb="1"/><line nr="9559" mi="2" ci="0" mb="0" cb="0"/><line nr="9565" mi="0" ci="3" mb="0" cb="0"/><line nr="9566" mi="0" ci="3" mb="1" cb="1"/><line nr="9567" mi="0" ci="3" mb="0" cb="0"/><line nr="9568" mi="0" ci="5" mb="0" cb="2"/><line nr="9570" mi="0" ci="2" mb="0" cb="0"/><line nr="9575" mi="0" ci="5" mb="1" cb="1"/><line nr="9576" mi="2" ci="0" mb="0" cb="0"/><line nr="9581" mi="6" ci="0" mb="2" cb="0"/><line nr="9582" mi="5" ci="0" mb="2" cb="0"/><line nr="9583" mi="2" ci="0" mb="0" cb="0"/><line nr="9588" mi="0" ci="6" mb="0" cb="2"/><line nr="9590" mi="0" ci="3" mb="0" cb="0"/><line nr="9591" mi="0" ci="6" mb="0" cb="2"/><line nr="9592" mi="2" ci="4" mb="1" cb="1"/><line nr="9593" mi="0" ci="2" mb="0" cb="0"/><line nr="9599" mi="0" ci="3" mb="0" cb="0"/><line nr="9600" mi="0" ci="3" mb="0" cb="2"/><line nr="9601" mi="0" ci="3" mb="0" cb="0"/><line nr="9602" mi="0" ci="6" mb="1" cb="1"/><line nr="9604" mi="0" ci="2" mb="0" cb="0"/><line nr="9609" mi="0" ci="5" mb="0" cb="2"/><line nr="9610" mi="0" ci="2" mb="0" cb="0"/><line nr="9616" mi="0" ci="3" mb="0" cb="0"/><line nr="9617" mi="0" ci="3" mb="1" cb="1"/><line nr="9618" mi="0" ci="3" mb="0" cb="0"/><line nr="9619" mi="0" ci="3" mb="1" cb="1"/><line nr="9620" mi="0" ci="3" mb="0" cb="0"/><line nr="9621" mi="0" ci="3" mb="0" cb="2"/><line nr="9622" mi="0" ci="3" mb="0" cb="0"/><line nr="9623" mi="0" ci="5" mb="0" cb="2"/><line nr="9627" mi="0" ci="2" mb="0" cb="0"/><line nr="9632" mi="0" ci="6" mb="0" cb="2"/><line nr="9635" mi="0" ci="3" mb="0" cb="0"/><line nr="9636" mi="0" ci="7" mb="0" cb="2"/><line nr="9638" mi="2" ci="4" mb="1" cb="1"/><line nr="9639" mi="0" ci="2" mb="0" cb="0"/><line nr="9644" mi="0" ci="6" mb="1" cb="1"/><line nr="9645" mi="2" ci="0" mb="0" cb="0"/><line nr="9650" mi="0" ci="6" mb="1" cb="1"/><line nr="9651" mi="2" ci="0" mb="0" cb="0"/><line nr="9656" mi="0" ci="6" mb="0" cb="2"/><line nr="9658" mi="0" ci="3" mb="0" cb="0"/><line nr="9659" mi="0" ci="6" mb="1" cb="1"/><line nr="9660" mi="6" ci="0" mb="2" cb="0"/><line nr="9661" mi="2" ci="0" mb="0" cb="0"/><line nr="9666" mi="0" ci="6" mb="0" cb="2"/><line nr="9667" mi="0" ci="2" mb="0" cb="0"/><line nr="9673" mi="0" ci="3" mb="0" cb="0"/><line nr="9674" mi="0" ci="3" mb="0" cb="2"/><line nr="9675" mi="0" ci="3" mb="0" cb="0"/><line nr="9676" mi="0" ci="3" mb="1" cb="1"/><line nr="9677" mi="0" ci="3" mb="0" cb="0"/><line nr="9678" mi="0" ci="5" mb="1" cb="1"/><line nr="9681" mi="2" ci="3" mb="1" cb="1"/><line nr="9682" mi="0" ci="2" mb="0" cb="0"/><line nr="9687" mi="0" ci="6" mb="0" cb="2"/><line nr="9688" mi="2" ci="3" mb="1" cb="1"/><line nr="9689" mi="0" ci="2" mb="0" cb="0"/><line nr="9694" mi="5" ci="0" mb="2" cb="0"/><line nr="9695" mi="2" ci="0" mb="0" cb="0"/><line nr="9700" mi="0" ci="6" mb="0" cb="2"/><line nr="9701" mi="2" ci="3" mb="1" cb="1"/><line nr="9704" mi="0" ci="3" mb="0" cb="0"/><line nr="9705" mi="0" ci="7" mb="0" cb="2"/><line nr="9707" mi="0" ci="2" mb="0" cb="0"/><line nr="9712" mi="0" ci="6" mb="0" cb="2"/><line nr="9714" mi="0" ci="3" mb="0" cb="0"/><line nr="9715" mi="0" ci="6" mb="0" cb="2"/><line nr="9716" mi="2" ci="4" mb="1" cb="1"/><line nr="9717" mi="0" ci="2" mb="0" cb="0"/><line nr="9722" mi="0" ci="5" mb="0" cb="2"/><line nr="9725" mi="0" ci="3" mb="0" cb="0"/><line nr="9726" mi="0" ci="7" mb="0" cb="2"/><line nr="9728" mi="0" ci="2" mb="0" cb="0"/><line nr="9733" mi="0" ci="6" mb="0" cb="2"/><line nr="9734" mi="0" ci="2" mb="0" cb="0"/><line nr="9739" mi="0" ci="6" mb="0" cb="2"/><line nr="9740" mi="0" ci="5" mb="1" cb="1"/><line nr="9741" mi="2" ci="0" mb="0" cb="0"/><line nr="9746" mi="0" ci="6" mb="0" cb="2"/><line nr="9747" mi="0" ci="2" mb="0" cb="0"/><line nr="9752" mi="2" ci="3" mb="1" cb="1"/><line nr="9754" mi="0" ci="3" mb="0" cb="0"/><line nr="9755" mi="0" ci="6" mb="0" cb="2"/><line nr="9756" mi="0" ci="2" mb="0" cb="0"/><line nr="9762" mi="0" ci="3" mb="0" cb="0"/><line nr="9763" mi="0" ci="3" mb="0" cb="2"/><line nr="9764" mi="0" ci="3" mb="0" cb="0"/><line nr="9765" mi="0" ci="5" mb="0" cb="2"/><line nr="9767" mi="2" ci="3" mb="1" cb="1"/><line nr="9768" mi="0" ci="2" mb="0" cb="0"/><line nr="9773" mi="5" ci="0" mb="2" cb="0"/><line nr="9774" mi="2" ci="0" mb="0" cb="0"/><line nr="9779" mi="0" ci="6" mb="0" cb="2"/><line nr="9780" mi="2" ci="3" mb="1" cb="1"/><line nr="9781" mi="0" ci="2" mb="0" cb="0"/><line nr="9786" mi="2" ci="3" mb="1" cb="1"/><line nr="9787" mi="2" ci="3" mb="1" cb="1"/><line nr="9788" mi="0" ci="5" mb="0" cb="2"/><line nr="9789" mi="0" ci="2" mb="0" cb="0"/><line nr="9794" mi="0" ci="5" mb="0" cb="2"/><line nr="9797" mi="0" ci="3" mb="0" cb="0"/><line nr="9798" mi="0" ci="7" mb="0" cb="2"/><line nr="9800" mi="0" ci="2" mb="0" cb="0"/><line nr="9805" mi="5" ci="0" mb="2" cb="0"/><line nr="9806" mi="2" ci="0" mb="0" cb="0"/><line nr="9811" mi="0" ci="6" mb="0" cb="2"/><line nr="9812" mi="2" ci="3" mb="1" cb="1"/><line nr="9813" mi="2" ci="3" mb="1" cb="1"/><line nr="9814" mi="0" ci="2" mb="0" cb="0"/><line nr="9819" mi="5" ci="0" mb="2" cb="0"/><line nr="9822" mi="3" ci="0" mb="0" cb="0"/><line nr="9823" mi="7" ci="0" mb="2" cb="0"/><line nr="9825" mi="2" ci="0" mb="0" cb="0"/><line nr="9830" mi="0" ci="5" mb="1" cb="1"/><line nr="9831" mi="2" ci="0" mb="0" cb="0"/><line nr="9836" mi="0" ci="5" mb="0" cb="2"/><line nr="9837" mi="0" ci="2" mb="0" cb="0"/><line nr="9842" mi="5" ci="0" mb="2" cb="0"/><line nr="9843" mi="2" ci="0" mb="0" cb="0"/><line nr="9848" mi="0" ci="6" mb="0" cb="2"/><line nr="9849" mi="2" ci="3" mb="1" cb="1"/><line nr="9850" mi="2" ci="3" mb="1" cb="1"/><line nr="9853" mi="0" ci="3" mb="0" cb="0"/><line nr="9854" mi="0" ci="7" mb="0" cb="2"/><line nr="9856" mi="2" ci="4" mb="1" cb="1"/><line nr="9857" mi="0" ci="2" mb="0" cb="0"/><line nr="9862" mi="0" ci="6" mb="0" cb="2"/><line nr="9863" mi="0" ci="2" mb="0" cb="0"/><line nr="9868" mi="5" ci="0" mb="2" cb="0"/><line nr="9869" mi="2" ci="0" mb="0" cb="0"/><line nr="9875" mi="0" ci="3" mb="0" cb="0"/><line nr="9876" mi="0" ci="3" mb="0" cb="2"/><line nr="9877" mi="0" ci="3" mb="0" cb="0"/><line nr="9878" mi="0" ci="3" mb="0" cb="2"/><line nr="9879" mi="0" ci="3" mb="0" cb="0"/><line nr="9880" mi="0" ci="5" mb="1" cb="1"/><line nr="9883" mi="2" ci="3" mb="1" cb="1"/><line nr="9884" mi="0" ci="2" mb="0" cb="0"/><line nr="9889" mi="5" ci="0" mb="2" cb="0"/><line nr="9890" mi="2" ci="0" mb="0" cb="0"/><line nr="9895" mi="0" ci="6" mb="0" cb="2"/><line nr="9896" mi="2" ci="3" mb="1" cb="1"/><line nr="9897" mi="0" ci="2" mb="0" cb="0"/><line nr="9902" mi="0" ci="5" mb="0" cb="2"/><line nr="9905" mi="0" ci="3" mb="0" cb="0"/><line nr="9906" mi="0" ci="7" mb="0" cb="2"/><line nr="9908" mi="0" ci="2" mb="0" cb="0"/><line nr="9914" mi="3" ci="0" mb="0" cb="0"/><line nr="9915" mi="3" ci="0" mb="2" cb="0"/><line nr="9916" mi="3" ci="0" mb="0" cb="0"/><line nr="9917" mi="5" ci="0" mb="2" cb="0"/><line nr="9919" mi="2" ci="0" mb="0" cb="0"/><line nr="9924" mi="0" ci="6" mb="1" cb="1"/><line nr="9925" mi="2" ci="0" mb="0" cb="0"/><line nr="9930" mi="0" ci="6" mb="1" cb="1"/><line nr="9931" mi="2" ci="0" mb="0" cb="0"/><line nr="9936" mi="5" ci="0" mb="2" cb="0"/><line nr="9937" mi="2" ci="0" mb="0" cb="0"/><line nr="9942" mi="0" ci="6" mb="0" cb="2"/><line nr="9943" mi="0" ci="2" mb="0" cb="0"/><line nr="9948" mi="0" ci="6" mb="0" cb="2"/><line nr="9949" mi="0" ci="2" mb="0" cb="0"/><line nr="9954" mi="0" ci="5" mb="1" cb="1"/><line nr="9955" mi="2" ci="0" mb="0" cb="0"/><line nr="9961" mi="0" ci="3" mb="0" cb="0"/><line nr="9962" mi="0" ci="3" mb="0" cb="2"/><line nr="9963" mi="0" ci="3" mb="0" cb="0"/><line nr="9964" mi="0" ci="3" mb="0" cb="2"/><line nr="9965" mi="0" ci="3" mb="0" cb="0"/><line nr="9966" mi="0" ci="3" mb="1" cb="1"/><line nr="9967" mi="0" ci="3" mb="0" cb="0"/><line nr="9968" mi="0" ci="5" mb="1" cb="1"/><line nr="9972" mi="2" ci="3" mb="1" cb="1"/><line nr="9973" mi="0" ci="2" mb="0" cb="0"/><line nr="9978" mi="0" ci="5" mb="0" cb="2"/><line nr="9979" mi="0" ci="6" mb="0" cb="2"/><line nr="9980" mi="0" ci="2" mb="0" cb="0"/><line nr="9987" mi="0" ci="3" mb="0" cb="0"/><line nr="9988" mi="0" ci="7" mb="1" cb="1"/><line nr="9990" mi="0" ci="5" mb="1" cb="1"/><line nr="9991" mi="3" ci="0" mb="0" cb="0"/><line nr="9992" mi="6" ci="0" mb="2" cb="0"/><line nr="9993" mi="3" ci="0" mb="0" cb="0"/><line nr="9994" mi="6" ci="0" mb="2" cb="0"/><line nr="9995" mi="2" ci="0" mb="0" cb="0"/><line nr="10000" mi="5" ci="0" mb="2" cb="0"/><line nr="10001" mi="2" ci="0" mb="0" cb="0"/><line nr="10006" mi="0" ci="5" mb="0" cb="2"/><line nr="10009" mi="0" ci="3" mb="0" cb="0"/><line nr="10010" mi="0" ci="7" mb="0" cb="2"/><line nr="10012" mi="0" ci="2" mb="0" cb="0"/><line nr="10018" mi="3" ci="0" mb="0" cb="0"/><line nr="10019" mi="6" ci="0" mb="2" cb="0"/><line nr="10020" mi="6" ci="0" mb="2" cb="0"/><line nr="10021" mi="3" ci="0" mb="0" cb="0"/><line nr="10022" mi="6" ci="0" mb="2" cb="0"/><line nr="10023" mi="6" ci="0" mb="2" cb="0"/><line nr="10024" mi="3" ci="0" mb="0" cb="0"/><line nr="10025" mi="6" ci="0" mb="2" cb="0"/><line nr="10026" mi="2" ci="0" mb="0" cb="0"/><line nr="10031" mi="2" ci="3" mb="1" cb="1"/><line nr="10032" mi="2" ci="4" mb="1" cb="1"/><line nr="10033" mi="2" ci="3" mb="1" cb="1"/><line nr="10034" mi="0" ci="2" mb="0" cb="0"/><line nr="10039" mi="5" ci="0" mb="2" cb="0"/><line nr="10040" mi="2" ci="0" mb="0" cb="0"/><line nr="10046" mi="3" ci="0" mb="0" cb="0"/><line nr="10047" mi="3" ci="0" mb="2" cb="0"/><line nr="10048" mi="3" ci="0" mb="0" cb="0"/><line nr="10049" mi="6" ci="0" mb="2" cb="0"/><line nr="10051" mi="2" ci="0" mb="0" cb="0"/><line nr="10056" mi="0" ci="6" mb="0" cb="2"/><line nr="10057" mi="2" ci="4" mb="1" cb="1"/><line nr="10059" mi="0" ci="3" mb="0" cb="0"/><line nr="10060" mi="0" ci="3" mb="1" cb="1"/><line nr="10061" mi="3" ci="0" mb="0" cb="0"/><line nr="10062" mi="5" ci="0" mb="2" cb="0"/><line nr="10064" mi="2" ci="4" mb="1" cb="1"/><line nr="10065" mi="2" ci="3" mb="1" cb="1"/><line nr="10066" mi="0" ci="2" mb="0" cb="0"/><line nr="10071" mi="6" ci="0" mb="2" cb="0"/><line nr="10074" mi="3" ci="0" mb="0" cb="0"/><line nr="10075" mi="7" ci="0" mb="2" cb="0"/><line nr="10077" mi="2" ci="0" mb="0" cb="0"/><line nr="10082" mi="0" ci="6" mb="0" cb="2"/><line nr="10083" mi="2" ci="3" mb="1" cb="1"/><line nr="10084" mi="0" ci="2" mb="0" cb="0"/><line nr="10089" mi="0" ci="5" mb="0" cb="2"/><line nr="10091" mi="0" ci="3" mb="0" cb="0"/><line nr="10092" mi="0" ci="6" mb="0" cb="2"/><line nr="10093" mi="0" ci="2" mb="0" cb="0"/><line nr="10098" mi="5" ci="0" mb="2" cb="0"/><line nr="10101" mi="3" ci="0" mb="0" cb="0"/><line nr="10102" mi="7" ci="0" mb="2" cb="0"/><line nr="10104" mi="2" ci="0" mb="0" cb="0"/><line nr="10109" mi="5" ci="0" mb="2" cb="0"/><line nr="10110" mi="2" ci="0" mb="0" cb="0"/><line nr="10115" mi="0" ci="6" mb="0" cb="2"/><line nr="10116" mi="0" ci="2" mb="0" cb="0"/><line nr="10121" mi="0" ci="6" mb="0" cb="2"/><line nr="10122" mi="0" ci="2" mb="0" cb="0"/><line nr="10127" mi="0" ci="6" mb="1" cb="1"/><line nr="10128" mi="5" ci="0" mb="2" cb="0"/><line nr="10130" mi="3" ci="0" mb="0" cb="0"/><line nr="10131" mi="6" ci="0" mb="2" cb="0"/><line nr="10132" mi="6" ci="0" mb="2" cb="0"/><line nr="10133" mi="3" ci="0" mb="0" cb="0"/><line nr="10134" mi="6" ci="0" mb="2" cb="0"/><line nr="10135" mi="3" ci="0" mb="0" cb="0"/><line nr="10136" mi="7" ci="0" mb="2" cb="0"/><line nr="10137" mi="3" ci="0" mb="0" cb="0"/><line nr="10138" mi="6" ci="0" mb="2" cb="0"/><line nr="10139" mi="6" ci="0" mb="2" cb="0"/><line nr="10140" mi="2" ci="0" mb="0" cb="0"/><line nr="10145" mi="0" ci="6" mb="1" cb="1"/><line nr="10146" mi="5" ci="0" mb="2" cb="0"/><line nr="10147" mi="6" ci="0" mb="2" cb="0"/><line nr="10148" mi="6" ci="0" mb="2" cb="0"/><line nr="10149" mi="5" ci="0" mb="2" cb="0"/><line nr="10150" mi="6" ci="0" mb="2" cb="0"/><line nr="10151" mi="6" ci="0" mb="2" cb="0"/><line nr="10152" mi="2" ci="0" mb="0" cb="0"/><line nr="10158" mi="0" ci="3" mb="0" cb="0"/><line nr="10159" mi="0" ci="3" mb="0" cb="2"/><line nr="10160" mi="0" ci="3" mb="0" cb="0"/><line nr="10161" mi="0" ci="5" mb="0" cb="2"/><line nr="10163" mi="2" ci="3" mb="1" cb="1"/><line nr="10164" mi="0" ci="2" mb="0" cb="0"/><line nr="10169" mi="0" ci="6" mb="1" cb="1"/><line nr="10170" mi="5" ci="0" mb="2" cb="0"/><line nr="10171" mi="2" ci="0" mb="0" cb="0"/><line nr="10176" mi="0" ci="6" mb="0" cb="2"/><line nr="10177" mi="2" ci="3" mb="1" cb="1"/><line nr="10178" mi="0" ci="2" mb="0" cb="0"/><line nr="10183" mi="0" ci="5" mb="0" cb="2"/><line nr="10186" mi="0" ci="3" mb="0" cb="0"/><line nr="10187" mi="0" ci="7" mb="0" cb="2"/><line nr="10189" mi="0" ci="2" mb="0" cb="0"/><line nr="10194" mi="0" ci="6" mb="0" cb="2"/><line nr="10195" mi="2" ci="4" mb="1" cb="1"/><line nr="10196" mi="2" ci="3" mb="1" cb="1"/><line nr="10197" mi="2" ci="4" mb="1" cb="1"/><line nr="10198" mi="2" ci="3" mb="1" cb="1"/><line nr="10199" mi="0" ci="2" mb="0" cb="0"/><line nr="10204" mi="6" ci="0" mb="2" cb="0"/><line nr="10205" mi="5" ci="0" mb="2" cb="0"/><line nr="10206" mi="2" ci="0" mb="0" cb="0"/><line nr="10211" mi="0" ci="6" mb="0" cb="2"/><line nr="10212" mi="2" ci="3" mb="1" cb="1"/><line nr="10213" mi="0" ci="2" mb="0" cb="0"/><line nr="10218" mi="0" ci="5" mb="0" cb="2"/><line nr="10221" mi="0" ci="3" mb="0" cb="0"/><line nr="10222" mi="0" ci="7" mb="0" cb="2"/><line nr="10224" mi="0" ci="2" mb="0" cb="0"/><line nr="10229" mi="6" ci="0" mb="2" cb="0"/><line nr="10230" mi="5" ci="0" mb="2" cb="0"/><line nr="10233" mi="3" ci="0" mb="0" cb="0"/><line nr="10234" mi="7" ci="0" mb="2" cb="0"/><line nr="10236" mi="2" ci="0" mb="0" cb="0"/><line nr="10241" mi="0" ci="6" mb="0" cb="2"/><line nr="10242" mi="2" ci="3" mb="1" cb="1"/><line nr="10243" mi="0" ci="2" mb="0" cb="0"/><line nr="10248" mi="0" ci="6" mb="0" cb="2"/><line nr="10249" mi="2" ci="4" mb="1" cb="1"/><line nr="10250" mi="2" ci="3" mb="1" cb="1"/><line nr="10251" mi="2" ci="4" mb="1" cb="1"/><line nr="10252" mi="2" ci="3" mb="1" cb="1"/><line nr="10254" mi="0" ci="3" mb="0" cb="0"/><line nr="10255" mi="0" ci="6" mb="0" cb="2"/><line nr="10256" mi="0" ci="2" mb="0" cb="0"/><line nr="10261" mi="6" ci="0" mb="2" cb="0"/><line nr="10262" mi="5" ci="0" mb="2" cb="0"/><line nr="10263" mi="2" ci="0" mb="0" cb="0"/><line nr="10268" mi="5" ci="0" mb="2" cb="0"/><line nr="10269" mi="2" ci="0" mb="0" cb="0"/><line nr="10274" mi="0" ci="5" mb="0" cb="2"/><line nr="10277" mi="0" ci="3" mb="0" cb="0"/><line nr="10278" mi="0" ci="7" mb="1" cb="1"/><line nr="10280" mi="0" ci="2" mb="0" cb="0"/><line nr="10285" mi="6" ci="0" mb="2" cb="0"/><line nr="10286" mi="5" ci="0" mb="2" cb="0"/><line nr="10289" mi="3" ci="0" mb="0" cb="0"/><line nr="10290" mi="7" ci="0" mb="2" cb="0"/><line nr="10292" mi="2" ci="0" mb="0" cb="0"/><line nr="10297" mi="2" ci="3" mb="1" cb="1"/><line nr="10298" mi="0" ci="2" mb="0" cb="0"/><line nr="10312" mi="3" ci="3" mb="0" cb="0"/><line nr="10315" mi="4" ci="4" mb="0" cb="0"/><line nr="10322" mi="0" ci="1" mb="0" cb="0"/><line nr="10323" mi="0" ci="1" mb="0" cb="0"/><line nr="10324" mi="0" ci="1" mb="0" cb="0"/><line nr="10325" mi="0" ci="1" mb="0" cb="0"/><line nr="10326" mi="0" ci="1" mb="0" cb="0"/><line nr="10327" mi="0" ci="1" mb="0" cb="0"/><line nr="10329" mi="0" ci="679" mb="0" cb="0"/><line nr="10330" mi="0" ci="1" mb="0" cb="0"/><line nr="10332" mi="0" ci="679" mb="0" cb="0"/><line nr="10333" mi="0" ci="1" mb="0" cb="0"/><line nr="10335" mi="0" ci="679" mb="0" cb="0"/><line nr="10336" mi="0" ci="1" mb="0" cb="0"/><line nr="10338" mi="0" ci="679" mb="0" cb="0"/><line nr="10339" mi="0" ci="1" mb="0" cb="0"/><line nr="10341" mi="0" ci="679" mb="0" cb="0"/><line nr="10342" mi="0" ci="1" mb="0" cb="0"/><line nr="10343" mi="4" ci="4" mb="0" cb="0"/><line nr="10344" mi="3" ci="3" mb="0" cb="0"/><line nr="10345" mi="3" ci="3" mb="0" cb="0"/><line nr="10348" mi="0" ci="2" mb="0" cb="0"/><line nr="10349" mi="0" ci="8" mb="0" cb="0"/><line nr="10350" mi="0" ci="7" mb="0" cb="0"/><line nr="10351" mi="0" ci="5" mb="0" cb="0"/><line nr="10352" mi="0" ci="3" mb="0" cb="0"/><line nr="10353" mi="0" ci="3" mb="0" cb="0"/><line nr="10354" mi="0" ci="12" mb="0" cb="2"/><line nr="10355" mi="0" ci="16" mb="0" cb="2"/><line nr="10356" mi="0" ci="1" mb="0" cb="0"/><line nr="10360" mi="6" ci="0" mb="0" cb="0"/><line nr="10361" mi="1" ci="0" mb="0" cb="0"/><line nr="10364" mi="6" ci="0" mb="0" cb="0"/><line nr="10365" mi="1" ci="0" mb="0" cb="0"/><line nr="10368" mi="0" ci="3" mb="1" cb="1"/><line nr="10369" mi="9" ci="0" mb="0" cb="0"/><line nr="10371" mi="0" ci="6" mb="0" cb="0"/><line nr="10373" mi="0" ci="3" mb="1" cb="1"/><line nr="10374" mi="7" ci="0" mb="0" cb="0"/><line nr="10377" mi="0" ci="5" mb="0" cb="0"/><line nr="10378" mi="0" ci="5" mb="0" cb="0"/><line nr="10379" mi="0" ci="3" mb="0" cb="0"/><line nr="10380" mi="0" ci="3" mb="0" cb="0"/><line nr="10381" mi="0" ci="12" mb="0" cb="2"/><line nr="10382" mi="0" ci="16" mb="0" cb="2"/><line nr="10383" mi="0" ci="1" mb="0" cb="0"/><line nr="10386" mi="2" ci="0" mb="0" cb="0"/><line nr="10387" mi="3" ci="0" mb="0" cb="0"/><line nr="10388" mi="5" ci="0" mb="0" cb="0"/><line nr="10389" mi="3" ci="0" mb="0" cb="0"/><line nr="10390" mi="3" ci="0" mb="0" cb="0"/><line nr="10391" mi="12" ci="0" mb="2" cb="0"/><line nr="10392" mi="16" ci="0" mb="2" cb="0"/><line nr="10393" mi="1" ci="0" mb="0" cb="0"/><line nr="10397" mi="3" ci="0" mb="0" cb="0"/><line nr="10398" mi="5" ci="0" mb="0" cb="0"/><line nr="10399" mi="3" ci="0" mb="0" cb="0"/><line nr="10400" mi="3" ci="0" mb="0" cb="0"/><line nr="10401" mi="12" ci="0" mb="2" cb="0"/><line nr="10402" mi="16" ci="0" mb="2" cb="0"/><line nr="10403" mi="1" ci="0" mb="0" cb="0"/><line nr="10407" mi="0" ci="12" mb="0" cb="2"/><line nr="10408" mi="0" ci="9" mb="0" cb="0"/><line nr="10409" mi="0" ci="3" mb="0" cb="0"/><line nr="10410" mi="0" ci="5" mb="0" cb="2"/><line nr="10411" mi="0" ci="6" mb="0" cb="0"/><line nr="10412" mi="0" ci="9" mb="0" cb="2"/><line nr="10413" mi="0" ci="3" mb="0" cb="0"/><line nr="10414" mi="0" ci="9" mb="0" cb="2"/><line nr="10415" mi="0" ci="5" mb="0" cb="0"/><line nr="10416" mi="0" ci="2" mb="0" cb="2"/><line nr="10417" mi="0" ci="8" mb="0" cb="2"/><line nr="10418" mi="0" ci="4" mb="0" cb="0"/><line nr="10422" mi="0" ci="3" mb="0" cb="0"/><line nr="10424" mi="0" ci="3" mb="0" cb="0"/><line nr="10425" mi="0" ci="3" mb="0" cb="0"/><line nr="10426" mi="0" ci="3" mb="0" cb="0"/><line nr="10431" mi="6" ci="6" mb="0" cb="0"/><line nr="10433" mi="0" ci="5" mb="0" cb="2"/><line nr="10434" mi="0" ci="6" mb="0" cb="0"/><line nr="10435" mi="0" ci="4" mb="0" cb="2"/><line nr="10436" mi="0" ci="13" mb="0" cb="0"/><line nr="10438" mi="0" ci="9" mb="0" cb="0"/><line nr="10441" mi="0" ci="5" mb="0" cb="0"/><line nr="10443" mi="0" ci="3" mb="0" cb="2"/><line nr="10444" mi="0" ci="5" mb="0" cb="0"/><line nr="10445" mi="0" ci="11" mb="0" cb="4"/><line nr="10446" mi="0" ci="6" mb="0" cb="2"/><line nr="10448" mi="0" ci="7" mb="0" cb="2"/><line nr="10449" mi="0" ci="11" mb="0" cb="4"/><line nr="10450" mi="0" ci="2" mb="0" cb="0"/><line nr="10456" mi="0" ci="10" mb="0" cb="2"/><line nr="10457" mi="0" ci="9" mb="0" cb="0"/><line nr="10458" mi="0" ci="3" mb="0" cb="0"/><line nr="10459" mi="0" ci="6" mb="0" cb="0"/><line nr="10460" mi="0" ci="3" mb="0" cb="0"/><line nr="10465" mi="0" ci="9" mb="0" cb="2"/><line nr="10466" mi="0" ci="7" mb="0" cb="2"/><line nr="10467" mi="0" ci="7" mb="1" cb="1"/><line nr="10468" mi="7" ci="0" mb="0" cb="0"/><line nr="10470" mi="0" ci="2" mb="0" cb="0"/><line nr="10474" mi="0" ci="7" mb="0" cb="2"/><line nr="10475" mi="0" ci="12" mb="0" cb="0"/><line nr="10477" mi="0" ci="7" mb="0" cb="0"/><line nr="10480" mi="5" ci="5" mb="0" cb="0"/><line nr="10482" mi="3" ci="3" mb="0" cb="0"/><line nr="10483" mi="4" ci="4" mb="0" cb="0"/><line nr="10487" mi="0" ci="3" mb="1" cb="1"/><line nr="10488" mi="1" ci="0" mb="0" cb="0"/><line nr="10491" mi="0" ci="6" mb="0" cb="2"/><line nr="10492" mi="0" ci="12" mb="0" cb="0"/><line nr="10493" mi="0" ci="3" mb="0" cb="2"/><line nr="10494" mi="0" ci="5" mb="0" cb="0"/><line nr="10496" mi="0" ci="8" mb="0" cb="2"/><line nr="10497" mi="0" ci="8" mb="0" cb="0"/><line nr="10500" mi="0" ci="11" mb="0" cb="2"/><line nr="10501" mi="0" ci="6" mb="1" cb="1"/><line nr="10502" mi="0" ci="2" mb="0" cb="0"/><line nr="10504" mi="0" ci="9" mb="0" cb="2"/><line nr="10505" mi="0" ci="8" mb="0" cb="2"/><line nr="10506" mi="0" ci="2" mb="0" cb="0"/><line nr="10507" mi="0" ci="1" mb="0" cb="0"/><line nr="10511" mi="0" ci="2" mb="0" cb="2"/><line nr="10512" mi="0" ci="6" mb="0" cb="0"/><line nr="10513" mi="0" ci="1" mb="0" cb="0"/><line nr="10516" mi="0" ci="1" mb="0" cb="0"/><line nr="10518" mi="0" ci="2" mb="0" cb="2"/><line nr="10519" mi="0" ci="10" mb="0" cb="0"/><line nr="10522" mi="0" ci="1" mb="0" cb="0"/><line nr="10526" mi="0" ci="3" mb="0" cb="0"/><line nr="10527" mi="0" ci="3" mb="0" cb="0"/><line nr="10528" mi="0" ci="3" mb="0" cb="2"/><line nr="10529" mi="0" ci="5" mb="0" cb="0"/><line nr="10530" mi="0" ci="3" mb="0" cb="0"/><line nr="10532" mi="0" ci="7" mb="0" cb="2"/><line nr="10533" mi="0" ci="7" mb="0" cb="2"/><line nr="10534" mi="0" ci="7" mb="0" cb="2"/><line nr="10535" mi="0" ci="8" mb="0" cb="2"/><line nr="10536" mi="0" ci="4" mb="0" cb="0"/><line nr="10538" mi="0" ci="8" mb="0" cb="2"/><line nr="10539" mi="0" ci="6" mb="0" cb="0"/><line nr="10541" mi="0" ci="8" mb="0" cb="2"/><line nr="10542" mi="0" ci="6" mb="0" cb="0"/><line nr="10544" mi="0" ci="8" mb="0" cb="2"/><line nr="10545" mi="0" ci="6" mb="0" cb="0"/><line nr="10547" mi="0" ci="8" mb="0" cb="2"/><line nr="10548" mi="0" ci="6" mb="0" cb="0"/><line nr="10553" mi="0" ci="7" mb="0" cb="2"/><line nr="10554" mi="0" ci="4" mb="0" cb="2"/><line nr="10555" mi="0" ci="4" mb="0" cb="0"/><line nr="10556" mi="0" ci="5" mb="0" cb="0"/><line nr="10557" mi="0" ci="6" mb="0" cb="0"/><line nr="10560" mi="0" ci="3" mb="0" cb="0"/><line nr="10561" mi="0" ci="2" mb="0" cb="0"/><line nr="10562" mi="0" ci="4" mb="0" cb="0"/><line nr="10563" mi="0" ci="5" mb="0" cb="0"/><line nr="10564" mi="0" ci="9" mb="0" cb="2"/><line nr="10565" mi="0" ci="8" mb="0" cb="0"/><line nr="10567" mi="2" ci="16" mb="1" cb="1"/><line nr="10570" mi="3" ci="3" mb="0" cb="0"/><line nr="10575" mi="3" ci="0" mb="0" cb="0"/><line nr="10580" mi="1" ci="0" mb="0" cb="0"/><line nr="10584" mi="1" ci="0" mb="0" cb="0"/><line nr="10587" mi="0" ci="3" mb="0" cb="0"/><line nr="10588" mi="0" ci="7" mb="0" cb="2"/><line nr="10590" mi="0" ci="5" mb="0" cb="0"/><line nr="10593" mi="0" ci="5" mb="0" cb="2"/><line nr="10594" mi="0" ci="11" mb="0" cb="0"/><line nr="10595" mi="0" ci="2" mb="51" cb="8"/><line nr="10596" mi="0" ci="4" mb="0" cb="0"/><line nr="10597" mi="0" ci="4" mb="0" cb="0"/><line nr="10598" mi="4" ci="0" mb="0" cb="0"/><line nr="10599" mi="4" ci="0" mb="0" cb="0"/><line nr="10600" mi="4" ci="0" mb="0" cb="0"/><line nr="10601" mi="4" ci="0" mb="0" cb="0"/><line nr="10602" mi="4" ci="0" mb="0" cb="0"/><line nr="10603" mi="4" ci="0" mb="0" cb="0"/><line nr="10604" mi="4" ci="0" mb="0" cb="0"/><line nr="10605" mi="4" ci="0" mb="0" cb="0"/><line nr="10606" mi="4" ci="0" mb="0" cb="0"/><line nr="10607" mi="4" ci="0" mb="0" cb="0"/><line nr="10608" mi="4" ci="0" mb="0" cb="0"/><line nr="10609" mi="4" ci="0" mb="0" cb="0"/><line nr="10610" mi="4" ci="0" mb="0" cb="0"/><line nr="10611" mi="0" ci="4" mb="0" cb="0"/><line nr="10612" mi="4" ci="0" mb="0" cb="0"/><line nr="10613" mi="4" ci="0" mb="0" cb="0"/><line nr="10614" mi="4" ci="0" mb="0" cb="0"/><line nr="10615" mi="4" ci="0" mb="0" cb="0"/><line nr="10616" mi="4" ci="0" mb="0" cb="0"/><line nr="10617" mi="4" ci="0" mb="0" cb="0"/><line nr="10618" mi="4" ci="0" mb="0" cb="0"/><line nr="10619" mi="4" ci="0" mb="0" cb="0"/><line nr="10620" mi="4" ci="0" mb="0" cb="0"/><line nr="10621" mi="4" ci="0" mb="0" cb="0"/><line nr="10622" mi="4" ci="0" mb="0" cb="0"/><line nr="10623" mi="4" ci="0" mb="0" cb="0"/><line nr="10624" mi="4" ci="0" mb="0" cb="0"/><line nr="10625" mi="4" ci="0" mb="0" cb="0"/><line nr="10626" mi="0" ci="4" mb="0" cb="0"/><line nr="10627" mi="4" ci="0" mb="0" cb="0"/><line nr="10628" mi="4" ci="0" mb="0" cb="0"/><line nr="10629" mi="4" ci="0" mb="0" cb="0"/><line nr="10630" mi="0" ci="4" mb="0" cb="0"/><line nr="10631" mi="0" ci="4" mb="0" cb="0"/><line nr="10632" mi="4" ci="0" mb="0" cb="0"/><line nr="10633" mi="4" ci="0" mb="0" cb="0"/><line nr="10634" mi="4" ci="0" mb="0" cb="0"/><line nr="10635" mi="4" ci="0" mb="0" cb="0"/><line nr="10636" mi="0" ci="4" mb="0" cb="0"/><line nr="10637" mi="4" ci="0" mb="0" cb="0"/><line nr="10638" mi="0" ci="4" mb="0" cb="0"/><line nr="10639" mi="4" ci="0" mb="0" cb="0"/><line nr="10640" mi="4" ci="0" mb="0" cb="0"/><line nr="10641" mi="4" ci="0" mb="0" cb="0"/><line nr="10642" mi="4" ci="0" mb="0" cb="0"/><line nr="10643" mi="4" ci="0" mb="0" cb="0"/><line nr="10644" mi="4" ci="0" mb="0" cb="0"/><line nr="10645" mi="4" ci="0" mb="0" cb="0"/><line nr="10646" mi="4" ci="0" mb="0" cb="0"/><line nr="10647" mi="4" ci="0" mb="0" cb="0"/><line nr="10648" mi="4" ci="0" mb="0" cb="0"/><line nr="10649" mi="4" ci="0" mb="0" cb="0"/><line nr="10650" mi="4" ci="0" mb="0" cb="0"/><line nr="10651" mi="4" ci="0" mb="0" cb="0"/><line nr="10652" mi="4" ci="0" mb="0" cb="0"/><line nr="10653" mi="3" ci="0" mb="0" cb="0"/><line nr="10656" mi="0" ci="3" mb="0" cb="0"/><line nr="10657" mi="0" ci="2" mb="1" cb="1"/><line nr="10659" mi="1" ci="1" mb="0" cb="0"/><line nr="10661" mi="0" ci="3" mb="0" cb="0"/><line nr="10662" mi="0" ci="1" mb="0" cb="0"/><line nr="10665" mi="0" ci="5" mb="0" cb="0"/><line nr="10666" mi="0" ci="5" mb="0" cb="2"/><line nr="10667" mi="0" ci="11" mb="0" cb="2"/><line nr="10668" mi="0" ci="4" mb="0" cb="0"/><line nr="10671" mi="0" ci="9" mb="0" cb="0"/><line nr="10672" mi="0" ci="4" mb="0" cb="0"/><line nr="10673" mi="0" ci="3" mb="0" cb="0"/><line nr="10674" mi="0" ci="1" mb="0" cb="0"/><line nr="10676" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3672" covered="19283"/><counter type="BRANCH" missed="947" covered="2227"/><counter type="LINE" missed="718" covered="3658"/><counter type="COMPLEXITY" missed="832" covered="1523"/><counter type="METHOD" missed="61" covered="617"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TokenTypes.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="8"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="47"/><counter type="BRANCH" missed="6" covered="9"/><counter type="LINE" missed="10" covered="17"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Problem.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="33" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="14" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="2" cb="2"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="4" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="159"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="6" covered="24"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Range.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="17" mb="0" cb="4"/><line nr="81" mi="0" ci="11" mb="0" cb="4"/><line nr="89" mi="0" ci="16" mb="0" cb="4"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="2" ci="7" mb="2" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="1" ci="15" mb="2" cb="2"/><line nr="113" mi="10" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="128"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="13" covered="17"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratedJavaParserConstants.java"><line nr="326" mi="0" ci="576" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="576"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Position.java"><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="1" cb="1"/><line nr="42" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="4" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="4" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="2" ci="4" mb="1" cb="1"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="9" mb="0" cb="2"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="2" ci="4" mb="1" cb="1"/><line nr="101" mi="0" ci="5" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="2"/><line nr="124" mi="2" ci="7" mb="2" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="14" mb="0" cb="4"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="158"/><counter type="BRANCH" missed="16" covered="28"/><counter type="LINE" missed="10" covered="34"/><counter type="COMPLEXITY" missed="16" covered="20"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HasParentNode.java"><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="4"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenMgrException.java"><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="5" cb="4"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="1" cb="3"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="18" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="14" mb="0" cb="0"/><line nr="130" mi="0" ci="26" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="147"/><counter type="BRANCH" missed="6" covered="11"/><counter type="LINE" missed="12" covered="25"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StreamProvider.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="1" cb="1"/><line nr="63" mi="6" ci="0" mb="4" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="28"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaToken.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="1" cb="1"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="0" cb="0"/><line nr="178" mi="15" ci="0" mb="0" cb="0"/><line nr="179" mi="24" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="7" mb="0" cb="2"/><line nr="196" mi="0" ci="36" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="1" cb="3"/><line nr="212" mi="0" ci="10" mb="0" cb="4"/><line nr="216" mi="0" ci="7" mb="0" cb="2"/><line nr="220" mi="0" ci="7" mb="0" cb="2"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="228" mi="7" ci="0" mb="2" cb="0"/><line nr="232" mi="7" ci="0" mb="2" cb="0"/><line nr="236" mi="7" ci="0" mb="2" cb="0"/><line nr="240" mi="7" ci="0" mb="2" cb="0"/><line nr="244" mi="7" ci="0" mb="2" cb="0"/><line nr="248" mi="0" ci="576" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="7" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="7" mb="0" cb="0"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="295" mi="0" ci="7" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="7" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="7" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="0"/><line nr="313" mi="0" ci="7" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="317" mi="0" ci="7" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="0" cb="0"/><line nr="323" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="326" mi="0" ci="7" mb="0" cb="0"/><line nr="327" mi="0" ci="7" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="0"/><line nr="335" mi="0" ci="7" mb="0" cb="0"/><line nr="336" mi="0" ci="7" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="0"/><line nr="338" mi="0" ci="7" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="341" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="0"/><line nr="344" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="0" ci="7" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="7" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="354" mi="0" ci="7" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="357" mi="0" ci="7" mb="0" cb="0"/><line nr="358" mi="0" ci="7" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="0"/><line nr="363" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="7" mb="0" cb="0"/><line nr="368" mi="0" ci="7" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="7" mb="0" cb="0"/><line nr="372" mi="0" ci="7" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="375" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="377" mi="0" ci="7" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="0"/><line nr="379" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="0"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="383" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="7" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="389" mi="0" ci="7" mb="0" cb="0"/><line nr="390" mi="0" ci="7" mb="0" cb="0"/><line nr="391" mi="0" ci="7" mb="0" cb="0"/><line nr="392" mi="0" ci="7" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="143" cb="1"/><line nr="404" mi="2" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="428" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="2" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="442" mi="2" ci="0" mb="0" cb="0"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="2" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="458" mi="2" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="2" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="474" mi="2" ci="0" mb="0" cb="0"/><line nr="476" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="2" ci="0" mb="0" cb="0"/><line nr="482" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="510" mi="2" ci="0" mb="0" cb="0"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="0" cb="0"/><line nr="518" mi="2" ci="0" mb="0" cb="0"/><line nr="520" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="2" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="0" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="544" mi="2" ci="0" mb="0" cb="0"/><line nr="546" mi="2" ci="0" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="550" mi="2" ci="0" mb="0" cb="0"/><line nr="552" mi="2" ci="0" mb="0" cb="0"/><line nr="554" mi="2" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="2" ci="0" mb="0" cb="0"/><line nr="564" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="2" ci="0" mb="0" cb="0"/><line nr="568" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="2" ci="0" mb="0" cb="0"/><line nr="572" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="2" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="582" mi="2" ci="0" mb="0" cb="0"/><line nr="584" mi="2" ci="0" mb="0" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="2" ci="0" mb="0" cb="0"/><line nr="590" mi="2" ci="0" mb="0" cb="0"/><line nr="592" mi="2" ci="0" mb="0" cb="0"/><line nr="594" mi="2" ci="0" mb="0" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="598" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="2" ci="0" mb="0" cb="0"/><line nr="602" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="2" ci="0" mb="0" cb="0"/><line nr="608" mi="2" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="0" cb="0"/><line nr="612" mi="2" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="2" ci="0" mb="0" cb="0"/><line nr="620" mi="2" ci="0" mb="0" cb="0"/><line nr="622" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="0" cb="0"/><line nr="626" mi="2" ci="0" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="2" ci="0" mb="0" cb="0"/><line nr="634" mi="2" ci="0" mb="0" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="638" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="2" ci="0" mb="0" cb="0"/><line nr="642" mi="2" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><line nr="646" mi="2" ci="0" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="650" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="2" ci="0" mb="0" cb="0"/><line nr="654" mi="2" ci="0" mb="0" cb="0"/><line nr="656" mi="2" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="0" cb="0"/><line nr="660" mi="2" ci="0" mb="0" cb="0"/><line nr="662" mi="2" ci="0" mb="0" cb="0"/><line nr="664" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="2" ci="0" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="0" cb="0"/><line nr="670" mi="2" ci="0" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="0" mb="0" cb="0"/><line nr="676" mi="2" ci="0" mb="0" cb="0"/><line nr="678" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="2" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="0" cb="0"/><line nr="686" mi="2" ci="0" mb="0" cb="0"/><line nr="688" mi="2" ci="0" mb="0" cb="0"/><line nr="690" mi="13" ci="0" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="700" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="3" ci="0" mb="0" cb="0"/><line nr="708" mi="5" ci="0" mb="0" cb="0"/><line nr="709" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="3" ci="0" mb="0" cb="0"/><line nr="711" mi="1" ci="0" mb="0" cb="0"/><line nr="712" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="0" cb="0"/><line nr="714" mi="1" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="0" cb="0"/><line nr="721" mi="5" ci="0" mb="0" cb="0"/><line nr="722" mi="3" ci="0" mb="0" cb="0"/><line nr="723" mi="3" ci="0" mb="0" cb="0"/><line nr="724" mi="1" ci="0" mb="0" cb="0"/><line nr="725" mi="3" ci="0" mb="0" cb="0"/><line nr="726" mi="3" ci="0" mb="0" cb="0"/><line nr="727" mi="1" ci="0" mb="0" cb="0"/><line nr="733" mi="3" ci="0" mb="0" cb="0"/><line nr="734" mi="3" ci="0" mb="0" cb="0"/><line nr="735" mi="11" ci="0" mb="0" cb="0"/><line nr="736" mi="11" ci="0" mb="0" cb="0"/><line nr="737" mi="1" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="5" ci="0" mb="0" cb="0"/><line nr="745" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="3" ci="0" mb="0" cb="0"/><line nr="747" mi="1" ci="0" mb="0" cb="0"/><line nr="748" mi="5" ci="0" mb="0" cb="0"/><line nr="749" mi="3" ci="0" mb="0" cb="0"/><line nr="750" mi="3" ci="0" mb="0" cb="0"/><line nr="751" mi="1" ci="0" mb="0" cb="0"/><line nr="752" mi="1" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="759" mi="4" ci="0" mb="2" cb="0"/><line nr="760" mi="6" ci="0" mb="0" cb="0"/><line nr="762" mi="2" ci="0" mb="0" cb="0"/><line nr="769" mi="2" ci="0" mb="0" cb="0"/><line nr="770" mi="4" ci="0" mb="2" cb="0"/><line nr="771" mi="6" ci="0" mb="0" cb="0"/><line nr="773" mi="2" ci="0" mb="0" cb="0"/><line nr="778" mi="3" ci="0" mb="0" cb="0"/><line nr="779" mi="8" ci="0" mb="0" cb="0"/><line nr="780" mi="2" ci="0" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="2"/><line nr="786" mi="0" ci="2" mb="0" cb="0"/><line nr="787" mi="0" ci="7" mb="2" cb="2"/><line nr="788" mi="2" ci="0" mb="0" cb="0"/><line nr="789" mi="0" ci="3" mb="0" cb="0"/><line nr="790" mi="0" ci="5" mb="1" cb="1"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="792" mi="6" ci="0" mb="2" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="555" covered="1946"/><counter type="BRANCH" missed="164" covered="34"/><counter type="LINE" missed="203" covered="224"/><counter type="COMPLEXITY" missed="178" covered="41"/><counter type="METHOD" missed="22" covered="27"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ParserConfiguration.java"><line nr="46" mi="0" ci="72" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="18" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="1" cb="1"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="2" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="2" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="2" cb="0"/><line nr="238" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="2" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="2" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="2" cb="0"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="151" covered="469"/><counter type="BRANCH" missed="30" covered="10"/><counter type="LINE" missed="43" covered="78"/><counter type="COMPLEXITY" missed="27" covered="30"/><counter type="METHOD" missed="11" covered="26"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ParseException.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="2"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="1" cb="1"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="14" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="23" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="1" ci="3" mb="1" cb="1"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="22" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="8" cb="1"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="2" cb="2"/><line nr="223" mi="11" ci="0" mb="0" cb="0"/><line nr="224" mi="18" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="251"/><counter type="BRANCH" missed="12" covered="21"/><counter type="LINE" missed="26" covered="45"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParseResult.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="1" cb="3"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="2"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Token.java"><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenRange.java"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="2" cb="2"/><line nr="32" mi="0" ci="17" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="1" cb="3"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="147"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnicodeEscapeProcessingProvider.java"><line nr="11" mi="0" ci="2" mb="10" cb="7"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="12" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="15" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="2" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="10" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="2" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="9" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="3" cb="1"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="11" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="10" ci="0" mb="2" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="10" mb="1" cb="1"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="12" mb="0" cb="2"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="1" cb="1"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="12" mb="1" cb="1"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="2" cb="2"/><line nr="232" mi="0" ci="8" mb="1" cb="1"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="1" cb="1"/><line nr="256" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="9" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="20" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="1" cb="1"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="1" cb="1"/><line nr="288" mi="7" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="1" cb="1"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="2"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="397" covered="377"/><counter type="BRANCH" missed="43" covered="32"/><counter type="LINE" missed="83" covered="88"/><counter type="COMPLEXITY" missed="37" covered="21"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RangedList.java"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringProvider.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentsInserter.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="1" cb="1"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="1" cb="3"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="4"/><line nr="135" mi="0" ci="7" mb="1" cb="1"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="8" mb="1" cb="3"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="1" cb="1"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="2"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="2" cb="2"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="2"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="13" mb="0" cb="2"/><counter type="INSTRUCTION" missed="6" covered="384"/><counter type="BRANCH" missed="9" covered="51"/><counter type="LINE" missed="3" covered="92"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratedJavaParserBase.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="4"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="1" cb="3"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="4"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="1" cb="3"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="1" cb="1"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="1" cb="1"/><line nr="231" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="1" cb="1"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="28" mb="0" cb="0"/><line nr="262" mi="0" ci="11" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="28" mb="0" cb="0"/><line nr="266" mi="0" ci="11" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="2"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="1" cb="1"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="2"/><line nr="287" mi="0" ci="18" mb="0" cb="0"/><line nr="289" mi="0" ci="8" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="14" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="9" mb="0" cb="2"/><line nr="312" mi="0" ci="7" mb="0" cb="2"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="0" ci="11" mb="0" cb="2"/><line nr="316" mi="0" ci="12" mb="0" cb="0"/><line nr="320" mi="0" ci="10" mb="0" cb="2"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="2"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="1" cb="1"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="2"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="11" mb="0" cb="0"/><line nr="336" mi="0" ci="6" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="2"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="1" cb="1"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="8" mb="0" cb="2"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="630"/><counter type="BRANCH" missed="16" covered="58"/><counter type="LINE" missed="13" covered="128"/><counter type="COMPLEXITY" missed="17" covered="47"/><counter type="METHOD" missed="2" covered="25"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="7936" covered="36094"/><counter type="BRANCH" missed="1940" covered="3660"/><counter type="LINE" missed="1563" covered="6084"/><counter type="COMPLEXITY" missed="1698" covered="2608"/><counter type="METHOD" missed="154" covered="932"/><counter type="CLASS" missed="1" covered="35"/></package><package name="com/github/javaparser/ast/observer"><class name="com/github/javaparser/ast/observer/AstObserverAdapter" sourcefilename="AstObserverAdapter.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listChange" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/observer/AstObserver$ListChangeType;ILcom/github/javaparser/ast/Node;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listReplacement" desc="(Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="47"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/observer/ObservableProperty$Type" sourcefilename="ObservableProperty.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IZZ)V" line="143"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="135"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/observer/ObservableProperty" sourcefilename="ObservableProperty.java"><method name="fromCamelCaseName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/observer/ObservableProperty;" line="154"><counter type="INSTRUCTION" missed="12" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/github/javaparser/ast/observer/ObservableProperty$Type;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILcom/github/javaparser/ast/observer/ObservableProperty$Type;Z)V" line="167"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="173"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDerived" desc="()Z" line="177"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAboutNodes" desc="()Z" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAboutValues" desc="()Z" line="185"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMultiple" desc="()Z" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingle" desc="()Z" line="193"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="camelCaseName" desc="()Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueAsSingleReference" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="201"><counter type="INSTRUCTION" missed="30" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMethod" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueAsMultipleReference" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="230"><counter type="INSTRUCTION" missed="29" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueAsCollection" desc="(Lcom/github/javaparser/ast/Node;)Ljava/util/Collection;" line="251"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueAsStringAttribute" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueAsBooleanAttribute" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Boolean;" line="264"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawValue" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="268"><counter type="INSTRUCTION" missed="27" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNull" desc="(Lcom/github/javaparser/ast/Node;)Z" line="283"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullOrNotPresent" desc="(Lcom/github/javaparser/ast/Node;)Z" line="287"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullOrEmpty" desc="(Lcom/github/javaparser/ast/Node;)Z" line="298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$fromCamelCaseName$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/observer/ObservableProperty;)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="1067"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="171" covered="1265"/><counter type="BRANCH" missed="11" covered="19"/><counter type="LINE" missed="21" covered="144"/><counter type="COMPLEXITY" missed="15" covered="22"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/observer/PropagatingAstObserver$1" sourcefilename="PropagatingAstObserver.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concretePropertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concreteListChange" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/observer/AstObserver$ListChangeType;ILcom/github/javaparser/ast/Node;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/observer/AstObserver$ListChangeType" sourcefilename="AstObserver.java"><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/observer/PropagatingAstObserver" sourcefilename="PropagatingAstObserver.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformInPropagatingObserver" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)Lcom/github/javaparser/ast/observer/PropagatingAstObserver;" line="37"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listChange" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/observer/AstObserver$ListChangeType;ILcom/github/javaparser/ast/Node;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listReplacement" desc="(Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="77"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concretePropertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="87"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="concreteListChange" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/observer/AstObserver$ListChangeType;ILcom/github/javaparser/ast/Node;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concreteListReplacement" desc="(Lcom/github/javaparser/ast/NodeList;ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="95"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parentChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="considerRemoving" desc="(Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="considerAdding" desc="(Ljava/lang/Object;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="91"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="4" covered="29"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ObservableProperty.java"><line nr="35" mi="0" ci="388" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="20" mb="0" cb="0"/><line nr="137" mi="0" ci="32" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="2" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="7" ci="0" mb="2" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="1" cb="1"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="24" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="1" cb="1"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="26" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="26" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="2"/><line nr="270" mi="0" ci="11" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="2"/><line nr="272" mi="0" ci="11" mb="0" cb="0"/><line nr="276" mi="0" ci="11" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="26" ci="0" mb="0" cb="0"/><line nr="283" mi="9" ci="0" mb="2" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="1" cb="1"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="8" mb="0" cb="2"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="171" covered="1328"/><counter type="BRANCH" missed="11" covered="19"/><counter type="LINE" missed="21" covered="150"/><counter type="COMPLEXITY" missed="15" covered="24"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AstObserverAdapter.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AstObserver.java"><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropagatingAstObserver.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="120"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="4" covered="35"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="178" covered="1478"/><counter type="BRANCH" missed="14" covered="32"/><counter type="LINE" missed="26" covered="192"/><counter type="COMPLEXITY" missed="21" covered="47"/><counter type="METHOD" missed="10" covered="35"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/github/javaparser/ast/visitor"><class name="com/github/javaparser/ast/visitor/GenericVisitorWithDefaults" sourcefilename="GenericVisitorWithDefaults.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultAction" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultAction" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="145"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="165"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="175"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="180"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="185"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="205"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="225"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="230"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)Ljava/lang/Object;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="245"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;" line="260"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="285"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="295"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)Ljava/lang/Object;" line="300"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;" line="305"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)Ljava/lang/Object;" line="310"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)Ljava/lang/Object;" line="315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)Ljava/lang/Object;" line="320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)Ljava/lang/Object;" line="325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)Ljava/lang/Object;" line="330"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)Ljava/lang/Object;" line="335"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="340"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="350"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)Ljava/lang/Object;" line="360"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="365"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="370"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="375"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="380"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="385"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="390"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="395"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="400"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)Ljava/lang/Object;" line="405"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="410"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="415"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)Ljava/lang/Object;" line="420"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="425"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Ljava/lang/Object;" line="430"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="435"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="440"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="445"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="450"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)Ljava/lang/Object;" line="455"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)Ljava/lang/Object;" line="460"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Ljava/lang/Object;" line="465"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="470"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="475"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="480"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="485"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="490"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="495"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="500"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)Ljava/lang/Object;" line="510"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)Ljava/lang/Object;" line="515"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="520"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="477" covered="0"/><counter type="LINE" missed="97" covered="0"/><counter type="COMPLEXITY" missed="97" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/visitor/EqualsVisitor" sourcefilename="EqualsVisitor.java"><method name="equals" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commonNodeEquality" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="57"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodesEquals" desc="(Ljava/util/List;Ljava/util/List;)Z" line="64"><counter type="INSTRUCTION" missed="10" covered="32"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodesEquals" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)Z" line="81"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeEquals" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeEquals" desc="(Ljava/util/Optional;Ljava/util/Optional;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodesEquals" desc="(Ljava/util/Optional;Ljava/util/Optional;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objEquals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="134"><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="150"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="162"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="176"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="186"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="196"><counter type="INSTRUCTION" missed="21" covered="77"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="220"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="240"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="256"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="272"><counter type="INSTRUCTION" missed="53" covered="13"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="290"><counter type="INSTRUCTION" missed="26" covered="20"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="304"><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="318"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="342"><counter type="INSTRUCTION" missed="21" covered="85"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="368"><counter type="INSTRUCTION" missed="18" covered="60"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="388"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="402"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="412"><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="428"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="440"><counter type="INSTRUCTION" missed="9" covered="37"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="454"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="466"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="478"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="490"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="500"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="514"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="524"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="536"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="550"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="560"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="574"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="588"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="600"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="610"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="624"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="634"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="648"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="660"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="670"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="680"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="690"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="700"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="710"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="720"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="728"><counter type="INSTRUCTION" missed="9" covered="47"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="744"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="754"><counter type="INSTRUCTION" missed="18" covered="48"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="772"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="784"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="794"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="804"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="814"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="826"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="840"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="850"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="862"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="874"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="886"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="902"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="912"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="924"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="934"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="946"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="954"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="964"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="976"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="990"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1000"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1010"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1024"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1036"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1046"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1058"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1072"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1088"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1098"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1110"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1126"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1138"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1152"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1166"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1176"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1190"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1195"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1211"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1223"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1235"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1247"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1257"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1269"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1277"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1291"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1301"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1311"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2706" covered="1183"/><counter type="BRANCH" missed="504" covered="164"/><counter type="LINE" missed="624" covered="230"/><counter type="COMPLEXITY" missed="361" covered="76"/><counter type="METHOD" missed="63" covered="40"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitor" sourcefilename="ObjectIdentityHashCodeVisitor.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="(Lcom/github/javaparser/ast/Node;)I" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Void;)Ljava/lang/Integer;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Void;)Ljava/lang/Integer;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Void;)Ljava/lang/Integer;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Void;)Ljava/lang/Integer;" line="122"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Void;)Ljava/lang/Integer;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="130"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="150"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="154"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="158"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="162"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="166"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="194"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="198"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="202"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="206"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="210"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="222"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="226"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="234"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="238"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Void;)Ljava/lang/Integer;" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="246"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="250"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="254"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="258"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Void;)Ljava/lang/Integer;" line="262"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)Ljava/lang/Integer;" line="266"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="270"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="274"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="278"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="282"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="286"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Void;)Ljava/lang/Integer;" line="290"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="294"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Void;)Ljava/lang/Integer;" line="298"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="302"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="306"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="310"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Void;)Ljava/lang/Integer;" line="314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="318"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="322"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="326"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="330"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="334"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="338"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="342"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="346"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="350"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Void;)Ljava/lang/Integer;" line="354"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="358"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;)Ljava/lang/Integer;" line="362"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Void;)Ljava/lang/Integer;" line="366"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="370"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Void;)Ljava/lang/Integer;" line="374"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="378"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="382"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="387"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="392"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="397"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="407"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="412"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Void;)Ljava/lang/Integer;" line="417"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Void;)Ljava/lang/Integer;" line="422"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="427"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="379" covered="12"/><counter type="LINE" missed="94" covered="3"/><counter type="COMPLEXITY" missed="94" covered="3"/><counter type="METHOD" missed="94" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/CloneVisitor" sourcefilename="CloneVisitor.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="43"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="56"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="66"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="77"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="85"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="93"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="108"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="122"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="134"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="146"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="159"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="170"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="181"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="197"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="214"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="227"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="237"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="245"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="257"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="266"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="276"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="286"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="296"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="306"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="315"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="326"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="335"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="345"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="356"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="365"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="375"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="385"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="395"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="404"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="415"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="424"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="435"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="445"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="453"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="461"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="469"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="477"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="485"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="493"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="501"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="513"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="522"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="535"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="544"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="552"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="561"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="570"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="579"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="590"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="599"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="609"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="619"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="629"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="640"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="649"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="659"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="668"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="678"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="686"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="695"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="705"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="715"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="724"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="733"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="744"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="754"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="763"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="773"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="784"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="796"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="805"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="815"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="827"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="837"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="847"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="857"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="866"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/Node;" line="878"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="887"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="898"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cloneNode" desc="(Ljava/util/Optional;Ljava/lang/Object;)Lcom/github/javaparser/ast/Node;" line="908"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneNode" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/Object;)Lcom/github/javaparser/ast/Node;" line="920"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cloneList" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Lcom/github/javaparser/ast/NodeList;" line="931"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="939"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="949"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="959"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="968"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="978"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="986"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="997"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1006"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1014"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2192" covered="1458"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="352" covered="236"/><counter type="COMPLEXITY" missed="65" covered="40"/><counter type="METHOD" missed="61" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/NoCommentHashCodeVisitor" sourcefilename="NoCommentHashCodeVisitor.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="(Lcom/github/javaparser/ast/Node;)I" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="42"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="46"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="50"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="54"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Void;)Ljava/lang/Integer;" line="58"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Void;)Ljava/lang/Integer;" line="66"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="70"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="74"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="78"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="94"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="98"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Void;)Ljava/lang/Integer;" line="102"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="110"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="114"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Void;)Ljava/lang/Integer;" line="118"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Void;)Ljava/lang/Integer;" line="122"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="126"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="130"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="134"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="138"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="142"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="150"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="154"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="158"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="162"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="166"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="170"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="174"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="178"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="182"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="186"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="190"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="194"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="198"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="202"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="206"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="210"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="214"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="218"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="222"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="226"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="230"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="234"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Void;)Ljava/lang/Integer;" line="238"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="242"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="246"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="250"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="254"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Void;)Ljava/lang/Integer;" line="258"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)Ljava/lang/Integer;" line="262"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="270"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="274"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="278"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="282"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="286"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Void;)Ljava/lang/Integer;" line="290"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="294"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Void;)Ljava/lang/Integer;" line="298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="302"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="306"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="310"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Void;)Ljava/lang/Integer;" line="314"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="318"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="322"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="326"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="330"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="334"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="338"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="342"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="346"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="350"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Void;)Ljava/lang/Integer;" line="354"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="358"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;)Ljava/lang/Integer;" line="362"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Void;)Ljava/lang/Integer;" line="366"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="370"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Void;)Ljava/lang/Integer;" line="374"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="378"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="382"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="387"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="392"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="397"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="402"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="407"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="412"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Void;)Ljava/lang/Integer;" line="417"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Void;)Ljava/lang/Integer;" line="422"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="427"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2297" covered="0"/><counter type="BRANCH" missed="84" covered="0"/><counter type="LINE" missed="101" covered="0"/><counter type="COMPLEXITY" missed="139" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/visitor/ModifierVisitor" sourcefilename="ModifierVisitor.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="53"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="70"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="89"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="102"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="117"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="126"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="139"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="152"><counter type="INSTRUCTION" missed="14" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="167"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="176"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="183"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="192"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="205"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="218"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="225"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="236"><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="259"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="276"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="291"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="306"><counter type="INSTRUCTION" missed="2" covered="106"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="331"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="340"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="353"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="360"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="367"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="378"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="395"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="416"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="429"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="440"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="455"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="470"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="485"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="502"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="517"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="530"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="543"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="550"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="557"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="570"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="577"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="588"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="601"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="618"><counter type="INSTRUCTION" missed="2" covered="120"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="645"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="656"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="669"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="676"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="695"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="708"><counter type="INSTRUCTION" missed="2" covered="72"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="727"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="736"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="745"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="752"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="765"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="776"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="789"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="802"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="811"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="824"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="831"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="840"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="851"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="864"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="877"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="886"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="897"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="914"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="925"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="940"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="951"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="960"><counter type="INSTRUCTION" missed="18" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="975"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="990"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="999"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1012"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1025"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1038"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1051"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1062"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/Node;" line="1087"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1098"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1105"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modifyList" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Lcom/github/javaparser/ast/NodeList;" line="1111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="modifyList" desc="(Ljava/util/Optional;Ljava/lang/Object;)Lcom/github/javaparser/ast/NodeList;" line="1115"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1119"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1133"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1146"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1159"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1172"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1183"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1196"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1203"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1218"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1227"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)Lcom/github/javaparser/ast/visitor/Visitable;" line="1234"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$118" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1236"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$117" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1227"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$116" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1219"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$115" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1206"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$114" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1196"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$113" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$112" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$111" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$110" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1148"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$109" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1135"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$108" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1122"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$modifyList$107" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/NodeList;" line="1115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$106" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$105" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1098"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$104" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1088"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$103" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1052"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$102" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1040"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$101" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1027"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$100" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1015"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$99" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/ReferenceType;" line="1013"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$98" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/type/ReferenceType;" line="1012"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$97" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="1001"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$96" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="991"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$95" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="978"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$94" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="975"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$93" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="963"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$92" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="952"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$91" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="941"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$90" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="928"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$89" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="915"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$88" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="901"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$87" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/BlockStmt;" line="898"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$86" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="887"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$85" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="878"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$84" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="877"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$83" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="866"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$82" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="853"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$81" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="842"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$80" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="832"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$79" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="831"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$78" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="824"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$77" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="813"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$76" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="803"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$75" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="802"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$74" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="791"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$73" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="778"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$72" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="767"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$71" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="766"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$70" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="754"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$69" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="745"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$68" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="737"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$67" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="728"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$66" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/expr/Name;" line="727"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$65" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="713"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$64" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="697"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$63" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="681"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$62" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="678"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$61" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="669"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$60" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="658"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$59" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="646"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$58" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="627"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$57" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/ReceiverParameter;)Lcom/github/javaparser/ast/body/ReceiverParameter;" line="623"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$56" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/BlockStmt;" line="618"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$55" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="605"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$54" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="603"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$53" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="590"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$52" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="578"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$51" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="570"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$50" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="559"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$49" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="550"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$48" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="543"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$47" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="532"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$46" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="519"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$45" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="505"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$44" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/Statement;" line="503"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$43" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="489"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$42" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="486"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$41" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="473"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$40" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="458"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$39" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="443"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$38" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="430"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$37" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="419"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$36" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="417"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$35" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="401"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$34" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="382"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$33" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="368"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$32" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="360"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$31" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="353"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$30" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="342"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$29" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="332"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$28" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/expr/SimpleName;" line="331"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$27" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="314"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$26" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/ReceiverParameter;)Lcom/github/javaparser/ast/body/ReceiverParameter;" line="310"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$25" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="294"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$24" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="280"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$23" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/PackageDeclaration;)Lcom/github/javaparser/ast/PackageDeclaration;" line="278"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$22" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/modules/ModuleDeclaration;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="277"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$21" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$20" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="260"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$19" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="243"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$18" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="226"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$17" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="218"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$16" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="207"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$15" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="194"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$14" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="184"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$13" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="183"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$12" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="176"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$11" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$10" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="154"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$9" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="141"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$8" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$7" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$6" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$5" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$4" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$3" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="91"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$2" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="75"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$1" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/expr/Expression;" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$0" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/Comment;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3456" covered="1257"/><counter type="BRANCH" missed="148" covered="36"/><counter type="LINE" missed="574" covered="236"/><counter type="COMPLEXITY" missed="266" covered="42"/><counter type="METHOD" missed="182" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/GenericVisitorAdapter" sourcefilename="GenericVisitorAdapter.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="176"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="197"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="239"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="265"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="282"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)Ljava/lang/Object;" line="303"><counter type="INSTRUCTION" missed="16" covered="22"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="335"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="351"><counter type="INSTRUCTION" missed="54" covered="34"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="17" covered="9"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)Ljava/lang/Object;" line="397"><counter type="INSTRUCTION" missed="40" covered="30"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="11" covered="8"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)Ljava/lang/Object;" line="428"><counter type="INSTRUCTION" missed="34" covered="36"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="459"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="485"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="535"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="552"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="572"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="583"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="595"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="611"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="642"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="683"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="709"><counter type="INSTRUCTION" missed="18" covered="10"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="725"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="751"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="777"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="803"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="834"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="860"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="881"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="901"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)Ljava/lang/Object;" line="912"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="924"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="944"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="956"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)Ljava/lang/Object;" line="972"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="993"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="1023"><counter type="INSTRUCTION" missed="104" covered="16"/><counter type="BRANCH" missed="24" covered="2"/><counter type="LINE" missed="30" covered="4"/><counter type="COMPLEXITY" missed="13" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1080"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1096"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1116"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1127"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="1164"><counter type="INSTRUCTION" missed="16" covered="22"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)Ljava/lang/Object;" line="1185"><counter type="INSTRUCTION" missed="22" covered="46"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="8" covered="12"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)Ljava/lang/Object;" line="1221"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)Ljava/lang/Object;" line="1236"><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)Ljava/lang/Object;" line="1252"><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)Ljava/lang/Object;" line="1264"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)Ljava/lang/Object;" line="1285"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)Ljava/lang/Object;" line="1306"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)Ljava/lang/Object;" line="1327"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1347"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1364"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1384"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1395"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)Ljava/lang/Object;" line="1412"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1433"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1454"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1474"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1491"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1507"><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1538"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="1554"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1580"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)Ljava/lang/Object;" line="1596"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1612"><counter type="INSTRUCTION" missed="22" covered="26"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)Ljava/lang/Object;" line="1637"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)Ljava/lang/Object;" line="1664"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1680"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Ljava/lang/Object;" line="1700"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1727"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1748"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="1769"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="1785"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)Ljava/lang/Object;" line="1800"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)Ljava/lang/Object;" line="1811"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Ljava/lang/Object;" line="1821"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)Ljava/lang/Object;" line="1834"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="1860"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="1881"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="1902"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="1923"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)Ljava/lang/Object;" line="1939"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)Ljava/lang/Object;" line="1959"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)Ljava/lang/Object;" line="1971"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)Ljava/lang/Object;" line="1997"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)Ljava/lang/Object;" line="2012"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)Ljava/lang/Object;" line="2024"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3482" covered="339"/><counter type="BRANCH" missed="778" covered="48"/><counter type="LINE" missed="992" covered="91"/><counter type="COMPLEXITY" missed="489" covered="19"/><counter type="METHOD" missed="80" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/HashCodeVisitor" sourcefilename="HashCodeVisitor.java"><method name="hashCode" desc="(Lcom/github/javaparser/ast/Node;)I" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="50"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="54"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="58"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="62"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Void;)Ljava/lang/Integer;" line="66"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="70"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Void;)Ljava/lang/Integer;" line="74"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="78"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="82"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="86"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="90"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="94"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="98"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="102"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="106"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Void;)Ljava/lang/Integer;" line="110"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="114"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="118"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="122"><counter type="INSTRUCTION" missed="2" covered="94"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Void;)Ljava/lang/Integer;" line="126"><counter type="INSTRUCTION" missed="30" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Void;)Ljava/lang/Integer;" line="130"><counter type="INSTRUCTION" missed="20" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="134"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="138"><counter type="INSTRUCTION" missed="20" covered="85"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="142"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="146"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="150"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="154"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="158"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="162"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="166"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="170"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="174"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="178"><counter type="INSTRUCTION" missed="20" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="182"><counter type="INSTRUCTION" missed="10" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="186"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="190"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="194"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="198"><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="202"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="206"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="210"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="214"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="218"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="222"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="226"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Void;)Ljava/lang/Integer;" line="230"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="234"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="238"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="242"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Void;)Ljava/lang/Integer;" line="246"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="250"><counter type="INSTRUCTION" missed="20" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="254"><counter type="INSTRUCTION" missed="21" covered="102"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="258"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="262"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Void;)Ljava/lang/Integer;" line="266"><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Void;)Ljava/lang/Integer;" line="270"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="278"><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="282"><counter type="INSTRUCTION" missed="9" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="286"><counter type="INSTRUCTION" missed="31" covered="60"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="290"><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="294"><counter type="INSTRUCTION" missed="12" covered="64"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Void;)Ljava/lang/Integer;" line="298"><counter type="INSTRUCTION" missed="10" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="302"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Void;)Ljava/lang/Integer;" line="306"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="310"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="314"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="318"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Void;)Ljava/lang/Integer;" line="322"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="326"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="330"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="334"><counter type="INSTRUCTION" missed="20" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="338"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="342"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="346"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="350"><counter type="INSTRUCTION" missed="10" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="354"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Void;)Ljava/lang/Integer;" line="358"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Void;)Ljava/lang/Integer;" line="362"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="366"><counter type="INSTRUCTION" missed="10" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Void;)Ljava/lang/Integer;" line="370"><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Void;)Ljava/lang/Integer;" line="374"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="378"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Void;)Ljava/lang/Integer;" line="382"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Void;)Ljava/lang/Integer;" line="386"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="390"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="395"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="400"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="405"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Void;)Ljava/lang/Integer;" line="410"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Void;)Ljava/lang/Integer;" line="415"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Void;)Ljava/lang/Integer;" line="420"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Void;)Ljava/lang/Integer;" line="425"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Void;)Ljava/lang/Integer;" line="430"><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Void;)Ljava/lang/Integer;" line="435"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2606" covered="1386"/><counter type="BRANCH" missed="199" covered="71"/><counter type="LINE" missed="55" covered="45"/><counter type="COMPLEXITY" missed="180" covered="51"/><counter type="METHOD" missed="55" covered="41"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/VoidVisitorAdapter" sourcefilename="VoidVisitorAdapter.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)V" line="240"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)V" line="265"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)V" line="273"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)V" line="289"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)V" line="306"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)V" line="313"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)V" line="325"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)V" line="337"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)V" line="342"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)V" line="353"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)V" line="360"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)V" line="383"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)V" line="389"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)V" line="401"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)V" line="411"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)V" line="418"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)V" line="428"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)V" line="440"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)V" line="445"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)V" line="452"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)V" line="459"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)V" line="466"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)V" line="473"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)V" line="479"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)V" line="486"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)V" line="491"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)V" line="497"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)V" line="504"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)V" line="511"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)V" line="518"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)V" line="530"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)V" line="545"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)V" line="553"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)V" line="559"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)V" line="573"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)V" line="581"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)V" line="587"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)V" line="594"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)V" line="602"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)V" line="609"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)V" line="616"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)V" line="622"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)V" line="629"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)V" line="634"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)V" line="648"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)V" line="655"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)V" line="662"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)V" line="668"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)V" line="675"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)V" line="680"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)V" line="688"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)V" line="694"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)V" line="699"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$210" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="701"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$209" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/SwitchEntry;)V" line="699"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$208" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="694"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$207" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="689"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$206" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="688"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$205" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="683"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$204" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="680"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$203" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="675"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$202" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="670"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$201" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Name;)V" line="668"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$200" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="663"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$199" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="657"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$198" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Name;)V" line="656"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$197" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="650"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$196" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Name;)V" line="648"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$195" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="643"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$194" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$193" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="637"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$192" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/modules/ModuleDirective;)V" line="635"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$191" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="634"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$190" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="630"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$189" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$188" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="611"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$187" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="610"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$186" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="610"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$185" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="604"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$184" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/Parameter;)V" line="603"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$183" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="597"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$182" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="596"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$181" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="595"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$180" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="594"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$179" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="589"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$178" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="582"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$177" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="581"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$176" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="576"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$175" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="573"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$174" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="568"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$173" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="567"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$172" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="566"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$171" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$170" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="560"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$169" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="559"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$168" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="554"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$167" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="548"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$166" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="547"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$165" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="546"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$164" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="540"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$163" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="534"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$162" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="532"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$161" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="531"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$160" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/CatchClause;)V" line="530"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$159" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="525"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$158" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="519"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$157" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="518"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$156" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="513"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$155" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="506"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$154" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/SwitchEntry;)V" line="504"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$153" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="499"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$152" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/Statement;)V" line="498"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$151" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="497"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$150" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="492"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$149" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="491"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$148" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="486"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$147" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="481"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$146" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="474"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$145" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="473"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$144" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="468"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$143" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="467"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$142" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="466"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$141" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="461"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$140" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="460"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$139" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="459"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$138" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="454"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$137" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="453"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$136" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="452"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$135" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="447"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$134" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$133" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="440"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$132" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="435"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$131" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Name;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$130" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="429"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$129" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="428"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$128" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="423"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$127" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="422"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$126" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="419"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$125" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="418"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$124" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="413"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$123" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="411"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$122" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="406"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$121" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$120" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$119" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="403"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$118" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="402"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$117" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="401"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$116" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="401"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$115" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$114" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="391"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$113" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/MemberValuePair;)V" line="389"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$112" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="384"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$111" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="378"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$110" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$109" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/TypeParameter;)V" line="376"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$108" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="375"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$107" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="374"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$106" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/Parameter;)V" line="373"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$105" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="371"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$104" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$103" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="364"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$102" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$101" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$100" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="362"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$99" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="360"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$98" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$97" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="348"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$96" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$95" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="337"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$94" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="332"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$93" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="325"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$92" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$91" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="315"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$90" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="308"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$89" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="307"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$88" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$87" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/Statement;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$86" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$85" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="292"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$84" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="291"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$83" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="290"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$82" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$81" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$80" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$79" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="274"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$78" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="273"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$77" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$76" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="267"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$75" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$74" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$73" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="254"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$72" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$71" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$70" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$69" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$68" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$67" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$66" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="243"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$65" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$64" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$63" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/EnumConstantDeclaration;)V" line="240"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$62" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$61" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$60" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$59" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$58" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="226"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$57" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="220"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$56" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="215"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$55" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$54" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$53" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$52" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$51" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$50" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/TypeParameter;)V" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$49" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ReferenceType;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$48" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$47" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/Parameter;)V" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$46" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$45" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$44" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$43" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/TypeDeclaration;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$42" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/PackageDeclaration;)V" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$41" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/modules/ModuleDeclaration;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$40" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/ImportDeclaration;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$39" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$38" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$37" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/NodeList;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$36" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/Type;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$35" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$34" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$33" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$32" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$31" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$30" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/TypeParameter;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$29" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$28" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$27" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$26" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$25" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$24" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$23" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$22" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$21" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$20" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$19" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/stmt/Statement;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$18" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$17" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$16" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$15" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$14" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$13" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$12" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$11" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$10" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/ArrayCreationLevel;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$9" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$8" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$7" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$6" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$5" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$4" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/Expression;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$3" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/comments/Comment;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$2" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/expr/AnnotationExpr;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$1" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Modifier;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$0" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="346" covered="2462"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="380"/><counter type="COMPLEXITY" missed="68" covered="239"/><counter type="METHOD" missed="67" covered="239"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/NoCommentEqualsVisitor" sourcefilename="NoCommentEqualsVisitor.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodesEquals" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)Z" line="43"><counter type="INSTRUCTION" missed="6" covered="33"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeEquals" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="61"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeEquals" desc="(Ljava/util/Optional;Ljava/util/Optional;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodesEquals" desc="(Ljava/util/Optional;Ljava/util/Optional;)Z" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="objEquals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="82"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="93"><counter type="INSTRUCTION" missed="9" covered="37"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="107"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="117"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="139"><counter type="INSTRUCTION" missed="21" covered="67"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="161"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="179"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="193"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="207"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="223"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="235"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="247"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="269"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="293"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="311"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="323"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="328"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="342"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="352"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="364"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="374"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="384"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="394"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="402"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="414"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="422"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="432"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="444"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="452"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="464"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="476"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="486"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="494"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="506"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="514"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="526"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="536"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="544"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="552"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="560"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="568"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="576"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="584"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="589"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="603"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="611"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="627"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="637"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="645"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="653"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="661"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="671"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="683"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="691"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="701"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="711"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="721"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="735"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="743"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="753"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="761"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="771"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="776"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="784"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="794"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="806"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="814"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="822"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="834"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="844"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="852"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="862"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="874"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="888"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="896"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="906"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="920"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="930"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="942"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="954"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="962"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="974"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="979"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="993"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1003"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1013"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1023"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1031"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1041"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1046"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1058"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1066"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="1074"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2638" covered="211"/><counter type="BRANCH" missed="427" covered="33"/><counter type="LINE" missed="600" covered="42"/><counter type="COMPLEXITY" missed="315" covered="17"/><counter type="METHOD" missed="92" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/VoidVisitorWithDefaults" sourcefilename="VoidVisitorWithDefaults.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultAction" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultAction" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)V" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)V" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)V" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)V" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)V" line="98"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)V" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)V" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)V" line="123"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)V" line="128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)V" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)V" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)V" line="148"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)V" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)V" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)V" line="163"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)V" line="168"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)V" line="173"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)V" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)V" line="183"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)V" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)V" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)V" line="198"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)V" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)V" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)V" line="213"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)V" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)V" line="223"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)V" line="228"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)V" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)V" line="238"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)V" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)V" line="248"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)V" line="253"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)V" line="258"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)V" line="263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)V" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)V" line="273"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)V" line="278"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)V" line="283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)V" line="288"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)V" line="293"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)V" line="298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)V" line="303"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)V" line="308"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)V" line="313"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)V" line="318"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)V" line="323"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)V" line="328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)V" line="333"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)V" line="338"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)V" line="343"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)V" line="348"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)V" line="353"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)V" line="358"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)V" line="363"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)V" line="368"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)V" line="373"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)V" line="378"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)V" line="383"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)V" line="388"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)V" line="393"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)V" line="398"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)V" line="403"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)V" line="408"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)V" line="413"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)V" line="418"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)V" line="423"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)V" line="428"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)V" line="433"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)V" line="438"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)V" line="443"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)V" line="448"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)V" line="453"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)V" line="458"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)V" line="463"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)V" line="467"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)V" line="471"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)V" line="476"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)V" line="481"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)V" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)V" line="491"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)V" line="496"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)V" line="501"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)V" line="506"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)V" line="511"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)V" line="516"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="475" covered="0"/><counter type="LINE" missed="191" covered="0"/><counter type="COMPLEXITY" missed="97" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/visitor/ObjectIdentityEqualsVisitor" sourcefilename="ObjectIdentityEqualsVisitor.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="43"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="93"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="103"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="108"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="113"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="118"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="123"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="143"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="148"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="153"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="158"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="163"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="168"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="173"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="178"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="183"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="188"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="193"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="198"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="203"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="208"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="213"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="218"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="223"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="228"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="233"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="238"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="243"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="248"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="253"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="258"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="263"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="268"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="273"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="278"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="283"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="288"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="293"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="298"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="303"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="308"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="313"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="318"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="323"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="328"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="333"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="338"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="343"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="348"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="353"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="358"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="363"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="368"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="373"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="378"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="383"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="388"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="393"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="398"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="403"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="408"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="413"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="418"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="423"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="428"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="433"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="438"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="443"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="448"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="453"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="458"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="463"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="468"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="473"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="478"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="483"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="488"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="493"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="498"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="503"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="508"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Lcom/github/javaparser/ast/visitor/Visitable;)Ljava/lang/Boolean;" line="513"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="751" covered="16"/><counter type="BRANCH" missed="186" covered="2"/><counter type="LINE" missed="94" covered="3"/><counter type="COMPLEXITY" missed="187" covered="4"/><counter type="METHOD" missed="94" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/TreeVisitor" sourcefilename="TreeVisitor.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLeavesFirst" desc="(Lcom/github/javaparser/ast/Node;)V" line="38"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPreOrder" desc="(Lcom/github/javaparser/ast/Node;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostOrder" desc="(Lcom/github/javaparser/ast/Node;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDepthFirst" desc="(Lcom/github/javaparser/ast/Node;)V" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitBreadthFirst" desc="(Lcom/github/javaparser/ast/Node;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDirectChildren" desc="(Lcom/github/javaparser/ast/Node;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="74"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/visitor/GenericListVisitorAdapter" sourcefilename="GenericListVisitorAdapter.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="47"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayAccessExpr;Ljava/lang/Object;)Ljava/util/List;" line="114"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayCreationExpr;Ljava/lang/Object;)Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ArrayCreationLevel;Ljava/lang/Object;)Ljava/util/List;" line="161"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ArrayInitializerExpr;Ljava/lang/Object;)Ljava/util/List;" line="182"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ArrayType;Ljava/lang/Object;)Ljava/util/List;" line="198"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/AssertStmt;Ljava/lang/Object;)Ljava/util/List;" line="219"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Ljava/lang/Object;)Ljava/util/List;" line="240"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BinaryExpr;Ljava/lang/Object;)Ljava/util/List;" line="261"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/BlockComment;Ljava/lang/Object;)Ljava/util/List;" line="282"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Ljava/lang/Object;)Ljava/util/List;" line="293"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/BooleanLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="309"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/BreakStmt;Ljava/lang/Object;)Ljava/util/List;" line="320"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CastExpr;Ljava/lang/Object;)Ljava/util/List;" line="336"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Ljava/lang/Object;)Ljava/util/List;" line="357"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/CharLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="378"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ClassExpr;Ljava/lang/Object;)Ljava/util/List;" line="389"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="405"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Ljava/lang/Object;)Ljava/util/List;" line="451"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/lang/Object;)Ljava/util/List;" line="482"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ConditionalExpr;Ljava/lang/Object;)Ljava/util/List;" line="513"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="539"><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ContinueStmt;Ljava/lang/Object;)Ljava/util/List;" line="590"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/DoStmt;Ljava/lang/Object;)Ljava/util/List;" line="606"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/DoubleLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="627"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/EmptyStmt;Ljava/lang/Object;)Ljava/util/List;" line="638"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/EnclosedExpr;Ljava/lang/Object;)Ljava/util/List;" line="649"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="665"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="696"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;Ljava/lang/Object;)Ljava/util/List;" line="737"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ExpressionStmt;Ljava/lang/Object;)Ljava/util/List;" line="763"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/FieldAccessExpr;Ljava/lang/Object;)Ljava/util/List;" line="779"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="805"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForStmt;Ljava/lang/Object;)Ljava/util/List;" line="831"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ForEachStmt;Ljava/lang/Object;)Ljava/util/List;" line="862"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/IfStmt;Ljava/lang/Object;)Ljava/util/List;" line="888"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="914"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/InitializerDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="930"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/InstanceOfExpr;Ljava/lang/Object;)Ljava/util/List;" line="951"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="972"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/IntersectionType;Ljava/lang/Object;)Ljava/util/List;" line="983"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;Ljava/lang/Object;)Ljava/util/List;" line="1004"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LabeledStmt;Ljava/lang/Object;)Ljava/util/List;" line="1015"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Ljava/lang/Object;)Ljava/util/List;" line="1036"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/comments/LineComment;Ljava/lang/Object;)Ljava/util/List;" line="1057"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;Ljava/lang/Object;)Ljava/util/List;" line="1068"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="1084"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MarkerAnnotationExpr;Ljava/lang/Object;)Ljava/util/List;" line="1095"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MemberValuePair;Ljava/lang/Object;)Ljava/util/List;" line="1111"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodCallExpr;Ljava/lang/Object;)Ljava/util/List;" line="1132"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="1163"><counter type="INSTRUCTION" missed="154" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/MethodReferenceExpr;Ljava/lang/Object;)Ljava/util/List;" line="1219"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NameExpr;Ljava/lang/Object;)Ljava/util/List;" line="1240"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Ljava/lang/Object;)Ljava/util/List;" line="1256"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;Ljava/lang/Object;)Ljava/util/List;" line="1272"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/NullLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="1293"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ObjectCreationExpr;Ljava/lang/Object;)Ljava/util/List;" line="1304"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="1340"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/Parameter;Ljava/lang/Object;)Ljava/util/List;" line="1361"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/PrimitiveType;Ljava/lang/Object;)Ljava/util/List;" line="1397"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ReturnStmt;Ljava/lang/Object;)Ljava/util/List;" line="1413"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Ljava/lang/Object;)Ljava/util/List;" line="1429"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SingleMemberAnnotationExpr;Ljava/lang/Object;)Ljava/util/List;" line="1440"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/StringLiteralExpr;Ljava/lang/Object;)Ljava/util/List;" line="1461"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SuperExpr;Ljava/lang/Object;)Ljava/util/List;" line="1472"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;Ljava/lang/Object;)Ljava/util/List;" line="1488"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SwitchStmt;Ljava/lang/Object;)Ljava/util/List;" line="1509"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/SynchronizedStmt;Ljava/lang/Object;)Ljava/util/List;" line="1530"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/ThisExpr;Ljava/lang/Object;)Ljava/util/List;" line="1551"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/ThrowStmt;Ljava/lang/Object;)Ljava/util/List;" line="1567"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/TryStmt;Ljava/lang/Object;)Ljava/util/List;" line="1583"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/TypeExpr;Ljava/lang/Object;)Ljava/util/List;" line="1614"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/TypeParameter;Ljava/lang/Object;)Ljava/util/List;" line="1630"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/UnaryExpr;Ljava/lang/Object;)Ljava/util/List;" line="1656"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnionType;Ljava/lang/Object;)Ljava/util/List;" line="1672"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/UnknownType;Ljava/lang/Object;)Ljava/util/List;" line="1693"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/Object;)Ljava/util/List;" line="1709"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;Ljava/lang/Object;)Ljava/util/List;" line="1735"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VoidType;Ljava/lang/Object;)Ljava/util/List;" line="1761"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/WhileStmt;Ljava/lang/Object;)Ljava/util/List;" line="1777"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/WildcardType;Ljava/lang/Object;)Ljava/util/List;" line="1798"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/Object;)Ljava/util/List;" line="1825"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;Ljava/lang/Object;)Ljava/util/List;" line="1830"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleExportsDirective;Ljava/lang/Object;)Ljava/util/List;" line="1857"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleOpensDirective;Ljava/lang/Object;)Ljava/util/List;" line="1879"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;Ljava/lang/Object;)Ljava/util/List;" line="1901"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Ljava/lang/Object;)Ljava/util/List;" line="1923"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleUsesDirective;Ljava/lang/Object;)Ljava/util/List;" line="1945"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/UnparsableStmt;Ljava/lang/Object;)Ljava/util/List;" line="1962"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;Ljava/lang/Object;)Ljava/util/List;" line="1974"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/type/VarType;Ljava/lang/Object;)Ljava/util/List;" line="2001"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/Modifier;Ljava/lang/Object;)Ljava/util/List;" line="2018"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SwitchExpr;Ljava/lang/Object;)Ljava/util/List;" line="2030"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visit$0" desc="(Ljava/lang/Object;Lcom/github/javaparser/ast/Node;)Ljava/util/stream/Stream;" line="1825"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5048" covered="0"/><counter type="BRANCH" missed="822" covered="0"/><counter type="LINE" missed="1171" covered="0"/><counter type="COMPLEXITY" missed="507" covered="0"/><counter type="METHOD" missed="96" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="GenericVisitorAdapter.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="2" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="2" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="2" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="2" cb="0"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="2" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="2" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="2" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="2" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="2" cb="0"/><line nr="186" mi="8" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="2" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="2" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="2" cb="0"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="2" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="2" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="2" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="2" cb="0"/><line nr="228" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="2" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="2"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="1" cb="1"/><line nr="244" mi="8" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="2" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="2" cb="0"/><line nr="255" mi="8" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="2" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="2" cb="0"/><line nr="266" mi="8" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="2" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="2" cb="0"/><line nr="271" mi="8" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="2" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="2" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="6" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="2" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="2" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="2" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="1" cb="1"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="1" cb="1"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="1" cb="1"/><line nr="313" mi="8" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="2" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="2" cb="0"/><line nr="324" mi="8" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="2" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="2" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="2" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="2" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="1" cb="1"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="6" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="1" cb="1"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="1" cb="1"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="6" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="1" cb="1"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="2" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="6" ci="0" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="2" cb="0"/><line nr="378" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="2" cb="0"/><line nr="383" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="2" cb="0"/><line nr="386" mi="8" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="2" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="2" mb="1" cb="1"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="1" cb="1"/><line nr="402" mi="8" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="2" cb="0"/><line nr="404" mi="2" ci="0" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="1" cb="1"/><line nr="407" mi="8" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="2" cb="0"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="6" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="1" cb="1"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="1" cb="1"/><line nr="417" mi="8" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="2" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="1" cb="1"/><line nr="430" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="1" cb="1"/><line nr="433" mi="8" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="2" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="1" cb="1"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="1" cb="1"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="2" mb="1" cb="1"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="2" cb="0"/><line nr="448" mi="8" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="2" cb="0"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="6" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="2" cb="0"/><line nr="461" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="6" ci="0" mb="0" cb="0"/><line nr="465" mi="2" ci="0" mb="2" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="469" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="2" cb="0"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="2" cb="0"/><line nr="474" mi="8" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="2" cb="0"/><line nr="476" mi="2" ci="0" mb="0" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="6" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="2" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="6" ci="0" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="2" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="6" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="2" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="6" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="2" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="504" mi="4" ci="0" mb="2" cb="0"/><line nr="505" mi="8" ci="0" mb="0" cb="0"/><line nr="506" mi="2" ci="0" mb="2" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="510" mi="6" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="515" mi="6" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="2" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="520" mi="6" ci="0" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="2" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="2" cb="0"/><line nr="525" mi="8" ci="0" mb="0" cb="0"/><line nr="526" mi="2" ci="0" mb="2" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="529" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="2" cb="0"/><line nr="536" mi="8" ci="0" mb="0" cb="0"/><line nr="537" mi="2" ci="0" mb="2" cb="0"/><line nr="538" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="4" ci="0" mb="2" cb="0"/><line nr="541" mi="8" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="2" cb="0"/><line nr="543" mi="2" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="2" cb="0"/><line nr="554" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="6" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="2" cb="0"/><line nr="559" mi="2" ci="0" mb="0" cb="0"/><line nr="561" mi="4" ci="0" mb="2" cb="0"/><line nr="562" mi="8" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="2" cb="0"/><line nr="564" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="2" ci="0" mb="0" cb="0"/><line nr="572" mi="4" ci="0" mb="2" cb="0"/><line nr="573" mi="8" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="2" cb="0"/><line nr="575" mi="2" ci="0" mb="0" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="583" mi="4" ci="0" mb="2" cb="0"/><line nr="584" mi="8" ci="0" mb="0" cb="0"/><line nr="585" mi="2" ci="0" mb="2" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="2" ci="0" mb="0" cb="0"/><line nr="595" mi="6" ci="0" mb="0" cb="0"/><line nr="596" mi="2" ci="0" mb="2" cb="0"/><line nr="597" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="4" ci="0" mb="2" cb="0"/><line nr="600" mi="8" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="2" cb="0"/><line nr="602" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="611" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="2" ci="0" mb="2" cb="0"/><line nr="613" mi="2" ci="0" mb="0" cb="0"/><line nr="616" mi="6" ci="0" mb="0" cb="0"/><line nr="617" mi="2" ci="0" mb="2" cb="0"/><line nr="618" mi="2" ci="0" mb="0" cb="0"/><line nr="621" mi="6" ci="0" mb="0" cb="0"/><line nr="622" mi="2" ci="0" mb="2" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="626" mi="6" ci="0" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="2" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="4" ci="0" mb="2" cb="0"/><line nr="631" mi="8" ci="0" mb="0" cb="0"/><line nr="632" mi="2" ci="0" mb="2" cb="0"/><line nr="633" mi="2" ci="0" mb="0" cb="0"/><line nr="635" mi="2" ci="0" mb="0" cb="0"/><line nr="642" mi="6" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="2" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><line nr="647" mi="6" ci="0" mb="0" cb="0"/><line nr="648" mi="2" ci="0" mb="2" cb="0"/><line nr="649" mi="2" ci="0" mb="0" cb="0"/><line nr="652" mi="6" ci="0" mb="0" cb="0"/><line nr="653" mi="2" ci="0" mb="2" cb="0"/><line nr="654" mi="2" ci="0" mb="0" cb="0"/><line nr="657" mi="6" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="2" cb="0"/><line nr="659" mi="2" ci="0" mb="0" cb="0"/><line nr="662" mi="6" ci="0" mb="0" cb="0"/><line nr="663" mi="2" ci="0" mb="2" cb="0"/><line nr="664" mi="2" ci="0" mb="0" cb="0"/><line nr="667" mi="6" ci="0" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="2" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="671" mi="4" ci="0" mb="2" cb="0"/><line nr="672" mi="8" ci="0" mb="0" cb="0"/><line nr="673" mi="2" ci="0" mb="2" cb="0"/><line nr="674" mi="2" ci="0" mb="0" cb="0"/><line nr="676" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="6" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="2" cb="0"/><line nr="685" mi="2" ci="0" mb="0" cb="0"/><line nr="687" mi="4" ci="0" mb="2" cb="0"/><line nr="688" mi="8" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="2" cb="0"/><line nr="690" mi="2" ci="0" mb="0" cb="0"/><line nr="692" mi="4" ci="0" mb="2" cb="0"/><line nr="693" mi="8" ci="0" mb="0" cb="0"/><line nr="694" mi="2" ci="0" mb="2" cb="0"/><line nr="695" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="4" ci="0" mb="2" cb="0"/><line nr="698" mi="8" ci="0" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="2" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="709" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="2" mb="1" cb="1"/><line nr="711" mi="0" ci="2" mb="0" cb="0"/><line nr="713" mi="4" ci="0" mb="2" cb="0"/><line nr="714" mi="8" ci="0" mb="0" cb="0"/><line nr="715" mi="2" ci="0" mb="2" cb="0"/><line nr="716" mi="2" ci="0" mb="0" cb="0"/><line nr="718" mi="2" ci="0" mb="0" cb="0"/><line nr="725" mi="6" ci="0" mb="0" cb="0"/><line nr="726" mi="2" ci="0" mb="2" cb="0"/><line nr="727" mi="2" ci="0" mb="0" cb="0"/><line nr="730" mi="6" ci="0" mb="0" cb="0"/><line nr="731" mi="2" ci="0" mb="2" cb="0"/><line nr="732" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="4" ci="0" mb="2" cb="0"/><line nr="735" mi="8" ci="0" mb="0" cb="0"/><line nr="736" mi="2" ci="0" mb="2" cb="0"/><line nr="737" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="2" cb="0"/><line nr="740" mi="8" ci="0" mb="0" cb="0"/><line nr="741" mi="2" ci="0" mb="2" cb="0"/><line nr="742" mi="2" ci="0" mb="0" cb="0"/><line nr="744" mi="2" ci="0" mb="0" cb="0"/><line nr="751" mi="6" ci="0" mb="0" cb="0"/><line nr="752" mi="2" ci="0" mb="2" cb="0"/><line nr="753" mi="2" ci="0" mb="0" cb="0"/><line nr="756" mi="6" ci="0" mb="0" cb="0"/><line nr="757" mi="2" ci="0" mb="2" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="761" mi="6" ci="0" mb="0" cb="0"/><line nr="762" mi="2" ci="0" mb="2" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="4" ci="0" mb="2" cb="0"/><line nr="766" mi="8" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="2" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="770" mi="2" ci="0" mb="0" cb="0"/><line nr="777" mi="6" ci="0" mb="0" cb="0"/><line nr="778" mi="2" ci="0" mb="2" cb="0"/><line nr="779" mi="2" ci="0" mb="0" cb="0"/><line nr="782" mi="6" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="2" cb="0"/><line nr="784" mi="2" ci="0" mb="0" cb="0"/><line nr="787" mi="6" ci="0" mb="0" cb="0"/><line nr="788" mi="2" ci="0" mb="2" cb="0"/><line nr="789" mi="2" ci="0" mb="0" cb="0"/><line nr="791" mi="4" ci="0" mb="2" cb="0"/><line nr="792" mi="8" ci="0" mb="0" cb="0"/><line nr="793" mi="2" ci="0" mb="2" cb="0"/><line nr="794" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="803" mi="6" ci="0" mb="0" cb="0"/><line nr="804" mi="2" ci="0" mb="2" cb="0"/><line nr="805" mi="2" ci="0" mb="0" cb="0"/><line nr="807" mi="4" ci="0" mb="2" cb="0"/><line nr="808" mi="8" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="2" cb="0"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="813" mi="6" ci="0" mb="0" cb="0"/><line nr="814" mi="2" ci="0" mb="2" cb="0"/><line nr="815" mi="2" ci="0" mb="0" cb="0"/><line nr="818" mi="6" ci="0" mb="0" cb="0"/><line nr="819" mi="2" ci="0" mb="2" cb="0"/><line nr="820" mi="2" ci="0" mb="0" cb="0"/><line nr="822" mi="4" ci="0" mb="2" cb="0"/><line nr="823" mi="8" ci="0" mb="0" cb="0"/><line nr="824" mi="2" ci="0" mb="2" cb="0"/><line nr="825" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="2" ci="0" mb="0" cb="0"/><line nr="834" mi="6" ci="0" mb="0" cb="0"/><line nr="835" mi="2" ci="0" mb="2" cb="0"/><line nr="836" mi="2" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="2" cb="0"/><line nr="839" mi="8" ci="0" mb="0" cb="0"/><line nr="840" mi="2" ci="0" mb="2" cb="0"/><line nr="841" mi="2" ci="0" mb="0" cb="0"/><line nr="844" mi="6" ci="0" mb="0" cb="0"/><line nr="845" mi="2" ci="0" mb="2" cb="0"/><line nr="846" mi="2" ci="0" mb="0" cb="0"/><line nr="848" mi="4" ci="0" mb="2" cb="0"/><line nr="849" mi="8" ci="0" mb="0" cb="0"/><line nr="850" mi="2" ci="0" mb="2" cb="0"/><line nr="851" mi="2" ci="0" mb="0" cb="0"/><line nr="853" mi="2" ci="0" mb="0" cb="0"/><line nr="860" mi="6" ci="0" mb="0" cb="0"/><line nr="861" mi="2" ci="0" mb="2" cb="0"/><line nr="862" mi="2" ci="0" mb="0" cb="0"/><line nr="865" mi="6" ci="0" mb="0" cb="0"/><line nr="866" mi="2" ci="0" mb="2" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="4" ci="0" mb="2" cb="0"/><line nr="870" mi="8" ci="0" mb="0" cb="0"/><line nr="871" mi="2" ci="0" mb="2" cb="0"/><line nr="872" mi="2" ci="0" mb="0" cb="0"/><line nr="874" mi="2" ci="0" mb="0" cb="0"/><line nr="881" mi="6" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="2" cb="0"/><line nr="883" mi="2" ci="0" mb="0" cb="0"/><line nr="886" mi="6" ci="0" mb="0" cb="0"/><line nr="887" mi="2" ci="0" mb="2" cb="0"/><line nr="888" mi="2" ci="0" mb="0" cb="0"/><line nr="890" mi="4" ci="0" mb="2" cb="0"/><line nr="891" mi="8" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="2" cb="0"/><line nr="893" mi="2" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="901" mi="4" ci="0" mb="2" cb="0"/><line nr="902" mi="8" ci="0" mb="0" cb="0"/><line nr="903" mi="2" ci="0" mb="2" cb="0"/><line nr="904" mi="2" ci="0" mb="0" cb="0"/><line nr="906" mi="2" ci="0" mb="0" cb="0"/><line nr="912" mi="4" ci="0" mb="2" cb="0"/><line nr="913" mi="8" ci="0" mb="0" cb="0"/><line nr="914" mi="2" ci="0" mb="2" cb="0"/><line nr="915" mi="2" ci="0" mb="0" cb="0"/><line nr="917" mi="2" ci="0" mb="0" cb="0"/><line nr="924" mi="6" ci="0" mb="0" cb="0"/><line nr="925" mi="2" ci="0" mb="2" cb="0"/><line nr="926" mi="2" ci="0" mb="0" cb="0"/><line nr="929" mi="6" ci="0" mb="0" cb="0"/><line nr="930" mi="2" ci="0" mb="2" cb="0"/><line nr="931" mi="2" ci="0" mb="0" cb="0"/><line nr="933" mi="4" ci="0" mb="2" cb="0"/><line nr="934" mi="8" ci="0" mb="0" cb="0"/><line nr="935" mi="2" ci="0" mb="2" cb="0"/><line nr="936" mi="2" ci="0" mb="0" cb="0"/><line nr="938" mi="2" ci="0" mb="0" cb="0"/><line nr="944" mi="4" ci="0" mb="2" cb="0"/><line nr="945" mi="8" ci="0" mb="0" cb="0"/><line nr="946" mi="2" ci="0" mb="2" cb="0"/><line nr="947" mi="2" ci="0" mb="0" cb="0"/><line nr="949" mi="2" ci="0" mb="0" cb="0"/><line nr="956" mi="6" ci="0" mb="0" cb="0"/><line nr="957" mi="2" ci="0" mb="2" cb="0"/><line nr="958" mi="2" ci="0" mb="0" cb="0"/><line nr="960" mi="4" ci="0" mb="2" cb="0"/><line nr="961" mi="8" ci="0" mb="0" cb="0"/><line nr="962" mi="2" ci="0" mb="2" cb="0"/><line nr="963" mi="2" ci="0" mb="0" cb="0"/><line nr="965" mi="2" ci="0" mb="0" cb="0"/><line nr="972" mi="6" ci="0" mb="0" cb="0"/><line nr="973" mi="2" ci="0" mb="2" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="977" mi="6" ci="0" mb="0" cb="0"/><line nr="978" mi="2" ci="0" mb="2" cb="0"/><line nr="979" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="4" ci="0" mb="2" cb="0"/><line nr="982" mi="8" ci="0" mb="0" cb="0"/><line nr="983" mi="2" ci="0" mb="2" cb="0"/><line nr="984" mi="2" ci="0" mb="0" cb="0"/><line nr="986" mi="2" ci="0" mb="0" cb="0"/><line nr="993" mi="6" ci="0" mb="0" cb="0"/><line nr="994" mi="2" ci="0" mb="2" cb="0"/><line nr="995" mi="2" ci="0" mb="0" cb="0"/><line nr="998" mi="6" ci="0" mb="0" cb="0"/><line nr="999" mi="2" ci="0" mb="2" cb="0"/><line nr="1000" mi="2" ci="0" mb="0" cb="0"/><line nr="1002" mi="4" ci="0" mb="2" cb="0"/><line nr="1003" mi="8" ci="0" mb="0" cb="0"/><line nr="1004" mi="2" ci="0" mb="2" cb="0"/><line nr="1005" mi="2" ci="0" mb="0" cb="0"/><line nr="1007" mi="4" ci="0" mb="2" cb="0"/><line nr="1008" mi="8" ci="0" mb="0" cb="0"/><line nr="1009" mi="2" ci="0" mb="2" cb="0"/><line nr="1010" mi="2" ci="0" mb="0" cb="0"/><line nr="1012" mi="4" ci="0" mb="2" cb="0"/><line nr="1013" mi="8" ci="0" mb="0" cb="0"/><line nr="1014" mi="2" ci="0" mb="2" cb="0"/><line nr="1015" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="2" ci="0" mb="0" cb="0"/><line nr="1023" mi="0" ci="4" mb="1" cb="1"/><line nr="1024" mi="0" ci="8" mb="0" cb="0"/><line nr="1025" mi="0" ci="2" mb="1" cb="1"/><line nr="1026" mi="0" ci="2" mb="0" cb="0"/><line nr="1029" mi="6" ci="0" mb="0" cb="0"/><line nr="1030" mi="2" ci="0" mb="2" cb="0"/><line nr="1031" mi="2" ci="0" mb="0" cb="0"/><line nr="1034" mi="6" ci="0" mb="0" cb="0"/><line nr="1035" mi="2" ci="0" mb="2" cb="0"/><line nr="1036" mi="2" ci="0" mb="0" cb="0"/><line nr="1039" mi="6" ci="0" mb="0" cb="0"/><line nr="1040" mi="2" ci="0" mb="2" cb="0"/><line nr="1041" mi="2" ci="0" mb="0" cb="0"/><line nr="1044" mi="6" ci="0" mb="0" cb="0"/><line nr="1045" mi="2" ci="0" mb="2" cb="0"/><line nr="1046" mi="2" ci="0" mb="0" cb="0"/><line nr="1048" mi="4" ci="0" mb="2" cb="0"/><line nr="1049" mi="8" ci="0" mb="0" cb="0"/><line nr="1050" mi="2" ci="0" mb="2" cb="0"/><line nr="1051" mi="2" ci="0" mb="0" cb="0"/><line nr="1054" mi="6" ci="0" mb="0" cb="0"/><line nr="1055" mi="2" ci="0" mb="2" cb="0"/><line nr="1056" mi="2" ci="0" mb="0" cb="0"/><line nr="1059" mi="6" ci="0" mb="0" cb="0"/><line nr="1060" mi="2" ci="0" mb="2" cb="0"/><line nr="1061" mi="2" ci="0" mb="0" cb="0"/><line nr="1064" mi="6" ci="0" mb="0" cb="0"/><line nr="1065" mi="2" ci="0" mb="2" cb="0"/><line nr="1066" mi="2" ci="0" mb="0" cb="0"/><line nr="1068" mi="4" ci="0" mb="2" cb="0"/><line nr="1069" mi="8" ci="0" mb="0" cb="0"/><line nr="1070" mi="2" ci="0" mb="2" cb="0"/><line nr="1071" mi="2" ci="0" mb="0" cb="0"/><line nr="1073" mi="2" ci="0" mb="0" cb="0"/><line nr="1080" mi="6" ci="0" mb="0" cb="0"/><line nr="1081" mi="2" ci="0" mb="2" cb="0"/><line nr="1082" mi="2" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="2" cb="0"/><line nr="1085" mi="8" ci="0" mb="0" cb="0"/><line nr="1086" mi="2" ci="0" mb="2" cb="0"/><line nr="1087" mi="2" ci="0" mb="0" cb="0"/><line nr="1089" mi="2" ci="0" mb="0" cb="0"/><line nr="1096" mi="6" ci="0" mb="0" cb="0"/><line nr="1097" mi="2" ci="0" mb="2" cb="0"/><line nr="1098" mi="2" ci="0" mb="0" cb="0"/><line nr="1101" mi="6" ci="0" mb="0" cb="0"/><line nr="1102" mi="2" ci="0" mb="2" cb="0"/><line nr="1103" mi="2" ci="0" mb="0" cb="0"/><line nr="1105" mi="4" ci="0" mb="2" cb="0"/><line nr="1106" mi="8" ci="0" mb="0" cb="0"/><line nr="1107" mi="2" ci="0" mb="2" cb="0"/><line nr="1108" mi="2" ci="0" mb="0" cb="0"/><line nr="1110" mi="2" ci="0" mb="0" cb="0"/><line nr="1116" mi="4" ci="0" mb="2" cb="0"/><line nr="1117" mi="8" ci="0" mb="0" cb="0"/><line nr="1118" mi="2" ci="0" mb="2" cb="0"/><line nr="1119" mi="2" ci="0" mb="0" cb="0"/><line nr="1121" mi="2" ci="0" mb="0" cb="0"/><line nr="1127" mi="4" ci="0" mb="2" cb="0"/><line nr="1128" mi="8" ci="0" mb="0" cb="0"/><line nr="1129" mi="2" ci="0" mb="2" cb="0"/><line nr="1130" mi="2" ci="0" mb="0" cb="0"/><line nr="1133" mi="6" ci="0" mb="0" cb="0"/><line nr="1134" mi="2" ci="0" mb="2" cb="0"/><line nr="1135" mi="2" ci="0" mb="0" cb="0"/><line nr="1137" mi="4" ci="0" mb="2" cb="0"/><line nr="1138" mi="8" ci="0" mb="0" cb="0"/><line nr="1139" mi="2" ci="0" mb="2" cb="0"/><line nr="1140" mi="2" ci="0" mb="0" cb="0"/><line nr="1143" mi="6" ci="0" mb="0" cb="0"/><line nr="1144" mi="2" ci="0" mb="2" cb="0"/><line nr="1145" mi="2" ci="0" mb="0" cb="0"/><line nr="1147" mi="4" ci="0" mb="2" cb="0"/><line nr="1148" mi="8" ci="0" mb="0" cb="0"/><line nr="1149" mi="2" ci="0" mb="2" cb="0"/><line nr="1150" mi="2" ci="0" mb="0" cb="0"/><line nr="1152" mi="4" ci="0" mb="2" cb="0"/><line nr="1153" mi="8" ci="0" mb="0" cb="0"/><line nr="1154" mi="2" ci="0" mb="2" cb="0"/><line nr="1155" mi="2" ci="0" mb="0" cb="0"/><line nr="1157" mi="2" ci="0" mb="0" cb="0"/><line nr="1164" mi="0" ci="6" mb="0" cb="0"/><line nr="1165" mi="0" ci="2" mb="1" cb="1"/><line nr="1166" mi="2" ci="0" mb="0" cb="0"/><line nr="1169" mi="0" ci="6" mb="0" cb="0"/><line nr="1170" mi="0" ci="2" mb="1" cb="1"/><line nr="1171" mi="2" ci="0" mb="0" cb="0"/><line nr="1173" mi="0" ci="4" mb="1" cb="1"/><line nr="1174" mi="8" ci="0" mb="0" cb="0"/><line nr="1175" mi="2" ci="0" mb="2" cb="0"/><line nr="1176" mi="2" ci="0" mb="0" cb="0"/><line nr="1178" mi="0" ci="2" mb="0" cb="0"/><line nr="1185" mi="0" ci="6" mb="0" cb="0"/><line nr="1186" mi="0" ci="2" mb="1" cb="1"/><line nr="1187" mi="2" ci="0" mb="0" cb="0"/><line nr="1190" mi="0" ci="6" mb="0" cb="0"/><line nr="1191" mi="0" ci="2" mb="1" cb="1"/><line nr="1192" mi="2" ci="0" mb="0" cb="0"/><line nr="1195" mi="0" ci="6" mb="0" cb="0"/><line nr="1196" mi="0" ci="2" mb="1" cb="1"/><line nr="1197" mi="2" ci="0" mb="0" cb="0"/><line nr="1200" mi="0" ci="6" mb="0" cb="0"/><line nr="1201" mi="0" ci="2" mb="1" cb="1"/><line nr="1202" mi="2" ci="0" mb="0" cb="0"/><line nr="1205" mi="0" ci="6" mb="0" cb="0"/><line nr="1206" mi="0" ci="2" mb="1" cb="1"/><line nr="1207" mi="2" ci="0" mb="0" cb="0"/><line nr="1209" mi="0" ci="4" mb="1" cb="1"/><line nr="1210" mi="8" ci="0" mb="0" cb="0"/><line nr="1211" mi="2" ci="0" mb="2" cb="0"/><line nr="1212" mi="2" ci="0" mb="0" cb="0"/><line nr="1214" mi="0" ci="2" mb="0" cb="0"/><line nr="1221" mi="6" ci="0" mb="0" cb="0"/><line nr="1222" mi="2" ci="0" mb="2" cb="0"/><line nr="1223" mi="2" ci="0" mb="0" cb="0"/><line nr="1225" mi="4" ci="0" mb="2" cb="0"/><line nr="1226" mi="8" ci="0" mb="0" cb="0"/><line nr="1227" mi="2" ci="0" mb="2" cb="0"/><line nr="1228" mi="2" ci="0" mb="0" cb="0"/><line nr="1230" mi="2" ci="0" mb="0" cb="0"/><line nr="1236" mi="0" ci="4" mb="0" cb="2"/><line nr="1237" mi="0" ci="8" mb="0" cb="0"/><line nr="1238" mi="0" ci="2" mb="1" cb="1"/><line nr="1239" mi="2" ci="0" mb="0" cb="0"/><line nr="1241" mi="0" ci="4" mb="1" cb="1"/><line nr="1242" mi="8" ci="0" mb="0" cb="0"/><line nr="1243" mi="2" ci="0" mb="2" cb="0"/><line nr="1244" mi="2" ci="0" mb="0" cb="0"/><line nr="1246" mi="0" ci="2" mb="0" cb="0"/><line nr="1252" mi="0" ci="4" mb="1" cb="1"/><line nr="1253" mi="8" ci="0" mb="0" cb="0"/><line nr="1254" mi="2" ci="0" mb="2" cb="0"/><line nr="1255" mi="2" ci="0" mb="0" cb="0"/><line nr="1257" mi="0" ci="2" mb="0" cb="0"/><line nr="1264" mi="6" ci="0" mb="0" cb="0"/><line nr="1265" mi="2" ci="0" mb="2" cb="0"/><line nr="1266" mi="2" ci="0" mb="0" cb="0"/><line nr="1269" mi="6" ci="0" mb="0" cb="0"/><line nr="1270" mi="2" ci="0" mb="2" cb="0"/><line nr="1271" mi="2" ci="0" mb="0" cb="0"/><line nr="1273" mi="4" ci="0" mb="2" cb="0"/><line nr="1274" mi="8" ci="0" mb="0" cb="0"/><line nr="1275" mi="2" ci="0" mb="2" cb="0"/><line nr="1276" mi="2" ci="0" mb="0" cb="0"/><line nr="1278" mi="2" ci="0" mb="0" cb="0"/><line nr="1285" mi="6" ci="0" mb="0" cb="0"/><line nr="1286" mi="2" ci="0" mb="2" cb="0"/><line nr="1287" mi="2" ci="0" mb="0" cb="0"/><line nr="1289" mi="4" ci="0" mb="2" cb="0"/><line nr="1290" mi="8" ci="0" mb="0" cb="0"/><line nr="1291" mi="2" ci="0" mb="2" cb="0"/><line nr="1292" mi="2" ci="0" mb="0" cb="0"/><line nr="1294" mi="4" ci="0" mb="2" cb="0"/><line nr="1295" mi="8" ci="0" mb="0" cb="0"/><line nr="1296" mi="2" ci="0" mb="2" cb="0"/><line nr="1297" mi="2" ci="0" mb="0" cb="0"/><line nr="1299" mi="2" ci="0" mb="0" cb="0"/><line nr="1306" mi="6" ci="0" mb="0" cb="0"/><line nr="1307" mi="2" ci="0" mb="2" cb="0"/><line nr="1308" mi="2" ci="0" mb="0" cb="0"/><line nr="1311" mi="6" ci="0" mb="0" cb="0"/><line nr="1312" mi="2" ci="0" mb="2" cb="0"/><line nr="1313" mi="2" ci="0" mb="0" cb="0"/><line nr="1315" mi="4" ci="0" mb="2" cb="0"/><line nr="1316" mi="8" ci="0" mb="0" cb="0"/><line nr="1317" mi="2" ci="0" mb="2" cb="0"/><line nr="1318" mi="2" ci="0" mb="0" cb="0"/><line nr="1320" mi="2" ci="0" mb="0" cb="0"/><line nr="1327" mi="6" ci="0" mb="0" cb="0"/><line nr="1328" mi="2" ci="0" mb="2" cb="0"/><line nr="1329" mi="2" ci="0" mb="0" cb="0"/><line nr="1332" mi="6" ci="0" mb="0" cb="0"/><line nr="1333" mi="2" ci="0" mb="2" cb="0"/><line nr="1334" mi="2" ci="0" mb="0" cb="0"/><line nr="1336" mi="4" ci="0" mb="2" cb="0"/><line nr="1337" mi="8" ci="0" mb="0" cb="0"/><line nr="1338" mi="2" ci="0" mb="2" cb="0"/><line nr="1339" mi="2" ci="0" mb="0" cb="0"/><line nr="1341" mi="2" ci="0" mb="0" cb="0"/><line nr="1347" mi="4" ci="0" mb="2" cb="0"/><line nr="1348" mi="8" ci="0" mb="0" cb="0"/><line nr="1349" mi="2" ci="0" mb="2" cb="0"/><line nr="1350" mi="2" ci="0" mb="0" cb="0"/><line nr="1352" mi="4" ci="0" mb="2" cb="0"/><line nr="1353" mi="8" ci="0" mb="0" cb="0"/><line nr="1354" mi="2" ci="0" mb="2" cb="0"/><line nr="1355" mi="2" ci="0" mb="0" cb="0"/><line nr="1357" mi="2" ci="0" mb="0" cb="0"/><line nr="1364" mi="6" ci="0" mb="0" cb="0"/><line nr="1365" mi="2" ci="0" mb="2" cb="0"/><line nr="1366" mi="2" ci="0" mb="0" cb="0"/><line nr="1369" mi="6" ci="0" mb="0" cb="0"/><line nr="1370" mi="2" ci="0" mb="2" cb="0"/><line nr="1371" mi="2" ci="0" mb="0" cb="0"/><line nr="1373" mi="4" ci="0" mb="2" cb="0"/><line nr="1374" mi="8" ci="0" mb="0" cb="0"/><line nr="1375" mi="2" ci="0" mb="2" cb="0"/><line nr="1376" mi="2" ci="0" mb="0" cb="0"/><line nr="1378" mi="2" ci="0" mb="0" cb="0"/><line nr="1384" mi="4" ci="0" mb="2" cb="0"/><line nr="1385" mi="8" ci="0" mb="0" cb="0"/><line nr="1386" mi="2" ci="0" mb="2" cb="0"/><line nr="1387" mi="2" ci="0" mb="0" cb="0"/><line nr="1389" mi="2" ci="0" mb="0" cb="0"/><line nr="1395" mi="4" ci="0" mb="2" cb="0"/><line nr="1396" mi="8" ci="0" mb="0" cb="0"/><line nr="1397" mi="2" ci="0" mb="2" cb="0"/><line nr="1398" mi="2" ci="0" mb="0" cb="0"/><line nr="1400" mi="4" ci="0" mb="2" cb="0"/><line nr="1401" mi="8" ci="0" mb="0" cb="0"/><line nr="1402" mi="2" ci="0" mb="2" cb="0"/><line nr="1403" mi="2" ci="0" mb="0" cb="0"/><line nr="1405" mi="2" ci="0" mb="0" cb="0"/><line nr="1412" mi="6" ci="0" mb="0" cb="0"/><line nr="1413" mi="2" ci="0" mb="2" cb="0"/><line nr="1414" mi="2" ci="0" mb="0" cb="0"/><line nr="1417" mi="6" ci="0" mb="0" cb="0"/><line nr="1418" mi="2" ci="0" mb="2" cb="0"/><line nr="1419" mi="2" ci="0" mb="0" cb="0"/><line nr="1421" mi="4" ci="0" mb="2" cb="0"/><line nr="1422" mi="8" ci="0" mb="0" cb="0"/><line nr="1423" mi="2" ci="0" mb="2" cb="0"/><line nr="1424" mi="2" ci="0" mb="0" cb="0"/><line nr="1426" mi="2" ci="0" mb="0" cb="0"/><line nr="1433" mi="6" ci="0" mb="0" cb="0"/><line nr="1434" mi="2" ci="0" mb="2" cb="0"/><line nr="1435" mi="2" ci="0" mb="0" cb="0"/><line nr="1438" mi="6" ci="0" mb="0" cb="0"/><line nr="1439" mi="2" ci="0" mb="2" cb="0"/><line nr="1440" mi="2" ci="0" mb="0" cb="0"/><line nr="1442" mi="4" ci="0" mb="2" cb="0"/><line nr="1443" mi="8" ci="0" mb="0" cb="0"/><line nr="1444" mi="2" ci="0" mb="2" cb="0"/><line nr="1445" mi="2" ci="0" mb="0" cb="0"/><line nr="1447" mi="2" ci="0" mb="0" cb="0"/><line nr="1454" mi="6" ci="0" mb="0" cb="0"/><line nr="1455" mi="2" ci="0" mb="2" cb="0"/><line nr="1456" mi="2" ci="0" mb="0" cb="0"/><line nr="1459" mi="6" ci="0" mb="0" cb="0"/><line nr="1460" mi="2" ci="0" mb="2" cb="0"/><line nr="1461" mi="2" ci="0" mb="0" cb="0"/><line nr="1463" mi="4" ci="0" mb="2" cb="0"/><line nr="1464" mi="8" ci="0" mb="0" cb="0"/><line nr="1465" mi="2" ci="0" mb="2" cb="0"/><line nr="1466" mi="2" ci="0" mb="0" cb="0"/><line nr="1468" mi="2" ci="0" mb="0" cb="0"/><line nr="1474" mi="4" ci="0" mb="2" cb="0"/><line nr="1475" mi="8" ci="0" mb="0" cb="0"/><line nr="1476" mi="2" ci="0" mb="2" cb="0"/><line nr="1477" mi="2" ci="0" mb="0" cb="0"/><line nr="1479" mi="4" ci="0" mb="2" cb="0"/><line nr="1480" mi="8" ci="0" mb="0" cb="0"/><line nr="1481" mi="2" ci="0" mb="2" cb="0"/><line nr="1482" mi="2" ci="0" mb="0" cb="0"/><line nr="1484" mi="2" ci="0" mb="0" cb="0"/><line nr="1491" mi="6" ci="0" mb="0" cb="0"/><line nr="1492" mi="2" ci="0" mb="2" cb="0"/><line nr="1493" mi="2" ci="0" mb="0" cb="0"/><line nr="1495" mi="4" ci="0" mb="2" cb="0"/><line nr="1496" mi="8" ci="0" mb="0" cb="0"/><line nr="1497" mi="2" ci="0" mb="2" cb="0"/><line nr="1498" mi="2" ci="0" mb="0" cb="0"/><line nr="1500" mi="2" ci="0" mb="0" cb="0"/><line nr="1507" mi="0" ci="6" mb="0" cb="0"/><line nr="1508" mi="0" ci="2" mb="1" cb="1"/><line nr="1509" mi="2" ci="0" mb="0" cb="0"/><line nr="1511" mi="0" ci="4" mb="1" cb="1"/><line nr="1512" mi="8" ci="0" mb="0" cb="0"/><line nr="1513" mi="2" ci="0" mb="2" cb="0"/><line nr="1514" mi="2" ci="0" mb="0" cb="0"/><line nr="1517" mi="0" ci="6" mb="0" cb="0"/><line nr="1518" mi="0" ci="2" mb="1" cb="1"/><line nr="1519" mi="2" ci="0" mb="0" cb="0"/><line nr="1522" mi="0" ci="6" mb="0" cb="0"/><line nr="1523" mi="0" ci="2" mb="1" cb="1"/><line nr="1524" mi="0" ci="2" mb="0" cb="0"/><line nr="1526" mi="4" ci="0" mb="2" cb="0"/><line nr="1527" mi="8" ci="0" mb="0" cb="0"/><line nr="1528" mi="2" ci="0" mb="2" cb="0"/><line nr="1529" mi="2" ci="0" mb="0" cb="0"/><line nr="1531" mi="2" ci="0" mb="0" cb="0"/><line nr="1538" mi="6" ci="0" mb="0" cb="0"/><line nr="1539" mi="2" ci="0" mb="2" cb="0"/><line nr="1540" mi="2" ci="0" mb="0" cb="0"/><line nr="1542" mi="4" ci="0" mb="2" cb="0"/><line nr="1543" mi="8" ci="0" mb="0" cb="0"/><line nr="1544" mi="2" ci="0" mb="2" cb="0"/><line nr="1545" mi="2" ci="0" mb="0" cb="0"/><line nr="1547" mi="2" ci="0" mb="0" cb="0"/><line nr="1554" mi="6" ci="0" mb="0" cb="0"/><line nr="1555" mi="2" ci="0" mb="2" cb="0"/><line nr="1556" mi="2" ci="0" mb="0" cb="0"/><line nr="1559" mi="6" ci="0" mb="0" cb="0"/><line nr="1560" mi="2" ci="0" mb="2" cb="0"/><line nr="1561" mi="2" ci="0" mb="0" cb="0"/><line nr="1564" mi="6" ci="0" mb="0" cb="0"/><line nr="1565" mi="2" ci="0" mb="2" cb="0"/><line nr="1566" mi="2" ci="0" mb="0" cb="0"/><line nr="1568" mi="4" ci="0" mb="2" cb="0"/><line nr="1569" mi="8" ci="0" mb="0" cb="0"/><line nr="1570" mi="2" ci="0" mb="2" cb="0"/><line nr="1571" mi="2" ci="0" mb="0" cb="0"/><line nr="1573" mi="2" ci="0" mb="0" cb="0"/><line nr="1580" mi="6" ci="0" mb="0" cb="0"/><line nr="1581" mi="2" ci="0" mb="2" cb="0"/><line nr="1582" mi="2" ci="0" mb="0" cb="0"/><line nr="1584" mi="4" ci="0" mb="2" cb="0"/><line nr="1585" mi="8" ci="0" mb="0" cb="0"/><line nr="1586" mi="2" ci="0" mb="2" cb="0"/><line nr="1587" mi="2" ci="0" mb="0" cb="0"/><line nr="1589" mi="2" ci="0" mb="0" cb="0"/><line nr="1596" mi="6" ci="0" mb="0" cb="0"/><line nr="1597" mi="2" ci="0" mb="2" cb="0"/><line nr="1598" mi="2" ci="0" mb="0" cb="0"/><line nr="1600" mi="4" ci="0" mb="2" cb="0"/><line nr="1601" mi="8" ci="0" mb="0" cb="0"/><line nr="1602" mi="2" ci="0" mb="2" cb="0"/><line nr="1603" mi="2" ci="0" mb="0" cb="0"/><line nr="1605" mi="2" ci="0" mb="0" cb="0"/><line nr="1612" mi="0" ci="6" mb="0" cb="0"/><line nr="1613" mi="0" ci="2" mb="1" cb="1"/><line nr="1614" mi="2" ci="0" mb="0" cb="0"/><line nr="1617" mi="0" ci="6" mb="0" cb="0"/><line nr="1618" mi="0" ci="2" mb="1" cb="1"/><line nr="1619" mi="2" ci="0" mb="0" cb="0"/><line nr="1622" mi="0" ci="6" mb="0" cb="0"/><line nr="1623" mi="0" ci="2" mb="1" cb="1"/><line nr="1624" mi="0" ci="2" mb="0" cb="0"/><line nr="1626" mi="4" ci="0" mb="2" cb="0"/><line nr="1627" mi="8" ci="0" mb="0" cb="0"/><line nr="1628" mi="2" ci="0" mb="2" cb="0"/><line nr="1629" mi="2" ci="0" mb="0" cb="0"/><line nr="1631" mi="2" ci="0" mb="0" cb="0"/><line nr="1637" mi="4" ci="0" mb="2" cb="0"/><line nr="1638" mi="8" ci="0" mb="0" cb="0"/><line nr="1639" mi="2" ci="0" mb="2" cb="0"/><line nr="1640" mi="2" ci="0" mb="0" cb="0"/><line nr="1643" mi="6" ci="0" mb="0" cb="0"/><line nr="1644" mi="2" ci="0" mb="2" cb="0"/><line nr="1645" mi="2" ci="0" mb="0" cb="0"/><line nr="1648" mi="6" ci="0" mb="0" cb="0"/><line nr="1649" mi="2" ci="0" mb="2" cb="0"/><line nr="1650" mi="2" ci="0" mb="0" cb="0"/><line nr="1652" mi="4" ci="0" mb="2" cb="0"/><line nr="1653" mi="8" ci="0" mb="0" cb="0"/><line nr="1654" mi="2" ci="0" mb="2" cb="0"/><line nr="1655" mi="2" ci="0" mb="0" cb="0"/><line nr="1657" mi="2" ci="0" mb="0" cb="0"/><line nr="1664" mi="6" ci="0" mb="0" cb="0"/><line nr="1665" mi="2" ci="0" mb="2" cb="0"/><line nr="1666" mi="2" ci="0" mb="0" cb="0"/><line nr="1668" mi="4" ci="0" mb="2" cb="0"/><line nr="1669" mi="8" ci="0" mb="0" cb="0"/><line nr="1670" mi="2" ci="0" mb="2" cb="0"/><line nr="1671" mi="2" ci="0" mb="0" cb="0"/><line nr="1673" mi="2" ci="0" mb="0" cb="0"/><line nr="1680" mi="6" ci="0" mb="0" cb="0"/><line nr="1681" mi="2" ci="0" mb="2" cb="0"/><line nr="1682" mi="2" ci="0" mb="0" cb="0"/><line nr="1685" mi="6" ci="0" mb="0" cb="0"/><line nr="1686" mi="2" ci="0" mb="2" cb="0"/><line nr="1687" mi="2" ci="0" mb="0" cb="0"/><line nr="1689" mi="4" ci="0" mb="2" cb="0"/><line nr="1690" mi="8" ci="0" mb="0" cb="0"/><line nr="1691" mi="2" ci="0" mb="2" cb="0"/><line nr="1692" mi="2" ci="0" mb="0" cb="0"/><line nr="1694" mi="2" ci="0" mb="0" cb="0"/><line nr="1700" mi="4" ci="0" mb="2" cb="0"/><line nr="1701" mi="8" ci="0" mb="0" cb="0"/><line nr="1702" mi="2" ci="0" mb="2" cb="0"/><line nr="1703" mi="2" ci="0" mb="0" cb="0"/><line nr="1705" mi="4" ci="0" mb="2" cb="0"/><line nr="1706" mi="8" ci="0" mb="0" cb="0"/><line nr="1707" mi="2" ci="0" mb="2" cb="0"/><line nr="1708" mi="2" ci="0" mb="0" cb="0"/><line nr="1711" mi="6" ci="0" mb="0" cb="0"/><line nr="1712" mi="2" ci="0" mb="2" cb="0"/><line nr="1713" mi="2" ci="0" mb="0" cb="0"/><line nr="1715" mi="4" ci="0" mb="2" cb="0"/><line nr="1716" mi="8" ci="0" mb="0" cb="0"/><line nr="1717" mi="2" ci="0" mb="2" cb="0"/><line nr="1718" mi="2" ci="0" mb="0" cb="0"/><line nr="1720" mi="2" ci="0" mb="0" cb="0"/><line nr="1727" mi="6" ci="0" mb="0" cb="0"/><line nr="1728" mi="2" ci="0" mb="2" cb="0"/><line nr="1729" mi="2" ci="0" mb="0" cb="0"/><line nr="1732" mi="6" ci="0" mb="0" cb="0"/><line nr="1733" mi="2" ci="0" mb="2" cb="0"/><line nr="1734" mi="2" ci="0" mb="0" cb="0"/><line nr="1736" mi="4" ci="0" mb="2" cb="0"/><line nr="1737" mi="8" ci="0" mb="0" cb="0"/><line nr="1738" mi="2" ci="0" mb="2" cb="0"/><line nr="1739" mi="2" ci="0" mb="0" cb="0"/><line nr="1741" mi="2" ci="0" mb="0" cb="0"/><line nr="1748" mi="6" ci="0" mb="0" cb="0"/><line nr="1749" mi="2" ci="0" mb="2" cb="0"/><line nr="1750" mi="2" ci="0" mb="0" cb="0"/><line nr="1752" mi="4" ci="0" mb="2" cb="0"/><line nr="1753" mi="8" ci="0" mb="0" cb="0"/><line nr="1754" mi="2" ci="0" mb="2" cb="0"/><line nr="1755" mi="2" ci="0" mb="0" cb="0"/><line nr="1757" mi="4" ci="0" mb="2" cb="0"/><line nr="1758" mi="8" ci="0" mb="0" cb="0"/><line nr="1759" mi="2" ci="0" mb="2" cb="0"/><line nr="1760" mi="2" ci="0" mb="0" cb="0"/><line nr="1762" mi="2" ci="0" mb="0" cb="0"/><line nr="1769" mi="6" ci="0" mb="0" cb="0"/><line nr="1770" mi="2" ci="0" mb="2" cb="0"/><line nr="1771" mi="2" ci="0" mb="0" cb="0"/><line nr="1773" mi="4" ci="0" mb="2" cb="0"/><line nr="1774" mi="8" ci="0" mb="0" cb="0"/><line nr="1775" mi="2" ci="0" mb="2" cb="0"/><line nr="1776" mi="2" ci="0" mb="0" cb="0"/><line nr="1778" mi="2" ci="0" mb="0" cb="0"/><line nr="1785" mi="6" ci="0" mb="0" cb="0"/><line nr="1786" mi="2" ci="0" mb="2" cb="0"/><line nr="1787" mi="2" ci="0" mb="0" cb="0"/><line nr="1789" mi="4" ci="0" mb="2" cb="0"/><line nr="1790" mi="8" ci="0" mb="0" cb="0"/><line nr="1791" mi="2" ci="0" mb="2" cb="0"/><line nr="1792" mi="2" ci="0" mb="0" cb="0"/><line nr="1794" mi="2" ci="0" mb="0" cb="0"/><line nr="1800" mi="4" ci="0" mb="2" cb="0"/><line nr="1801" mi="8" ci="0" mb="0" cb="0"/><line nr="1802" mi="2" ci="0" mb="2" cb="0"/><line nr="1803" mi="2" ci="0" mb="0" cb="0"/><line nr="1805" mi="2" ci="0" mb="0" cb="0"/><line nr="1811" mi="4" ci="0" mb="2" cb="0"/><line nr="1812" mi="8" ci="0" mb="0" cb="0"/><line nr="1813" mi="2" ci="0" mb="2" cb="0"/><line nr="1814" mi="2" ci="0" mb="0" cb="0"/><line nr="1816" mi="2" ci="0" mb="0" cb="0"/><line nr="1821" mi="0" ci="9" mb="0" cb="2"/><line nr="1822" mi="0" ci="6" mb="0" cb="0"/><line nr="1823" mi="0" ci="2" mb="0" cb="2"/><line nr="1824" mi="0" ci="2" mb="0" cb="0"/><line nr="1826" mi="0" ci="1" mb="0" cb="0"/><line nr="1827" mi="0" ci="2" mb="0" cb="0"/><line nr="1834" mi="6" ci="0" mb="0" cb="0"/><line nr="1835" mi="2" ci="0" mb="2" cb="0"/><line nr="1836" mi="2" ci="0" mb="0" cb="0"/><line nr="1839" mi="6" ci="0" mb="0" cb="0"/><line nr="1840" mi="2" ci="0" mb="2" cb="0"/><line nr="1841" mi="2" ci="0" mb="0" cb="0"/><line nr="1844" mi="6" ci="0" mb="0" cb="0"/><line nr="1845" mi="2" ci="0" mb="2" cb="0"/><line nr="1846" mi="2" ci="0" mb="0" cb="0"/><line nr="1848" mi="4" ci="0" mb="2" cb="0"/><line nr="1849" mi="8" ci="0" mb="0" cb="0"/><line nr="1850" mi="2" ci="0" mb="2" cb="0"/><line nr="1851" mi="2" ci="0" mb="0" cb="0"/><line nr="1853" mi="2" ci="0" mb="0" cb="0"/><line nr="1860" mi="6" ci="0" mb="0" cb="0"/><line nr="1861" mi="2" ci="0" mb="2" cb="0"/><line nr="1862" mi="2" ci="0" mb="0" cb="0"/><line nr="1865" mi="6" ci="0" mb="0" cb="0"/><line nr="1866" mi="2" ci="0" mb="2" cb="0"/><line nr="1867" mi="2" ci="0" mb="0" cb="0"/><line nr="1869" mi="4" ci="0" mb="2" cb="0"/><line nr="1870" mi="8" ci="0" mb="0" cb="0"/><line nr="1871" mi="2" ci="0" mb="2" cb="0"/><line nr="1872" mi="2" ci="0" mb="0" cb="0"/><line nr="1874" mi="2" ci="0" mb="0" cb="0"/><line nr="1881" mi="6" ci="0" mb="0" cb="0"/><line nr="1882" mi="2" ci="0" mb="2" cb="0"/><line nr="1883" mi="2" ci="0" mb="0" cb="0"/><line nr="1886" mi="6" ci="0" mb="0" cb="0"/><line nr="1887" mi="2" ci="0" mb="2" cb="0"/><line nr="1888" mi="2" ci="0" mb="0" cb="0"/><line nr="1890" mi="4" ci="0" mb="2" cb="0"/><line nr="1891" mi="8" ci="0" mb="0" cb="0"/><line nr="1892" mi="2" ci="0" mb="2" cb="0"/><line nr="1893" mi="2" ci="0" mb="0" cb="0"/><line nr="1895" mi="2" ci="0" mb="0" cb="0"/><line nr="1902" mi="6" ci="0" mb="0" cb="0"/><line nr="1903" mi="2" ci="0" mb="2" cb="0"/><line nr="1904" mi="2" ci="0" mb="0" cb="0"/><line nr="1907" mi="6" ci="0" mb="0" cb="0"/><line nr="1908" mi="2" ci="0" mb="2" cb="0"/><line nr="1909" mi="2" ci="0" mb="0" cb="0"/><line nr="1911" mi="4" ci="0" mb="2" cb="0"/><line nr="1912" mi="8" ci="0" mb="0" cb="0"/><line nr="1913" mi="2" ci="0" mb="2" cb="0"/><line nr="1914" mi="2" ci="0" mb="0" cb="0"/><line nr="1916" mi="2" ci="0" mb="0" cb="0"/><line nr="1923" mi="6" ci="0" mb="0" cb="0"/><line nr="1924" mi="2" ci="0" mb="2" cb="0"/><line nr="1925" mi="2" ci="0" mb="0" cb="0"/><line nr="1927" mi="4" ci="0" mb="2" cb="0"/><line nr="1928" mi="8" ci="0" mb="0" cb="0"/><line nr="1929" mi="2" ci="0" mb="2" cb="0"/><line nr="1930" mi="2" ci="0" mb="0" cb="0"/><line nr="1932" mi="2" ci="0" mb="0" cb="0"/><line nr="1939" mi="6" ci="0" mb="0" cb="0"/><line nr="1940" mi="2" ci="0" mb="2" cb="0"/><line nr="1941" mi="2" ci="0" mb="0" cb="0"/><line nr="1944" mi="6" ci="0" mb="0" cb="0"/><line nr="1945" mi="2" ci="0" mb="2" cb="0"/><line nr="1946" mi="2" ci="0" mb="0" cb="0"/><line nr="1948" mi="4" ci="0" mb="2" cb="0"/><line nr="1949" mi="8" ci="0" mb="0" cb="0"/><line nr="1950" mi="2" ci="0" mb="2" cb="0"/><line nr="1951" mi="2" ci="0" mb="0" cb="0"/><line nr="1953" mi="2" ci="0" mb="0" cb="0"/><line nr="1959" mi="4" ci="0" mb="2" cb="0"/><line nr="1960" mi="8" ci="0" mb="0" cb="0"/><line nr="1961" mi="2" ci="0" mb="2" cb="0"/><line nr="1962" mi="2" ci="0" mb="0" cb="0"/><line nr="1964" mi="2" ci="0" mb="0" cb="0"/><line nr="1971" mi="6" ci="0" mb="0" cb="0"/><line nr="1972" mi="2" ci="0" mb="2" cb="0"/><line nr="1973" mi="2" ci="0" mb="0" cb="0"/><line nr="1976" mi="6" ci="0" mb="0" cb="0"/><line nr="1977" mi="2" ci="0" mb="2" cb="0"/><line nr="1978" mi="2" ci="0" mb="0" cb="0"/><line nr="1981" mi="6" ci="0" mb="0" cb="0"/><line nr="1982" mi="2" ci="0" mb="2" cb="0"/><line nr="1983" mi="2" ci="0" mb="0" cb="0"/><line nr="1985" mi="4" ci="0" mb="2" cb="0"/><line nr="1986" mi="8" ci="0" mb="0" cb="0"/><line nr="1987" mi="2" ci="0" mb="2" cb="0"/><line nr="1988" mi="2" ci="0" mb="0" cb="0"/><line nr="1990" mi="2" ci="0" mb="0" cb="0"/><line nr="1997" mi="6" ci="0" mb="0" cb="0"/><line nr="1998" mi="2" ci="0" mb="2" cb="0"/><line nr="1999" mi="2" ci="0" mb="0" cb="0"/><line nr="2001" mi="4" ci="0" mb="2" cb="0"/><line nr="2002" mi="8" ci="0" mb="0" cb="0"/><line nr="2003" mi="2" ci="0" mb="2" cb="0"/><line nr="2004" mi="2" ci="0" mb="0" cb="0"/><line nr="2006" mi="2" ci="0" mb="0" cb="0"/><line nr="2012" mi="4" ci="0" mb="2" cb="0"/><line nr="2013" mi="8" ci="0" mb="0" cb="0"/><line nr="2014" mi="2" ci="0" mb="2" cb="0"/><line nr="2015" mi="2" ci="0" mb="0" cb="0"/><line nr="2017" mi="2" ci="0" mb="0" cb="0"/><line nr="2024" mi="6" ci="0" mb="0" cb="0"/><line nr="2025" mi="2" ci="0" mb="2" cb="0"/><line nr="2026" mi="2" ci="0" mb="0" cb="0"/><line nr="2029" mi="6" ci="0" mb="0" cb="0"/><line nr="2030" mi="2" ci="0" mb="2" cb="0"/><line nr="2031" mi="2" ci="0" mb="0" cb="0"/><line nr="2033" mi="4" ci="0" mb="2" cb="0"/><line nr="2034" mi="8" ci="0" mb="0" cb="0"/><line nr="2035" mi="2" ci="0" mb="2" cb="0"/><line nr="2036" mi="2" ci="0" mb="0" cb="0"/><line nr="2038" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3482" covered="339"/><counter type="BRANCH" missed="778" covered="48"/><counter type="LINE" missed="992" covered="91"/><counter type="COMPLEXITY" missed="489" covered="19"/><counter type="METHOD" missed="80" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HashCodeVisitor.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="57" ci="0" mb="2" cb="0"/><line nr="54" mi="0" ci="75" mb="0" cb="4"/><line nr="58" mi="37" ci="0" mb="2" cb="0"/><line nr="62" mi="55" ci="0" mb="4" cb="0"/><line nr="66" mi="45" ci="0" mb="4" cb="0"/><line nr="70" mi="27" ci="0" mb="2" cb="0"/><line nr="74" mi="10" ci="33" mb="1" cb="1"/><line nr="78" mi="45" ci="0" mb="4" cb="0"/><line nr="82" mi="10" ci="33" mb="1" cb="1"/><line nr="86" mi="10" ci="33" mb="1" cb="1"/><line nr="90" mi="10" ci="13" mb="1" cb="1"/><line nr="94" mi="10" ci="17" mb="1" cb="1"/><line nr="98" mi="26" ci="0" mb="4" cb="0"/><line nr="102" mi="35" ci="0" mb="4" cb="0"/><line nr="106" mi="37" ci="0" mb="2" cb="0"/><line nr="110" mi="37" ci="0" mb="2" cb="0"/><line nr="114" mi="10" ci="13" mb="1" cb="1"/><line nr="118" mi="27" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="94" mb="1" cb="3"/><line nr="126" mi="30" ci="43" mb="3" cb="3"/><line nr="130" mi="20" ci="53" mb="2" cb="4"/><line nr="134" mi="47" ci="0" mb="2" cb="0"/><line nr="138" mi="20" ci="85" mb="2" cb="2"/><line nr="142" mi="35" ci="0" mb="4" cb="0"/><line nr="146" mi="37" ci="0" mb="2" cb="0"/><line nr="150" mi="23" ci="0" mb="2" cb="0"/><line nr="154" mi="16" ci="0" mb="2" cb="0"/><line nr="158" mi="27" ci="0" mb="2" cb="0"/><line nr="162" mi="10" ci="47" mb="1" cb="1"/><line nr="166" mi="77" ci="0" mb="2" cb="0"/><line nr="170" mi="72" ci="0" mb="8" cb="0"/><line nr="174" mi="0" ci="27" mb="0" cb="2"/><line nr="178" mi="20" ci="35" mb="2" cb="2"/><line nr="182" mi="10" ci="37" mb="1" cb="1"/><line nr="186" mi="65" ci="0" mb="4" cb="0"/><line nr="190" mi="47" ci="0" mb="2" cb="0"/><line nr="194" mi="55" ci="0" mb="4" cb="0"/><line nr="198" mi="14" ci="31" mb="3" cb="3"/><line nr="202" mi="46" ci="0" mb="4" cb="0"/><line nr="206" mi="37" ci="0" mb="2" cb="0"/><line nr="210" mi="10" ci="13" mb="1" cb="1"/><line nr="214" mi="37" ci="0" mb="2" cb="0"/><line nr="218" mi="23" ci="0" mb="2" cb="0"/><line nr="222" mi="37" ci="0" mb="2" cb="0"/><line nr="226" mi="46" ci="0" mb="4" cb="0"/><line nr="230" mi="10" ci="13" mb="1" cb="1"/><line nr="234" mi="27" ci="0" mb="2" cb="0"/><line nr="238" mi="23" ci="0" mb="2" cb="0"/><line nr="242" mi="10" ci="17" mb="1" cb="1"/><line nr="246" mi="37" ci="0" mb="2" cb="0"/><line nr="250" mi="20" ci="53" mb="2" cb="4"/><line nr="254" mi="21" ci="102" mb="3" cb="3"/><line nr="258" mi="51" ci="0" mb="4" cb="0"/><line nr="262" mi="10" ci="17" mb="1" cb="1"/><line nr="266" mi="10" ci="31" mb="1" cb="3"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="9" mb="0" cb="2"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="10" ci="27" mb="1" cb="1"/><line nr="282" mi="9" ci="7" mb="1" cb="1"/><line nr="286" mi="31" ci="60" mb="4" cb="4"/><line nr="290" mi="10" ci="27" mb="1" cb="1"/><line nr="294" mi="12" ci="64" mb="2" cb="2"/><line nr="298" mi="10" ci="23" mb="1" cb="1"/><line nr="302" mi="11" ci="24" mb="2" cb="2"/><line nr="306" mi="0" ci="23" mb="0" cb="2"/><line nr="310" mi="37" ci="0" mb="2" cb="0"/><line nr="314" mi="10" ci="13" mb="1" cb="1"/><line nr="318" mi="35" ci="0" mb="4" cb="0"/><line nr="322" mi="43" ci="0" mb="2" cb="0"/><line nr="326" mi="37" ci="0" mb="2" cb="0"/><line nr="330" mi="37" ci="0" mb="2" cb="0"/><line nr="334" mi="20" ci="15" mb="2" cb="2"/><line nr="338" mi="27" ci="0" mb="2" cb="0"/><line nr="342" mi="65" ci="0" mb="4" cb="0"/><line nr="346" mi="27" ci="0" mb="2" cb="0"/><line nr="350" mi="10" ci="37" mb="1" cb="1"/><line nr="354" mi="33" ci="0" mb="2" cb="0"/><line nr="358" mi="37" ci="0" mb="2" cb="0"/><line nr="362" mi="27" ci="0" mb="2" cb="0"/><line nr="366" mi="10" ci="37" mb="1" cb="1"/><line nr="370" mi="10" ci="45" mb="1" cb="3"/><line nr="374" mi="10" ci="17" mb="1" cb="1"/><line nr="378" mi="37" ci="0" mb="2" cb="0"/><line nr="382" mi="63" ci="0" mb="6" cb="0"/><line nr="386" mi="56" ci="0" mb="4" cb="0"/><line nr="390" mi="37" ci="0" mb="2" cb="0"/><line nr="395" mi="37" ci="0" mb="2" cb="0"/><line nr="400" mi="37" ci="0" mb="2" cb="0"/><line nr="405" mi="27" ci="0" mb="2" cb="0"/><line nr="410" mi="37" ci="0" mb="2" cb="0"/><line nr="415" mi="16" ci="0" mb="2" cb="0"/><line nr="420" mi="47" ci="0" mb="2" cb="0"/><line nr="425" mi="27" ci="0" mb="2" cb="0"/><line nr="430" mi="10" ci="13" mb="1" cb="1"/><line nr="435" mi="37" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="2606" covered="1386"/><counter type="BRANCH" missed="199" covered="71"/><counter type="LINE" missed="55" covered="45"/><counter type="COMPLEXITY" missed="180" covered="51"/><counter type="METHOD" missed="55" covered="41"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericListVisitorAdapter.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="2" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="2" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="2" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="2" cb="0"/><line nr="106" mi="9" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="2" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="2" cb="0"/><line nr="143" mi="9" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="7" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="2" cb="0"/><line nr="169" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="2" cb="0"/><line nr="174" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="2" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="2" cb="0"/><line nr="190" mi="9" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="2" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="2" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="9" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="2" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="2" cb="0"/><line nr="227" mi="9" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="2" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="9" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="2" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="2" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="2" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="2" cb="0"/><line nr="253" mi="9" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="2" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="2" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="2" cb="0"/><line nr="274" mi="9" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="2" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="2" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="2" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="7" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="2" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="2" cb="0"/><line nr="301" mi="9" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="2" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="2" cb="0"/><line nr="312" mi="9" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="2" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="2" cb="0"/><line nr="323" mi="9" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="2" cb="0"/><line nr="328" mi="9" ci="0" mb="0" cb="0"/><line nr="329" mi="2" ci="0" mb="2" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="2" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="7" ci="0" mb="0" cb="0"/><line nr="345" mi="2" ci="0" mb="2" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="2" cb="0"/><line nr="349" mi="9" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="2" cb="0"/><line nr="351" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="4" ci="0" mb="0" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="2" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="2" cb="0"/><line nr="367" mi="4" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="2" cb="0"/><line nr="370" mi="9" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="2" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="4" ci="0" mb="2" cb="0"/><line nr="381" mi="9" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="2" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="7" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="2" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="2" cb="0"/><line nr="397" mi="9" ci="0" mb="0" cb="0"/><line nr="398" mi="2" ci="0" mb="2" cb="0"/><line nr="399" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="2" ci="0" mb="2" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="7" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="2" cb="0"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="2" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="7" ci="0" mb="0" cb="0"/><line nr="424" mi="2" ci="0" mb="2" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="0" cb="0"/><line nr="429" mi="2" ci="0" mb="2" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="2" cb="0"/><line nr="435" mi="4" ci="0" mb="0" cb="0"/><line nr="438" mi="7" ci="0" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="2" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="4" ci="0" mb="2" cb="0"/><line nr="443" mi="9" ci="0" mb="0" cb="0"/><line nr="444" mi="2" ci="0" mb="2" cb="0"/><line nr="445" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="2" ci="0" mb="0" cb="0"/><line nr="451" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="7" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="2" cb="0"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="2" cb="0"/><line nr="459" mi="9" ci="0" mb="0" cb="0"/><line nr="460" mi="2" ci="0" mb="2" cb="0"/><line nr="461" mi="4" ci="0" mb="0" cb="0"/><line nr="463" mi="4" ci="0" mb="2" cb="0"/><line nr="464" mi="9" ci="0" mb="0" cb="0"/><line nr="465" mi="2" ci="0" mb="2" cb="0"/><line nr="466" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="2" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="4" ci="0" mb="2" cb="0"/><line nr="474" mi="9" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="2" cb="0"/><line nr="476" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="7" ci="0" mb="0" cb="0"/><line nr="486" mi="2" ci="0" mb="2" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="4" ci="0" mb="2" cb="0"/><line nr="490" mi="9" ci="0" mb="0" cb="0"/><line nr="491" mi="2" ci="0" mb="2" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="494" mi="4" ci="0" mb="2" cb="0"/><line nr="495" mi="9" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="2" cb="0"/><line nr="497" mi="4" ci="0" mb="0" cb="0"/><line nr="500" mi="7" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="2" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="504" mi="4" ci="0" mb="2" cb="0"/><line nr="505" mi="9" ci="0" mb="0" cb="0"/><line nr="506" mi="2" ci="0" mb="2" cb="0"/><line nr="507" mi="4" ci="0" mb="0" cb="0"/><line nr="509" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="516" mi="7" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="2" cb="0"/><line nr="518" mi="4" ci="0" mb="0" cb="0"/><line nr="521" mi="7" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="2" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="526" mi="7" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="2" cb="0"/><line nr="528" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="4" ci="0" mb="2" cb="0"/><line nr="531" mi="9" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="2" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="539" mi="4" ci="0" mb="0" cb="0"/><line nr="542" mi="7" ci="0" mb="0" cb="0"/><line nr="543" mi="2" ci="0" mb="2" cb="0"/><line nr="544" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="7" ci="0" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="2" cb="0"/><line nr="549" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="7" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="2" cb="0"/><line nr="554" mi="4" ci="0" mb="0" cb="0"/><line nr="557" mi="7" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="2" cb="0"/><line nr="559" mi="4" ci="0" mb="0" cb="0"/><line nr="561" mi="4" ci="0" mb="2" cb="0"/><line nr="562" mi="9" ci="0" mb="0" cb="0"/><line nr="563" mi="2" ci="0" mb="2" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="567" mi="7" ci="0" mb="0" cb="0"/><line nr="568" mi="2" ci="0" mb="2" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="7" ci="0" mb="0" cb="0"/><line nr="573" mi="2" ci="0" mb="2" cb="0"/><line nr="574" mi="4" ci="0" mb="0" cb="0"/><line nr="577" mi="7" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="2" cb="0"/><line nr="579" mi="4" ci="0" mb="0" cb="0"/><line nr="581" mi="4" ci="0" mb="2" cb="0"/><line nr="582" mi="9" ci="0" mb="0" cb="0"/><line nr="583" mi="2" ci="0" mb="2" cb="0"/><line nr="584" mi="4" ci="0" mb="0" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="590" mi="4" ci="0" mb="0" cb="0"/><line nr="592" mi="4" ci="0" mb="2" cb="0"/><line nr="593" mi="9" ci="0" mb="0" cb="0"/><line nr="594" mi="2" ci="0" mb="2" cb="0"/><line nr="595" mi="4" ci="0" mb="0" cb="0"/><line nr="597" mi="4" ci="0" mb="2" cb="0"/><line nr="598" mi="9" ci="0" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="2" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="602" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="4" ci="0" mb="0" cb="0"/><line nr="609" mi="7" ci="0" mb="0" cb="0"/><line nr="610" mi="2" ci="0" mb="2" cb="0"/><line nr="611" mi="4" ci="0" mb="0" cb="0"/><line nr="614" mi="7" ci="0" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="2" cb="0"/><line nr="616" mi="4" ci="0" mb="0" cb="0"/><line nr="618" mi="4" ci="0" mb="2" cb="0"/><line nr="619" mi="9" ci="0" mb="0" cb="0"/><line nr="620" mi="2" ci="0" mb="2" cb="0"/><line nr="621" mi="4" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="627" mi="4" ci="0" mb="0" cb="0"/><line nr="629" mi="4" ci="0" mb="2" cb="0"/><line nr="630" mi="9" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="2" cb="0"/><line nr="632" mi="4" ci="0" mb="0" cb="0"/><line nr="634" mi="2" ci="0" mb="0" cb="0"/><line nr="638" mi="4" ci="0" mb="0" cb="0"/><line nr="640" mi="4" ci="0" mb="2" cb="0"/><line nr="641" mi="9" ci="0" mb="0" cb="0"/><line nr="642" mi="2" ci="0" mb="2" cb="0"/><line nr="643" mi="4" ci="0" mb="0" cb="0"/><line nr="645" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="4" ci="0" mb="0" cb="0"/><line nr="652" mi="7" ci="0" mb="0" cb="0"/><line nr="653" mi="2" ci="0" mb="2" cb="0"/><line nr="654" mi="4" ci="0" mb="0" cb="0"/><line nr="656" mi="4" ci="0" mb="2" cb="0"/><line nr="657" mi="9" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="2" cb="0"/><line nr="659" mi="4" ci="0" mb="0" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="665" mi="4" ci="0" mb="0" cb="0"/><line nr="668" mi="7" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="2" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="673" mi="7" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="0" mb="2" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="678" mi="7" ci="0" mb="0" cb="0"/><line nr="679" mi="2" ci="0" mb="2" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="683" mi="7" ci="0" mb="0" cb="0"/><line nr="684" mi="2" ci="0" mb="2" cb="0"/><line nr="685" mi="4" ci="0" mb="0" cb="0"/><line nr="687" mi="4" ci="0" mb="2" cb="0"/><line nr="688" mi="9" ci="0" mb="0" cb="0"/><line nr="689" mi="2" ci="0" mb="2" cb="0"/><line nr="690" mi="4" ci="0" mb="0" cb="0"/><line nr="692" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="4" ci="0" mb="0" cb="0"/><line nr="699" mi="7" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="2" cb="0"/><line nr="701" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="2" cb="0"/><line nr="706" mi="4" ci="0" mb="0" cb="0"/><line nr="709" mi="7" ci="0" mb="0" cb="0"/><line nr="710" mi="2" ci="0" mb="2" cb="0"/><line nr="711" mi="4" ci="0" mb="0" cb="0"/><line nr="714" mi="7" ci="0" mb="0" cb="0"/><line nr="715" mi="2" ci="0" mb="2" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="719" mi="7" ci="0" mb="0" cb="0"/><line nr="720" mi="2" ci="0" mb="2" cb="0"/><line nr="721" mi="4" ci="0" mb="0" cb="0"/><line nr="724" mi="7" ci="0" mb="0" cb="0"/><line nr="725" mi="2" ci="0" mb="2" cb="0"/><line nr="726" mi="4" ci="0" mb="0" cb="0"/><line nr="728" mi="4" ci="0" mb="2" cb="0"/><line nr="729" mi="9" ci="0" mb="0" cb="0"/><line nr="730" mi="2" ci="0" mb="2" cb="0"/><line nr="731" mi="4" ci="0" mb="0" cb="0"/><line nr="733" mi="2" ci="0" mb="0" cb="0"/><line nr="737" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="7" ci="0" mb="0" cb="0"/><line nr="741" mi="2" ci="0" mb="2" cb="0"/><line nr="742" mi="4" ci="0" mb="0" cb="0"/><line nr="744" mi="4" ci="0" mb="2" cb="0"/><line nr="745" mi="9" ci="0" mb="0" cb="0"/><line nr="746" mi="2" ci="0" mb="2" cb="0"/><line nr="747" mi="4" ci="0" mb="0" cb="0"/><line nr="749" mi="4" ci="0" mb="2" cb="0"/><line nr="750" mi="9" ci="0" mb="0" cb="0"/><line nr="751" mi="2" ci="0" mb="2" cb="0"/><line nr="752" mi="4" ci="0" mb="0" cb="0"/><line nr="754" mi="4" ci="0" mb="2" cb="0"/><line nr="755" mi="9" ci="0" mb="0" cb="0"/><line nr="756" mi="2" ci="0" mb="2" cb="0"/><line nr="757" mi="4" ci="0" mb="0" cb="0"/><line nr="759" mi="2" ci="0" mb="0" cb="0"/><line nr="763" mi="4" ci="0" mb="0" cb="0"/><line nr="766" mi="7" ci="0" mb="0" cb="0"/><line nr="767" mi="2" ci="0" mb="2" cb="0"/><line nr="768" mi="4" ci="0" mb="0" cb="0"/><line nr="770" mi="4" ci="0" mb="2" cb="0"/><line nr="771" mi="9" ci="0" mb="0" cb="0"/><line nr="772" mi="2" ci="0" mb="2" cb="0"/><line nr="773" mi="4" ci="0" mb="0" cb="0"/><line nr="775" mi="2" ci="0" mb="0" cb="0"/><line nr="779" mi="4" ci="0" mb="0" cb="0"/><line nr="782" mi="7" ci="0" mb="0" cb="0"/><line nr="783" mi="2" ci="0" mb="2" cb="0"/><line nr="784" mi="4" ci="0" mb="0" cb="0"/><line nr="787" mi="7" ci="0" mb="0" cb="0"/><line nr="788" mi="2" ci="0" mb="2" cb="0"/><line nr="789" mi="4" ci="0" mb="0" cb="0"/><line nr="791" mi="4" ci="0" mb="2" cb="0"/><line nr="792" mi="9" ci="0" mb="0" cb="0"/><line nr="793" mi="2" ci="0" mb="2" cb="0"/><line nr="794" mi="4" ci="0" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="2" cb="0"/><line nr="797" mi="9" ci="0" mb="0" cb="0"/><line nr="798" mi="2" ci="0" mb="2" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="801" mi="2" ci="0" mb="0" cb="0"/><line nr="805" mi="4" ci="0" mb="0" cb="0"/><line nr="808" mi="7" ci="0" mb="0" cb="0"/><line nr="809" mi="2" ci="0" mb="2" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="813" mi="7" ci="0" mb="0" cb="0"/><line nr="814" mi="2" ci="0" mb="2" cb="0"/><line nr="815" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="7" ci="0" mb="0" cb="0"/><line nr="819" mi="2" ci="0" mb="2" cb="0"/><line nr="820" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="4" ci="0" mb="2" cb="0"/><line nr="823" mi="9" ci="0" mb="0" cb="0"/><line nr="824" mi="2" ci="0" mb="2" cb="0"/><line nr="825" mi="4" ci="0" mb="0" cb="0"/><line nr="827" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><line nr="834" mi="7" ci="0" mb="0" cb="0"/><line nr="835" mi="2" ci="0" mb="2" cb="0"/><line nr="836" mi="4" ci="0" mb="0" cb="0"/><line nr="838" mi="4" ci="0" mb="2" cb="0"/><line nr="839" mi="9" ci="0" mb="0" cb="0"/><line nr="840" mi="2" ci="0" mb="2" cb="0"/><line nr="841" mi="4" ci="0" mb="0" cb="0"/><line nr="844" mi="7" ci="0" mb="0" cb="0"/><line nr="845" mi="2" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="0" cb="0"/><line nr="849" mi="7" ci="0" mb="0" cb="0"/><line nr="850" mi="2" ci="0" mb="2" cb="0"/><line nr="851" mi="4" ci="0" mb="0" cb="0"/><line nr="853" mi="4" ci="0" mb="2" cb="0"/><line nr="854" mi="9" ci="0" mb="0" cb="0"/><line nr="855" mi="2" ci="0" mb="2" cb="0"/><line nr="856" mi="4" ci="0" mb="0" cb="0"/><line nr="858" mi="2" ci="0" mb="0" cb="0"/><line nr="862" mi="4" ci="0" mb="0" cb="0"/><line nr="865" mi="7" ci="0" mb="0" cb="0"/><line nr="866" mi="2" ci="0" mb="2" cb="0"/><line nr="867" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="7" ci="0" mb="0" cb="0"/><line nr="871" mi="2" ci="0" mb="2" cb="0"/><line nr="872" mi="4" ci="0" mb="0" cb="0"/><line nr="875" mi="7" ci="0" mb="0" cb="0"/><line nr="876" mi="2" ci="0" mb="2" cb="0"/><line nr="877" mi="4" ci="0" mb="0" cb="0"/><line nr="879" mi="4" ci="0" mb="2" cb="0"/><line nr="880" mi="9" ci="0" mb="0" cb="0"/><line nr="881" mi="2" ci="0" mb="2" cb="0"/><line nr="882" mi="4" ci="0" mb="0" cb="0"/><line nr="884" mi="2" ci="0" mb="0" cb="0"/><line nr="888" mi="4" ci="0" mb="0" cb="0"/><line nr="891" mi="7" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="2" cb="0"/><line nr="893" mi="4" ci="0" mb="0" cb="0"/><line nr="895" mi="4" ci="0" mb="2" cb="0"/><line nr="896" mi="9" ci="0" mb="0" cb="0"/><line nr="897" mi="2" ci="0" mb="2" cb="0"/><line nr="898" mi="4" ci="0" mb="0" cb="0"/><line nr="901" mi="7" ci="0" mb="0" cb="0"/><line nr="902" mi="2" ci="0" mb="2" cb="0"/><line nr="903" mi="4" ci="0" mb="0" cb="0"/><line nr="905" mi="4" ci="0" mb="2" cb="0"/><line nr="906" mi="9" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="2" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="910" mi="2" ci="0" mb="0" cb="0"/><line nr="914" mi="4" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="0" cb="0"/><line nr="918" mi="2" ci="0" mb="2" cb="0"/><line nr="919" mi="4" ci="0" mb="0" cb="0"/><line nr="921" mi="4" ci="0" mb="2" cb="0"/><line nr="922" mi="9" ci="0" mb="0" cb="0"/><line nr="923" mi="2" ci="0" mb="2" cb="0"/><line nr="924" mi="4" ci="0" mb="0" cb="0"/><line nr="926" mi="2" ci="0" mb="0" cb="0"/><line nr="930" mi="4" ci="0" mb="0" cb="0"/><line nr="933" mi="7" ci="0" mb="0" cb="0"/><line nr="934" mi="2" ci="0" mb="2" cb="0"/><line nr="935" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="7" ci="0" mb="0" cb="0"/><line nr="939" mi="2" ci="0" mb="2" cb="0"/><line nr="940" mi="4" ci="0" mb="0" cb="0"/><line nr="942" mi="4" ci="0" mb="2" cb="0"/><line nr="943" mi="9" ci="0" mb="0" cb="0"/><line nr="944" mi="2" ci="0" mb="2" cb="0"/><line nr="945" mi="4" ci="0" mb="0" cb="0"/><line nr="947" mi="2" ci="0" mb="0" cb="0"/><line nr="951" mi="4" ci="0" mb="0" cb="0"/><line nr="954" mi="7" ci="0" mb="0" cb="0"/><line nr="955" mi="2" ci="0" mb="2" cb="0"/><line nr="956" mi="4" ci="0" mb="0" cb="0"/><line nr="959" mi="7" ci="0" mb="0" cb="0"/><line nr="960" mi="2" ci="0" mb="2" cb="0"/><line nr="961" mi="4" ci="0" mb="0" cb="0"/><line nr="963" mi="4" ci="0" mb="2" cb="0"/><line nr="964" mi="9" ci="0" mb="0" cb="0"/><line nr="965" mi="2" ci="0" mb="2" cb="0"/><line nr="966" mi="4" ci="0" mb="0" cb="0"/><line nr="968" mi="2" ci="0" mb="0" cb="0"/><line nr="972" mi="4" ci="0" mb="0" cb="0"/><line nr="974" mi="4" ci="0" mb="2" cb="0"/><line nr="975" mi="9" ci="0" mb="0" cb="0"/><line nr="976" mi="2" ci="0" mb="2" cb="0"/><line nr="977" mi="4" ci="0" mb="0" cb="0"/><line nr="979" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="4" ci="0" mb="0" cb="0"/><line nr="986" mi="7" ci="0" mb="0" cb="0"/><line nr="987" mi="2" ci="0" mb="2" cb="0"/><line nr="988" mi="4" ci="0" mb="0" cb="0"/><line nr="991" mi="7" ci="0" mb="0" cb="0"/><line nr="992" mi="2" ci="0" mb="2" cb="0"/><line nr="993" mi="4" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="2" cb="0"/><line nr="996" mi="9" ci="0" mb="0" cb="0"/><line nr="997" mi="2" ci="0" mb="2" cb="0"/><line nr="998" mi="4" ci="0" mb="0" cb="0"/><line nr="1000" mi="2" ci="0" mb="0" cb="0"/><line nr="1004" mi="4" ci="0" mb="0" cb="0"/><line nr="1006" mi="4" ci="0" mb="2" cb="0"/><line nr="1007" mi="9" ci="0" mb="0" cb="0"/><line nr="1008" mi="2" ci="0" mb="2" cb="0"/><line nr="1009" mi="4" ci="0" mb="0" cb="0"/><line nr="1011" mi="2" ci="0" mb="0" cb="0"/><line nr="1015" mi="4" ci="0" mb="0" cb="0"/><line nr="1018" mi="7" ci="0" mb="0" cb="0"/><line nr="1019" mi="2" ci="0" mb="2" cb="0"/><line nr="1020" mi="4" ci="0" mb="0" cb="0"/><line nr="1023" mi="7" ci="0" mb="0" cb="0"/><line nr="1024" mi="2" ci="0" mb="2" cb="0"/><line nr="1025" mi="4" ci="0" mb="0" cb="0"/><line nr="1027" mi="4" ci="0" mb="2" cb="0"/><line nr="1028" mi="9" ci="0" mb="0" cb="0"/><line nr="1029" mi="2" ci="0" mb="2" cb="0"/><line nr="1030" mi="4" ci="0" mb="0" cb="0"/><line nr="1032" mi="2" ci="0" mb="0" cb="0"/><line nr="1036" mi="4" ci="0" mb="0" cb="0"/><line nr="1039" mi="7" ci="0" mb="0" cb="0"/><line nr="1040" mi="2" ci="0" mb="2" cb="0"/><line nr="1041" mi="4" ci="0" mb="0" cb="0"/><line nr="1044" mi="7" ci="0" mb="0" cb="0"/><line nr="1045" mi="2" ci="0" mb="2" cb="0"/><line nr="1046" mi="4" ci="0" mb="0" cb="0"/><line nr="1048" mi="4" ci="0" mb="2" cb="0"/><line nr="1049" mi="9" ci="0" mb="0" cb="0"/><line nr="1050" mi="2" ci="0" mb="2" cb="0"/><line nr="1051" mi="4" ci="0" mb="0" cb="0"/><line nr="1053" mi="2" ci="0" mb="0" cb="0"/><line nr="1057" mi="4" ci="0" mb="0" cb="0"/><line nr="1059" mi="4" ci="0" mb="2" cb="0"/><line nr="1060" mi="9" ci="0" mb="0" cb="0"/><line nr="1061" mi="2" ci="0" mb="2" cb="0"/><line nr="1062" mi="4" ci="0" mb="0" cb="0"/><line nr="1064" mi="2" ci="0" mb="0" cb="0"/><line nr="1068" mi="4" ci="0" mb="0" cb="0"/><line nr="1071" mi="7" ci="0" mb="0" cb="0"/><line nr="1072" mi="2" ci="0" mb="2" cb="0"/><line nr="1073" mi="4" ci="0" mb="0" cb="0"/><line nr="1075" mi="4" ci="0" mb="2" cb="0"/><line nr="1076" mi="9" ci="0" mb="0" cb="0"/><line nr="1077" mi="2" ci="0" mb="2" cb="0"/><line nr="1078" mi="4" ci="0" mb="0" cb="0"/><line nr="1080" mi="2" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="0" cb="0"/><line nr="1086" mi="4" ci="0" mb="2" cb="0"/><line nr="1087" mi="9" ci="0" mb="0" cb="0"/><line nr="1088" mi="2" ci="0" mb="2" cb="0"/><line nr="1089" mi="4" ci="0" mb="0" cb="0"/><line nr="1091" mi="2" ci="0" mb="0" cb="0"/><line nr="1095" mi="4" ci="0" mb="0" cb="0"/><line nr="1098" mi="7" ci="0" mb="0" cb="0"/><line nr="1099" mi="2" ci="0" mb="2" cb="0"/><line nr="1100" mi="4" ci="0" mb="0" cb="0"/><line nr="1102" mi="4" ci="0" mb="2" cb="0"/><line nr="1103" mi="9" ci="0" mb="0" cb="0"/><line nr="1104" mi="2" ci="0" mb="2" cb="0"/><line nr="1105" mi="4" ci="0" mb="0" cb="0"/><line nr="1107" mi="2" ci="0" mb="0" cb="0"/><line nr="1111" mi="4" ci="0" mb="0" cb="0"/><line nr="1114" mi="7" ci="0" mb="0" cb="0"/><line nr="1115" mi="2" ci="0" mb="2" cb="0"/><line nr="1116" mi="4" ci="0" mb="0" cb="0"/><line nr="1119" mi="7" ci="0" mb="0" cb="0"/><line nr="1120" mi="2" ci="0" mb="2" cb="0"/><line nr="1121" mi="4" ci="0" mb="0" cb="0"/><line nr="1123" mi="4" ci="0" mb="2" cb="0"/><line nr="1124" mi="9" ci="0" mb="0" cb="0"/><line nr="1125" mi="2" ci="0" mb="2" cb="0"/><line nr="1126" mi="4" ci="0" mb="0" cb="0"/><line nr="1128" mi="2" ci="0" mb="0" cb="0"/><line nr="1132" mi="4" ci="0" mb="0" cb="0"/><line nr="1135" mi="7" ci="0" mb="0" cb="0"/><line nr="1136" mi="2" ci="0" mb="2" cb="0"/><line nr="1137" mi="4" ci="0" mb="0" cb="0"/><line nr="1140" mi="7" ci="0" mb="0" cb="0"/><line nr="1141" mi="2" ci="0" mb="2" cb="0"/><line nr="1142" mi="4" ci="0" mb="0" cb="0"/><line nr="1144" mi="4" ci="0" mb="2" cb="0"/><line nr="1145" mi="9" ci="0" mb="0" cb="0"/><line nr="1146" mi="2" ci="0" mb="2" cb="0"/><line nr="1147" mi="4" ci="0" mb="0" cb="0"/><line nr="1149" mi="4" ci="0" mb="2" cb="0"/><line nr="1150" mi="9" ci="0" mb="0" cb="0"/><line nr="1151" mi="2" ci="0" mb="2" cb="0"/><line nr="1152" mi="4" ci="0" mb="0" cb="0"/><line nr="1154" mi="4" ci="0" mb="2" cb="0"/><line nr="1155" mi="9" ci="0" mb="0" cb="0"/><line nr="1156" mi="2" ci="0" mb="2" cb="0"/><line nr="1157" mi="4" ci="0" mb="0" cb="0"/><line nr="1159" mi="2" ci="0" mb="0" cb="0"/><line nr="1163" mi="4" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="2" cb="0"/><line nr="1166" mi="9" ci="0" mb="0" cb="0"/><line nr="1167" mi="2" ci="0" mb="2" cb="0"/><line nr="1168" mi="4" ci="0" mb="0" cb="0"/><line nr="1171" mi="7" ci="0" mb="0" cb="0"/><line nr="1172" mi="2" ci="0" mb="2" cb="0"/><line nr="1173" mi="4" ci="0" mb="0" cb="0"/><line nr="1176" mi="7" ci="0" mb="0" cb="0"/><line nr="1177" mi="2" ci="0" mb="2" cb="0"/><line nr="1178" mi="4" ci="0" mb="0" cb="0"/><line nr="1181" mi="7" ci="0" mb="0" cb="0"/><line nr="1182" mi="2" ci="0" mb="2" cb="0"/><line nr="1183" mi="4" ci="0" mb="0" cb="0"/><line nr="1186" mi="7" ci="0" mb="0" cb="0"/><line nr="1187" mi="2" ci="0" mb="2" cb="0"/><line nr="1188" mi="4" ci="0" mb="0" cb="0"/><line nr="1190" mi="4" ci="0" mb="2" cb="0"/><line nr="1191" mi="9" ci="0" mb="0" cb="0"/><line nr="1192" mi="2" ci="0" mb="2" cb="0"/><line nr="1193" mi="4" ci="0" mb="0" cb="0"/><line nr="1196" mi="7" ci="0" mb="0" cb="0"/><line nr="1197" mi="2" ci="0" mb="2" cb="0"/><line nr="1198" mi="4" ci="0" mb="0" cb="0"/><line nr="1201" mi="7" ci="0" mb="0" cb="0"/><line nr="1202" mi="2" ci="0" mb="2" cb="0"/><line nr="1203" mi="4" ci="0" mb="0" cb="0"/><line nr="1206" mi="7" ci="0" mb="0" cb="0"/><line nr="1207" mi="2" ci="0" mb="2" cb="0"/><line nr="1208" mi="4" ci="0" mb="0" cb="0"/><line nr="1210" mi="4" ci="0" mb="2" cb="0"/><line nr="1211" mi="9" ci="0" mb="0" cb="0"/><line nr="1212" mi="2" ci="0" mb="2" cb="0"/><line nr="1213" mi="4" ci="0" mb="0" cb="0"/><line nr="1215" mi="2" ci="0" mb="0" cb="0"/><line nr="1219" mi="4" ci="0" mb="0" cb="0"/><line nr="1222" mi="7" ci="0" mb="0" cb="0"/><line nr="1223" mi="2" ci="0" mb="2" cb="0"/><line nr="1224" mi="4" ci="0" mb="0" cb="0"/><line nr="1226" mi="4" ci="0" mb="2" cb="0"/><line nr="1227" mi="9" ci="0" mb="0" cb="0"/><line nr="1228" mi="2" ci="0" mb="2" cb="0"/><line nr="1229" mi="4" ci="0" mb="0" cb="0"/><line nr="1231" mi="4" ci="0" mb="2" cb="0"/><line nr="1232" mi="9" ci="0" mb="0" cb="0"/><line nr="1233" mi="2" ci="0" mb="2" cb="0"/><line nr="1234" mi="4" ci="0" mb="0" cb="0"/><line nr="1236" mi="2" ci="0" mb="0" cb="0"/><line nr="1240" mi="4" ci="0" mb="0" cb="0"/><line nr="1243" mi="7" ci="0" mb="0" cb="0"/><line nr="1244" mi="2" ci="0" mb="2" cb="0"/><line nr="1245" mi="4" ci="0" mb="0" cb="0"/><line nr="1247" mi="4" ci="0" mb="2" cb="0"/><line nr="1248" mi="9" ci="0" mb="0" cb="0"/><line nr="1249" mi="2" ci="0" mb="2" cb="0"/><line nr="1250" mi="4" ci="0" mb="0" cb="0"/><line nr="1252" mi="2" ci="0" mb="0" cb="0"/><line nr="1256" mi="4" ci="0" mb="0" cb="0"/><line nr="1258" mi="4" ci="0" mb="2" cb="0"/><line nr="1259" mi="9" ci="0" mb="0" cb="0"/><line nr="1260" mi="2" ci="0" mb="2" cb="0"/><line nr="1261" mi="4" ci="0" mb="0" cb="0"/><line nr="1263" mi="4" ci="0" mb="2" cb="0"/><line nr="1264" mi="9" ci="0" mb="0" cb="0"/><line nr="1265" mi="2" ci="0" mb="2" cb="0"/><line nr="1266" mi="4" ci="0" mb="0" cb="0"/><line nr="1268" mi="2" ci="0" mb="0" cb="0"/><line nr="1272" mi="4" ci="0" mb="0" cb="0"/><line nr="1275" mi="7" ci="0" mb="0" cb="0"/><line nr="1276" mi="2" ci="0" mb="2" cb="0"/><line nr="1277" mi="4" ci="0" mb="0" cb="0"/><line nr="1280" mi="7" ci="0" mb="0" cb="0"/><line nr="1281" mi="2" ci="0" mb="2" cb="0"/><line nr="1282" mi="4" ci="0" mb="0" cb="0"/><line nr="1284" mi="4" ci="0" mb="2" cb="0"/><line nr="1285" mi="9" ci="0" mb="0" cb="0"/><line nr="1286" mi="2" ci="0" mb="2" cb="0"/><line nr="1287" mi="4" ci="0" mb="0" cb="0"/><line nr="1289" mi="2" ci="0" mb="0" cb="0"/><line nr="1293" mi="4" ci="0" mb="0" cb="0"/><line nr="1295" mi="4" ci="0" mb="2" cb="0"/><line nr="1296" mi="9" ci="0" mb="0" cb="0"/><line nr="1297" mi="2" ci="0" mb="2" cb="0"/><line nr="1298" mi="4" ci="0" mb="0" cb="0"/><line nr="1300" mi="2" ci="0" mb="0" cb="0"/><line nr="1304" mi="4" ci="0" mb="0" cb="0"/><line nr="1306" mi="4" ci="0" mb="2" cb="0"/><line nr="1307" mi="9" ci="0" mb="0" cb="0"/><line nr="1308" mi="2" ci="0" mb="2" cb="0"/><line nr="1309" mi="4" ci="0" mb="0" cb="0"/><line nr="1312" mi="7" ci="0" mb="0" cb="0"/><line nr="1313" mi="2" ci="0" mb="2" cb="0"/><line nr="1314" mi="4" ci="0" mb="0" cb="0"/><line nr="1316" mi="4" ci="0" mb="2" cb="0"/><line nr="1317" mi="9" ci="0" mb="0" cb="0"/><line nr="1318" mi="2" ci="0" mb="2" cb="0"/><line nr="1319" mi="4" ci="0" mb="0" cb="0"/><line nr="1322" mi="7" ci="0" mb="0" cb="0"/><line nr="1323" mi="2" ci="0" mb="2" cb="0"/><line nr="1324" mi="4" ci="0" mb="0" cb="0"/><line nr="1326" mi="4" ci="0" mb="2" cb="0"/><line nr="1327" mi="9" ci="0" mb="0" cb="0"/><line nr="1328" mi="2" ci="0" mb="2" cb="0"/><line nr="1329" mi="4" ci="0" mb="0" cb="0"/><line nr="1331" mi="4" ci="0" mb="2" cb="0"/><line nr="1332" mi="9" ci="0" mb="0" cb="0"/><line nr="1333" mi="2" ci="0" mb="2" cb="0"/><line nr="1334" mi="4" ci="0" mb="0" cb="0"/><line nr="1336" mi="2" ci="0" mb="0" cb="0"/><line nr="1340" mi="4" ci="0" mb="0" cb="0"/><line nr="1343" mi="7" ci="0" mb="0" cb="0"/><line nr="1344" mi="2" ci="0" mb="2" cb="0"/><line nr="1345" mi="4" ci="0" mb="0" cb="0"/><line nr="1348" mi="7" ci="0" mb="0" cb="0"/><line nr="1349" mi="2" ci="0" mb="2" cb="0"/><line nr="1350" mi="4" ci="0" mb="0" cb="0"/><line nr="1352" mi="4" ci="0" mb="2" cb="0"/><line nr="1353" mi="9" ci="0" mb="0" cb="0"/><line nr="1354" mi="2" ci="0" mb="2" cb="0"/><line nr="1355" mi="4" ci="0" mb="0" cb="0"/><line nr="1357" mi="2" ci="0" mb="0" cb="0"/><line nr="1361" mi="4" ci="0" mb="0" cb="0"/><line nr="1364" mi="7" ci="0" mb="0" cb="0"/><line nr="1365" mi="2" ci="0" mb="2" cb="0"/><line nr="1366" mi="4" ci="0" mb="0" cb="0"/><line nr="1369" mi="7" ci="0" mb="0" cb="0"/><line nr="1370" mi="2" ci="0" mb="2" cb="0"/><line nr="1371" mi="4" ci="0" mb="0" cb="0"/><line nr="1374" mi="7" ci="0" mb="0" cb="0"/><line nr="1375" mi="2" ci="0" mb="2" cb="0"/><line nr="1376" mi="4" ci="0" mb="0" cb="0"/><line nr="1379" mi="7" ci="0" mb="0" cb="0"/><line nr="1380" mi="2" ci="0" mb="2" cb="0"/><line nr="1381" mi="4" ci="0" mb="0" cb="0"/><line nr="1384" mi="7" ci="0" mb="0" cb="0"/><line nr="1385" mi="2" ci="0" mb="2" cb="0"/><line nr="1386" mi="4" ci="0" mb="0" cb="0"/><line nr="1388" mi="4" ci="0" mb="2" cb="0"/><line nr="1389" mi="9" ci="0" mb="0" cb="0"/><line nr="1390" mi="2" ci="0" mb="2" cb="0"/><line nr="1391" mi="4" ci="0" mb="0" cb="0"/><line nr="1393" mi="2" ci="0" mb="0" cb="0"/><line nr="1397" mi="4" ci="0" mb="0" cb="0"/><line nr="1400" mi="7" ci="0" mb="0" cb="0"/><line nr="1401" mi="2" ci="0" mb="2" cb="0"/><line nr="1402" mi="4" ci="0" mb="0" cb="0"/><line nr="1404" mi="4" ci="0" mb="2" cb="0"/><line nr="1405" mi="9" ci="0" mb="0" cb="0"/><line nr="1406" mi="2" ci="0" mb="2" cb="0"/><line nr="1407" mi="4" ci="0" mb="0" cb="0"/><line nr="1409" mi="2" ci="0" mb="0" cb="0"/><line nr="1413" mi="4" ci="0" mb="0" cb="0"/><line nr="1415" mi="4" ci="0" mb="2" cb="0"/><line nr="1416" mi="9" ci="0" mb="0" cb="0"/><line nr="1417" mi="2" ci="0" mb="2" cb="0"/><line nr="1418" mi="4" ci="0" mb="0" cb="0"/><line nr="1420" mi="4" ci="0" mb="2" cb="0"/><line nr="1421" mi="9" ci="0" mb="0" cb="0"/><line nr="1422" mi="2" ci="0" mb="2" cb="0"/><line nr="1423" mi="4" ci="0" mb="0" cb="0"/><line nr="1425" mi="2" ci="0" mb="0" cb="0"/><line nr="1429" mi="4" ci="0" mb="0" cb="0"/><line nr="1431" mi="4" ci="0" mb="2" cb="0"/><line nr="1432" mi="9" ci="0" mb="0" cb="0"/><line nr="1433" mi="2" ci="0" mb="2" cb="0"/><line nr="1434" mi="4" ci="0" mb="0" cb="0"/><line nr="1436" mi="2" ci="0" mb="0" cb="0"/><line nr="1440" mi="4" ci="0" mb="0" cb="0"/><line nr="1443" mi="7" ci="0" mb="0" cb="0"/><line nr="1444" mi="2" ci="0" mb="2" cb="0"/><line nr="1445" mi="4" ci="0" mb="0" cb="0"/><line nr="1448" mi="7" ci="0" mb="0" cb="0"/><line nr="1449" mi="2" ci="0" mb="2" cb="0"/><line nr="1450" mi="4" ci="0" mb="0" cb="0"/><line nr="1452" mi="4" ci="0" mb="2" cb="0"/><line nr="1453" mi="9" ci="0" mb="0" cb="0"/><line nr="1454" mi="2" ci="0" mb="2" cb="0"/><line nr="1455" mi="4" ci="0" mb="0" cb="0"/><line nr="1457" mi="2" ci="0" mb="0" cb="0"/><line nr="1461" mi="4" ci="0" mb="0" cb="0"/><line nr="1463" mi="4" ci="0" mb="2" cb="0"/><line nr="1464" mi="9" ci="0" mb="0" cb="0"/><line nr="1465" mi="2" ci="0" mb="2" cb="0"/><line nr="1466" mi="4" ci="0" mb="0" cb="0"/><line nr="1468" mi="2" ci="0" mb="0" cb="0"/><line nr="1472" mi="4" ci="0" mb="0" cb="0"/><line nr="1474" mi="4" ci="0" mb="2" cb="0"/><line nr="1475" mi="9" ci="0" mb="0" cb="0"/><line nr="1476" mi="2" ci="0" mb="2" cb="0"/><line nr="1477" mi="4" ci="0" mb="0" cb="0"/><line nr="1479" mi="4" ci="0" mb="2" cb="0"/><line nr="1480" mi="9" ci="0" mb="0" cb="0"/><line nr="1481" mi="2" ci="0" mb="2" cb="0"/><line nr="1482" mi="4" ci="0" mb="0" cb="0"/><line nr="1484" mi="2" ci="0" mb="0" cb="0"/><line nr="1488" mi="4" ci="0" mb="0" cb="0"/><line nr="1491" mi="7" ci="0" mb="0" cb="0"/><line nr="1492" mi="2" ci="0" mb="2" cb="0"/><line nr="1493" mi="4" ci="0" mb="0" cb="0"/><line nr="1496" mi="7" ci="0" mb="0" cb="0"/><line nr="1497" mi="2" ci="0" mb="2" cb="0"/><line nr="1498" mi="4" ci="0" mb="0" cb="0"/><line nr="1500" mi="4" ci="0" mb="2" cb="0"/><line nr="1501" mi="9" ci="0" mb="0" cb="0"/><line nr="1502" mi="2" ci="0" mb="2" cb="0"/><line nr="1503" mi="4" ci="0" mb="0" cb="0"/><line nr="1505" mi="2" ci="0" mb="0" cb="0"/><line nr="1509" mi="4" ci="0" mb="0" cb="0"/><line nr="1512" mi="7" ci="0" mb="0" cb="0"/><line nr="1513" mi="2" ci="0" mb="2" cb="0"/><line nr="1514" mi="4" ci="0" mb="0" cb="0"/><line nr="1517" mi="7" ci="0" mb="0" cb="0"/><line nr="1518" mi="2" ci="0" mb="2" cb="0"/><line nr="1519" mi="4" ci="0" mb="0" cb="0"/><line nr="1521" mi="4" ci="0" mb="2" cb="0"/><line nr="1522" mi="9" ci="0" mb="0" cb="0"/><line nr="1523" mi="2" ci="0" mb="2" cb="0"/><line nr="1524" mi="4" ci="0" mb="0" cb="0"/><line nr="1526" mi="2" ci="0" mb="0" cb="0"/><line nr="1530" mi="4" ci="0" mb="0" cb="0"/><line nr="1533" mi="7" ci="0" mb="0" cb="0"/><line nr="1534" mi="2" ci="0" mb="2" cb="0"/><line nr="1535" mi="4" ci="0" mb="0" cb="0"/><line nr="1538" mi="7" ci="0" mb="0" cb="0"/><line nr="1539" mi="2" ci="0" mb="2" cb="0"/><line nr="1540" mi="4" ci="0" mb="0" cb="0"/><line nr="1542" mi="4" ci="0" mb="2" cb="0"/><line nr="1543" mi="9" ci="0" mb="0" cb="0"/><line nr="1544" mi="2" ci="0" mb="2" cb="0"/><line nr="1545" mi="4" ci="0" mb="0" cb="0"/><line nr="1547" mi="2" ci="0" mb="0" cb="0"/><line nr="1551" mi="4" ci="0" mb="0" cb="0"/><line nr="1553" mi="4" ci="0" mb="2" cb="0"/><line nr="1554" mi="9" ci="0" mb="0" cb="0"/><line nr="1555" mi="2" ci="0" mb="2" cb="0"/><line nr="1556" mi="4" ci="0" mb="0" cb="0"/><line nr="1558" mi="4" ci="0" mb="2" cb="0"/><line nr="1559" mi="9" ci="0" mb="0" cb="0"/><line nr="1560" mi="2" ci="0" mb="2" cb="0"/><line nr="1561" mi="4" ci="0" mb="0" cb="0"/><line nr="1563" mi="2" ci="0" mb="0" cb="0"/><line nr="1567" mi="4" ci="0" mb="0" cb="0"/><line nr="1570" mi="7" ci="0" mb="0" cb="0"/><line nr="1571" mi="2" ci="0" mb="2" cb="0"/><line nr="1572" mi="4" ci="0" mb="0" cb="0"/><line nr="1574" mi="4" ci="0" mb="2" cb="0"/><line nr="1575" mi="9" ci="0" mb="0" cb="0"/><line nr="1576" mi="2" ci="0" mb="2" cb="0"/><line nr="1577" mi="4" ci="0" mb="0" cb="0"/><line nr="1579" mi="2" ci="0" mb="0" cb="0"/><line nr="1583" mi="4" ci="0" mb="0" cb="0"/><line nr="1586" mi="7" ci="0" mb="0" cb="0"/><line nr="1587" mi="2" ci="0" mb="2" cb="0"/><line nr="1588" mi="4" ci="0" mb="0" cb="0"/><line nr="1590" mi="4" ci="0" mb="2" cb="0"/><line nr="1591" mi="9" ci="0" mb="0" cb="0"/><line nr="1592" mi="2" ci="0" mb="2" cb="0"/><line nr="1593" mi="4" ci="0" mb="0" cb="0"/><line nr="1596" mi="7" ci="0" mb="0" cb="0"/><line nr="1597" mi="2" ci="0" mb="2" cb="0"/><line nr="1598" mi="4" ci="0" mb="0" cb="0"/><line nr="1601" mi="7" ci="0" mb="0" cb="0"/><line nr="1602" mi="2" ci="0" mb="2" cb="0"/><line nr="1603" mi="4" ci="0" mb="0" cb="0"/><line nr="1605" mi="4" ci="0" mb="2" cb="0"/><line nr="1606" mi="9" ci="0" mb="0" cb="0"/><line nr="1607" mi="2" ci="0" mb="2" cb="0"/><line nr="1608" mi="4" ci="0" mb="0" cb="0"/><line nr="1610" mi="2" ci="0" mb="0" cb="0"/><line nr="1614" mi="4" ci="0" mb="0" cb="0"/><line nr="1617" mi="7" ci="0" mb="0" cb="0"/><line nr="1618" mi="2" ci="0" mb="2" cb="0"/><line nr="1619" mi="4" ci="0" mb="0" cb="0"/><line nr="1621" mi="4" ci="0" mb="2" cb="0"/><line nr="1622" mi="9" ci="0" mb="0" cb="0"/><line nr="1623" mi="2" ci="0" mb="2" cb="0"/><line nr="1624" mi="4" ci="0" mb="0" cb="0"/><line nr="1626" mi="2" ci="0" mb="0" cb="0"/><line nr="1630" mi="4" ci="0" mb="0" cb="0"/><line nr="1633" mi="7" ci="0" mb="0" cb="0"/><line nr="1634" mi="2" ci="0" mb="2" cb="0"/><line nr="1635" mi="4" ci="0" mb="0" cb="0"/><line nr="1638" mi="7" ci="0" mb="0" cb="0"/><line nr="1639" mi="2" ci="0" mb="2" cb="0"/><line nr="1640" mi="4" ci="0" mb="0" cb="0"/><line nr="1643" mi="7" ci="0" mb="0" cb="0"/><line nr="1644" mi="2" ci="0" mb="2" cb="0"/><line nr="1645" mi="4" ci="0" mb="0" cb="0"/><line nr="1647" mi="4" ci="0" mb="2" cb="0"/><line nr="1648" mi="9" ci="0" mb="0" cb="0"/><line nr="1649" mi="2" ci="0" mb="2" cb="0"/><line nr="1650" mi="4" ci="0" mb="0" cb="0"/><line nr="1652" mi="2" ci="0" mb="0" cb="0"/><line nr="1656" mi="4" ci="0" mb="0" cb="0"/><line nr="1659" mi="7" ci="0" mb="0" cb="0"/><line nr="1660" mi="2" ci="0" mb="2" cb="0"/><line nr="1661" mi="4" ci="0" mb="0" cb="0"/><line nr="1663" mi="4" ci="0" mb="2" cb="0"/><line nr="1664" mi="9" ci="0" mb="0" cb="0"/><line nr="1665" mi="2" ci="0" mb="2" cb="0"/><line nr="1666" mi="4" ci="0" mb="0" cb="0"/><line nr="1668" mi="2" ci="0" mb="0" cb="0"/><line nr="1672" mi="4" ci="0" mb="0" cb="0"/><line nr="1675" mi="7" ci="0" mb="0" cb="0"/><line nr="1676" mi="2" ci="0" mb="2" cb="0"/><line nr="1677" mi="4" ci="0" mb="0" cb="0"/><line nr="1680" mi="7" ci="0" mb="0" cb="0"/><line nr="1681" mi="2" ci="0" mb="2" cb="0"/><line nr="1682" mi="4" ci="0" mb="0" cb="0"/><line nr="1684" mi="4" ci="0" mb="2" cb="0"/><line nr="1685" mi="9" ci="0" mb="0" cb="0"/><line nr="1686" mi="2" ci="0" mb="2" cb="0"/><line nr="1687" mi="4" ci="0" mb="0" cb="0"/><line nr="1689" mi="2" ci="0" mb="0" cb="0"/><line nr="1693" mi="4" ci="0" mb="0" cb="0"/><line nr="1696" mi="7" ci="0" mb="0" cb="0"/><line nr="1697" mi="2" ci="0" mb="2" cb="0"/><line nr="1698" mi="4" ci="0" mb="0" cb="0"/><line nr="1700" mi="4" ci="0" mb="2" cb="0"/><line nr="1701" mi="9" ci="0" mb="0" cb="0"/><line nr="1702" mi="2" ci="0" mb="2" cb="0"/><line nr="1703" mi="4" ci="0" mb="0" cb="0"/><line nr="1705" mi="2" ci="0" mb="0" cb="0"/><line nr="1709" mi="4" ci="0" mb="0" cb="0"/><line nr="1712" mi="7" ci="0" mb="0" cb="0"/><line nr="1713" mi="2" ci="0" mb="2" cb="0"/><line nr="1714" mi="4" ci="0" mb="0" cb="0"/><line nr="1717" mi="7" ci="0" mb="0" cb="0"/><line nr="1718" mi="2" ci="0" mb="2" cb="0"/><line nr="1719" mi="4" ci="0" mb="0" cb="0"/><line nr="1722" mi="7" ci="0" mb="0" cb="0"/><line nr="1723" mi="2" ci="0" mb="2" cb="0"/><line nr="1724" mi="4" ci="0" mb="0" cb="0"/><line nr="1726" mi="4" ci="0" mb="2" cb="0"/><line nr="1727" mi="9" ci="0" mb="0" cb="0"/><line nr="1728" mi="2" ci="0" mb="2" cb="0"/><line nr="1729" mi="4" ci="0" mb="0" cb="0"/><line nr="1731" mi="2" ci="0" mb="0" cb="0"/><line nr="1735" mi="4" ci="0" mb="0" cb="0"/><line nr="1737" mi="4" ci="0" mb="2" cb="0"/><line nr="1738" mi="9" ci="0" mb="0" cb="0"/><line nr="1739" mi="2" ci="0" mb="2" cb="0"/><line nr="1740" mi="4" ci="0" mb="0" cb="0"/><line nr="1743" mi="7" ci="0" mb="0" cb="0"/><line nr="1744" mi="2" ci="0" mb="2" cb="0"/><line nr="1745" mi="4" ci="0" mb="0" cb="0"/><line nr="1748" mi="7" ci="0" mb="0" cb="0"/><line nr="1749" mi="2" ci="0" mb="2" cb="0"/><line nr="1750" mi="4" ci="0" mb="0" cb="0"/><line nr="1752" mi="4" ci="0" mb="2" cb="0"/><line nr="1753" mi="9" ci="0" mb="0" cb="0"/><line nr="1754" mi="2" ci="0" mb="2" cb="0"/><line nr="1755" mi="4" ci="0" mb="0" cb="0"/><line nr="1757" mi="2" ci="0" mb="0" cb="0"/><line nr="1761" mi="4" ci="0" mb="0" cb="0"/><line nr="1764" mi="7" ci="0" mb="0" cb="0"/><line nr="1765" mi="2" ci="0" mb="2" cb="0"/><line nr="1766" mi="4" ci="0" mb="0" cb="0"/><line nr="1768" mi="4" ci="0" mb="2" cb="0"/><line nr="1769" mi="9" ci="0" mb="0" cb="0"/><line nr="1770" mi="2" ci="0" mb="2" cb="0"/><line nr="1771" mi="4" ci="0" mb="0" cb="0"/><line nr="1773" mi="2" ci="0" mb="0" cb="0"/><line nr="1777" mi="4" ci="0" mb="0" cb="0"/><line nr="1780" mi="7" ci="0" mb="0" cb="0"/><line nr="1781" mi="2" ci="0" mb="2" cb="0"/><line nr="1782" mi="4" ci="0" mb="0" cb="0"/><line nr="1785" mi="7" ci="0" mb="0" cb="0"/><line nr="1786" mi="2" ci="0" mb="2" cb="0"/><line nr="1787" mi="4" ci="0" mb="0" cb="0"/><line nr="1789" mi="4" ci="0" mb="2" cb="0"/><line nr="1790" mi="9" ci="0" mb="0" cb="0"/><line nr="1791" mi="2" ci="0" mb="2" cb="0"/><line nr="1792" mi="4" ci="0" mb="0" cb="0"/><line nr="1794" mi="2" ci="0" mb="0" cb="0"/><line nr="1798" mi="4" ci="0" mb="0" cb="0"/><line nr="1800" mi="4" ci="0" mb="2" cb="0"/><line nr="1801" mi="9" ci="0" mb="0" cb="0"/><line nr="1802" mi="2" ci="0" mb="2" cb="0"/><line nr="1803" mi="4" ci="0" mb="0" cb="0"/><line nr="1805" mi="4" ci="0" mb="2" cb="0"/><line nr="1806" mi="9" ci="0" mb="0" cb="0"/><line nr="1807" mi="2" ci="0" mb="2" cb="0"/><line nr="1808" mi="4" ci="0" mb="0" cb="0"/><line nr="1811" mi="7" ci="0" mb="0" cb="0"/><line nr="1812" mi="2" ci="0" mb="2" cb="0"/><line nr="1813" mi="4" ci="0" mb="0" cb="0"/><line nr="1815" mi="4" ci="0" mb="2" cb="0"/><line nr="1816" mi="9" ci="0" mb="0" cb="0"/><line nr="1817" mi="2" ci="0" mb="2" cb="0"/><line nr="1818" mi="4" ci="0" mb="0" cb="0"/><line nr="1820" mi="2" ci="0" mb="0" cb="0"/><line nr="1825" mi="19" ci="0" mb="0" cb="0"/><line nr="1830" mi="4" ci="0" mb="0" cb="0"/><line nr="1833" mi="7" ci="0" mb="0" cb="0"/><line nr="1834" mi="2" ci="0" mb="2" cb="0"/><line nr="1835" mi="4" ci="0" mb="0" cb="0"/><line nr="1838" mi="7" ci="0" mb="0" cb="0"/><line nr="1839" mi="2" ci="0" mb="2" cb="0"/><line nr="1840" mi="4" ci="0" mb="0" cb="0"/><line nr="1843" mi="7" ci="0" mb="0" cb="0"/><line nr="1844" mi="2" ci="0" mb="2" cb="0"/><line nr="1845" mi="4" ci="0" mb="0" cb="0"/><line nr="1847" mi="4" ci="0" mb="2" cb="0"/><line nr="1848" mi="9" ci="0" mb="0" cb="0"/><line nr="1849" mi="2" ci="0" mb="2" cb="0"/><line nr="1850" mi="4" ci="0" mb="0" cb="0"/><line nr="1852" mi="2" ci="0" mb="0" cb="0"/><line nr="1857" mi="4" ci="0" mb="0" cb="0"/><line nr="1860" mi="7" ci="0" mb="0" cb="0"/><line nr="1861" mi="2" ci="0" mb="2" cb="0"/><line nr="1862" mi="4" ci="0" mb="0" cb="0"/><line nr="1865" mi="7" ci="0" mb="0" cb="0"/><line nr="1866" mi="2" ci="0" mb="2" cb="0"/><line nr="1867" mi="4" ci="0" mb="0" cb="0"/><line nr="1869" mi="4" ci="0" mb="2" cb="0"/><line nr="1870" mi="9" ci="0" mb="0" cb="0"/><line nr="1871" mi="2" ci="0" mb="2" cb="0"/><line nr="1872" mi="4" ci="0" mb="0" cb="0"/><line nr="1874" mi="2" ci="0" mb="0" cb="0"/><line nr="1879" mi="4" ci="0" mb="0" cb="0"/><line nr="1882" mi="7" ci="0" mb="0" cb="0"/><line nr="1883" mi="2" ci="0" mb="2" cb="0"/><line nr="1884" mi="4" ci="0" mb="0" cb="0"/><line nr="1887" mi="7" ci="0" mb="0" cb="0"/><line nr="1888" mi="2" ci="0" mb="2" cb="0"/><line nr="1889" mi="4" ci="0" mb="0" cb="0"/><line nr="1891" mi="4" ci="0" mb="2" cb="0"/><line nr="1892" mi="9" ci="0" mb="0" cb="0"/><line nr="1893" mi="2" ci="0" mb="2" cb="0"/><line nr="1894" mi="4" ci="0" mb="0" cb="0"/><line nr="1896" mi="2" ci="0" mb="0" cb="0"/><line nr="1901" mi="4" ci="0" mb="0" cb="0"/><line nr="1904" mi="7" ci="0" mb="0" cb="0"/><line nr="1905" mi="2" ci="0" mb="2" cb="0"/><line nr="1906" mi="4" ci="0" mb="0" cb="0"/><line nr="1909" mi="7" ci="0" mb="0" cb="0"/><line nr="1910" mi="2" ci="0" mb="2" cb="0"/><line nr="1911" mi="4" ci="0" mb="0" cb="0"/><line nr="1913" mi="4" ci="0" mb="2" cb="0"/><line nr="1914" mi="9" ci="0" mb="0" cb="0"/><line nr="1915" mi="2" ci="0" mb="2" cb="0"/><line nr="1916" mi="4" ci="0" mb="0" cb="0"/><line nr="1918" mi="2" ci="0" mb="0" cb="0"/><line nr="1923" mi="4" ci="0" mb="0" cb="0"/><line nr="1926" mi="7" ci="0" mb="0" cb="0"/><line nr="1927" mi="2" ci="0" mb="2" cb="0"/><line nr="1928" mi="4" ci="0" mb="0" cb="0"/><line nr="1931" mi="7" ci="0" mb="0" cb="0"/><line nr="1932" mi="2" ci="0" mb="2" cb="0"/><line nr="1933" mi="4" ci="0" mb="0" cb="0"/><line nr="1935" mi="4" ci="0" mb="2" cb="0"/><line nr="1936" mi="9" ci="0" mb="0" cb="0"/><line nr="1937" mi="2" ci="0" mb="2" cb="0"/><line nr="1938" mi="4" ci="0" mb="0" cb="0"/><line nr="1940" mi="2" ci="0" mb="0" cb="0"/><line nr="1945" mi="4" ci="0" mb="0" cb="0"/><line nr="1948" mi="7" ci="0" mb="0" cb="0"/><line nr="1949" mi="2" ci="0" mb="2" cb="0"/><line nr="1950" mi="4" ci="0" mb="0" cb="0"/><line nr="1952" mi="4" ci="0" mb="2" cb="0"/><line nr="1953" mi="9" ci="0" mb="0" cb="0"/><line nr="1954" mi="2" ci="0" mb="2" cb="0"/><line nr="1955" mi="4" ci="0" mb="0" cb="0"/><line nr="1957" mi="2" ci="0" mb="0" cb="0"/><line nr="1962" mi="4" ci="0" mb="0" cb="0"/><line nr="1964" mi="4" ci="0" mb="2" cb="0"/><line nr="1965" mi="9" ci="0" mb="0" cb="0"/><line nr="1966" mi="2" ci="0" mb="2" cb="0"/><line nr="1967" mi="4" ci="0" mb="0" cb="0"/><line nr="1969" mi="2" ci="0" mb="0" cb="0"/><line nr="1974" mi="4" ci="0" mb="0" cb="0"/><line nr="1977" mi="7" ci="0" mb="0" cb="0"/><line nr="1978" mi="2" ci="0" mb="2" cb="0"/><line nr="1979" mi="4" ci="0" mb="0" cb="0"/><line nr="1982" mi="7" ci="0" mb="0" cb="0"/><line nr="1983" mi="2" ci="0" mb="2" cb="0"/><line nr="1984" mi="4" ci="0" mb="0" cb="0"/><line nr="1987" mi="7" ci="0" mb="0" cb="0"/><line nr="1988" mi="2" ci="0" mb="2" cb="0"/><line nr="1989" mi="4" ci="0" mb="0" cb="0"/><line nr="1991" mi="4" ci="0" mb="2" cb="0"/><line nr="1992" mi="9" ci="0" mb="0" cb="0"/><line nr="1993" mi="2" ci="0" mb="2" cb="0"/><line nr="1994" mi="4" ci="0" mb="0" cb="0"/><line nr="1996" mi="2" ci="0" mb="0" cb="0"/><line nr="2001" mi="4" ci="0" mb="0" cb="0"/><line nr="2004" mi="7" ci="0" mb="0" cb="0"/><line nr="2005" mi="2" ci="0" mb="2" cb="0"/><line nr="2006" mi="4" ci="0" mb="0" cb="0"/><line nr="2008" mi="4" ci="0" mb="2" cb="0"/><line nr="2009" mi="9" ci="0" mb="0" cb="0"/><line nr="2010" mi="2" ci="0" mb="2" cb="0"/><line nr="2011" mi="4" ci="0" mb="0" cb="0"/><line nr="2013" mi="2" ci="0" mb="0" cb="0"/><line nr="2018" mi="4" ci="0" mb="0" cb="0"/><line nr="2020" mi="4" ci="0" mb="2" cb="0"/><line nr="2021" mi="9" ci="0" mb="0" cb="0"/><line nr="2022" mi="2" ci="0" mb="2" cb="0"/><line nr="2023" mi="4" ci="0" mb="0" cb="0"/><line nr="2025" mi="2" ci="0" mb="0" cb="0"/><line nr="2030" mi="4" ci="0" mb="0" cb="0"/><line nr="2033" mi="7" ci="0" mb="0" cb="0"/><line nr="2034" mi="2" ci="0" mb="2" cb="0"/><line nr="2035" mi="4" ci="0" mb="0" cb="0"/><line nr="2038" mi="7" ci="0" mb="0" cb="0"/><line nr="2039" mi="2" ci="0" mb="2" cb="0"/><line nr="2040" mi="4" ci="0" mb="0" cb="0"/><line nr="2042" mi="4" ci="0" mb="2" cb="0"/><line nr="2043" mi="9" ci="0" mb="0" cb="0"/><line nr="2044" mi="2" ci="0" mb="2" cb="0"/><line nr="2045" mi="4" ci="0" mb="0" cb="0"/><line nr="2047" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5048" covered="0"/><counter type="BRANCH" missed="822" covered="0"/><counter type="LINE" missed="1171" covered="0"/><counter type="COMPLEXITY" missed="507" covered="0"/><counter type="METHOD" missed="96" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NoCommentHashCodeVisitor.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="39" ci="0" mb="0" cb="0"/><line nr="46" mi="57" ci="0" mb="2" cb="0"/><line nr="50" mi="19" ci="0" mb="0" cb="0"/><line nr="54" mi="37" ci="0" mb="2" cb="0"/><line nr="58" mi="27" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="25" ci="0" mb="0" cb="0"/><line nr="70" mi="27" ci="0" mb="2" cb="0"/><line nr="74" mi="25" ci="0" mb="0" cb="0"/><line nr="78" mi="25" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="16" ci="0" mb="2" cb="0"/><line nr="98" mi="19" ci="0" mb="0" cb="0"/><line nr="102" mi="19" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="78" ci="0" mb="2" cb="0"/><line nr="118" mi="55" ci="0" mb="4" cb="0"/><line nr="122" mi="55" ci="0" mb="4" cb="0"/><line nr="126" mi="29" ci="0" mb="0" cb="0"/><line nr="130" mi="87" ci="0" mb="2" cb="0"/><line nr="134" mi="16" ci="0" mb="2" cb="0"/><line nr="138" mi="19" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="7" ci="0" mb="0" cb="0"/><line nr="154" mi="39" ci="0" mb="0" cb="0"/><line nr="158" mi="59" ci="0" mb="0" cb="0"/><line nr="162" mi="54" ci="0" mb="6" cb="0"/><line nr="166" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="37" ci="0" mb="2" cb="0"/><line nr="174" mi="29" ci="0" mb="0" cb="0"/><line nr="178" mi="47" ci="0" mb="2" cb="0"/><line nr="182" mi="29" ci="0" mb="0" cb="0"/><line nr="186" mi="37" ci="0" mb="2" cb="0"/><line nr="190" mi="27" ci="0" mb="4" cb="0"/><line nr="194" mi="28" ci="0" mb="2" cb="0"/><line nr="198" mi="19" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="19" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="19" ci="0" mb="0" cb="0"/><line nr="218" mi="28" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="7" ci="0" mb="0" cb="0"/><line nr="238" mi="19" ci="0" mb="0" cb="0"/><line nr="242" mi="55" ci="0" mb="4" cb="0"/><line nr="246" mi="105" ci="0" mb="4" cb="0"/><line nr="250" mi="33" ci="0" mb="2" cb="0"/><line nr="254" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="23" ci="0" mb="2" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="9" ci="0" mb="2" cb="0"/><line nr="264" mi="12" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="19" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="73" ci="0" mb="6" cb="0"/><line nr="282" mi="19" ci="0" mb="0" cb="0"/><line nr="286" mi="58" ci="0" mb="2" cb="0"/><line nr="290" mi="15" ci="0" mb="0" cb="0"/><line nr="294" mi="16" ci="0" mb="2" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="19" ci="0" mb="0" cb="0"/><line nr="306" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="16" ci="0" mb="2" cb="0"/><line nr="314" mi="25" ci="0" mb="0" cb="0"/><line nr="318" mi="19" ci="0" mb="0" cb="0"/><line nr="322" mi="19" ci="0" mb="0" cb="0"/><line nr="326" mi="16" ci="0" mb="2" cb="0"/><line nr="330" mi="7" ci="0" mb="0" cb="0"/><line nr="334" mi="47" ci="0" mb="2" cb="0"/><line nr="338" mi="7" ci="0" mb="0" cb="0"/><line nr="342" mi="29" ci="0" mb="0" cb="0"/><line nr="346" mi="15" ci="0" mb="0" cb="0"/><line nr="350" mi="19" ci="0" mb="0" cb="0"/><line nr="354" mi="7" ci="0" mb="0" cb="0"/><line nr="358" mi="29" ci="0" mb="0" cb="0"/><line nr="362" mi="37" ci="0" mb="2" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="370" mi="19" ci="0" mb="0" cb="0"/><line nr="374" mi="45" ci="0" mb="4" cb="0"/><line nr="378" mi="38" ci="0" mb="2" cb="0"/><line nr="382" mi="19" ci="0" mb="0" cb="0"/><line nr="387" mi="19" ci="0" mb="0" cb="0"/><line nr="392" mi="19" ci="0" mb="0" cb="0"/><line nr="397" mi="7" ci="0" mb="0" cb="0"/><line nr="402" mi="19" ci="0" mb="0" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="29" ci="0" mb="0" cb="0"/><line nr="417" mi="7" ci="0" mb="0" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="427" mi="19" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2297" covered="0"/><counter type="BRANCH" missed="84" covered="0"/><counter type="LINE" missed="101" covered="0"/><counter type="COMPLEXITY" missed="139" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectIdentityEqualsVisitor.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="8" ci="0" mb="2" cb="0"/><line nr="73" mi="8" ci="0" mb="2" cb="0"/><line nr="78" mi="8" ci="0" mb="2" cb="0"/><line nr="83" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="8" ci="0" mb="2" cb="0"/><line nr="98" mi="8" ci="0" mb="2" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="8" ci="0" mb="2" cb="0"/><line nr="118" mi="8" ci="0" mb="2" cb="0"/><line nr="123" mi="8" ci="0" mb="2" cb="0"/><line nr="128" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="8" ci="0" mb="2" cb="0"/><line nr="158" mi="8" ci="0" mb="2" cb="0"/><line nr="163" mi="8" ci="0" mb="2" cb="0"/><line nr="168" mi="8" ci="0" mb="2" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="178" mi="8" ci="0" mb="2" cb="0"/><line nr="183" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="8" ci="0" mb="2" cb="0"/><line nr="193" mi="8" ci="0" mb="2" cb="0"/><line nr="198" mi="8" ci="0" mb="2" cb="0"/><line nr="203" mi="8" ci="0" mb="2" cb="0"/><line nr="208" mi="8" ci="0" mb="2" cb="0"/><line nr="213" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="228" mi="8" ci="0" mb="2" cb="0"/><line nr="233" mi="8" ci="0" mb="2" cb="0"/><line nr="238" mi="8" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="2" cb="0"/><line nr="248" mi="8" ci="0" mb="2" cb="0"/><line nr="253" mi="8" ci="0" mb="2" cb="0"/><line nr="258" mi="8" ci="0" mb="2" cb="0"/><line nr="263" mi="8" ci="0" mb="2" cb="0"/><line nr="268" mi="8" ci="0" mb="2" cb="0"/><line nr="273" mi="8" ci="0" mb="2" cb="0"/><line nr="278" mi="8" ci="0" mb="2" cb="0"/><line nr="283" mi="8" ci="0" mb="2" cb="0"/><line nr="288" mi="8" ci="0" mb="2" cb="0"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="298" mi="8" ci="0" mb="2" cb="0"/><line nr="303" mi="8" ci="0" mb="2" cb="0"/><line nr="308" mi="8" ci="0" mb="2" cb="0"/><line nr="313" mi="8" ci="0" mb="2" cb="0"/><line nr="318" mi="8" ci="0" mb="2" cb="0"/><line nr="323" mi="8" ci="0" mb="2" cb="0"/><line nr="328" mi="8" ci="0" mb="2" cb="0"/><line nr="333" mi="8" ci="0" mb="2" cb="0"/><line nr="338" mi="8" ci="0" mb="2" cb="0"/><line nr="343" mi="8" ci="0" mb="2" cb="0"/><line nr="348" mi="8" ci="0" mb="2" cb="0"/><line nr="353" mi="8" ci="0" mb="2" cb="0"/><line nr="358" mi="8" ci="0" mb="2" cb="0"/><line nr="363" mi="8" ci="0" mb="2" cb="0"/><line nr="368" mi="8" ci="0" mb="2" cb="0"/><line nr="373" mi="8" ci="0" mb="2" cb="0"/><line nr="378" mi="8" ci="0" mb="2" cb="0"/><line nr="383" mi="8" ci="0" mb="2" cb="0"/><line nr="388" mi="8" ci="0" mb="2" cb="0"/><line nr="393" mi="8" ci="0" mb="2" cb="0"/><line nr="398" mi="8" ci="0" mb="2" cb="0"/><line nr="403" mi="8" ci="0" mb="2" cb="0"/><line nr="408" mi="8" ci="0" mb="2" cb="0"/><line nr="413" mi="8" ci="0" mb="2" cb="0"/><line nr="418" mi="8" ci="0" mb="2" cb="0"/><line nr="423" mi="8" ci="0" mb="2" cb="0"/><line nr="428" mi="8" ci="0" mb="2" cb="0"/><line nr="433" mi="8" ci="0" mb="2" cb="0"/><line nr="438" mi="8" ci="0" mb="2" cb="0"/><line nr="443" mi="8" ci="0" mb="2" cb="0"/><line nr="448" mi="8" ci="0" mb="2" cb="0"/><line nr="453" mi="8" ci="0" mb="2" cb="0"/><line nr="458" mi="8" ci="0" mb="2" cb="0"/><line nr="463" mi="8" ci="0" mb="2" cb="0"/><line nr="468" mi="8" ci="0" mb="2" cb="0"/><line nr="473" mi="8" ci="0" mb="2" cb="0"/><line nr="478" mi="8" ci="0" mb="2" cb="0"/><line nr="483" mi="8" ci="0" mb="2" cb="0"/><line nr="488" mi="8" ci="0" mb="2" cb="0"/><line nr="493" mi="8" ci="0" mb="2" cb="0"/><line nr="498" mi="8" ci="0" mb="2" cb="0"/><line nr="503" mi="8" ci="0" mb="2" cb="0"/><line nr="508" mi="8" ci="0" mb="2" cb="0"/><line nr="513" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="751" covered="16"/><counter type="BRANCH" missed="186" covered="2"/><counter type="LINE" missed="94" covered="3"/><counter type="COMPLEXITY" missed="187" covered="4"/><counter type="METHOD" missed="94" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VoidVisitorWithDefaults.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="1" ci="0" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="1" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="433" mi="4" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="1" ci="0" mb="0" cb="0"/><line nr="443" mi="4" ci="0" mb="0" cb="0"/><line nr="444" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="453" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="458" mi="4" ci="0" mb="0" cb="0"/><line nr="459" mi="1" ci="0" mb="0" cb="0"/><line nr="463" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="1" ci="0" mb="0" cb="0"/><line nr="467" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="1" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="1" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="4" ci="0" mb="0" cb="0"/><line nr="502" mi="1" ci="0" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="507" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="516" mi="4" ci="0" mb="0" cb="0"/><line nr="517" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="475" covered="0"/><counter type="LINE" missed="191" covered="0"/><counter type="COMPLEXITY" missed="97" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CloneVisitor.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="11" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="18" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="13" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="14" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="12" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="12" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="17" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="18" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="16" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="9" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="13" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="12" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="13" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="6" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="11" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="6" ci="0" mb="0" cb="0"/><line nr="287" mi="6" ci="0" mb="0" cb="0"/><line nr="288" mi="7" ci="0" mb="0" cb="0"/><line nr="289" mi="10" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="6" ci="0" mb="0" cb="0"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="10" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="319" mi="0" ci="12" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="7" ci="0" mb="0" cb="0"/><line nr="328" mi="9" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="7" ci="0" mb="0" cb="0"/><line nr="337" mi="7" ci="0" mb="0" cb="0"/><line nr="338" mi="11" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="7" ci="0" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="0" cb="0"/><line nr="347" mi="6" ci="0" mb="0" cb="0"/><line nr="348" mi="7" ci="0" mb="0" cb="0"/><line nr="349" mi="12" ci="0" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="6" ci="0" mb="0" cb="0"/><line nr="357" mi="7" ci="0" mb="0" cb="0"/><line nr="358" mi="10" ci="0" mb="0" cb="0"/><line nr="359" mi="4" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="0" cb="0"/><line nr="368" mi="13" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="7" ci="0" mb="0" cb="0"/><line nr="376" mi="7" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="13" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="7" ci="0" mb="0" cb="0"/><line nr="387" mi="7" ci="0" mb="0" cb="0"/><line nr="388" mi="11" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="7" ci="0" mb="0" cb="0"/><line nr="396" mi="7" ci="0" mb="0" cb="0"/><line nr="397" mi="10" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="404" mi="7" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="0" cb="0"/><line nr="406" mi="7" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="408" mi="12" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="7" ci="0" mb="0" cb="0"/><line nr="417" mi="10" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="424" mi="0" ci="7" mb="0" cb="0"/><line nr="425" mi="0" ci="7" mb="0" cb="0"/><line nr="426" mi="0" ci="9" mb="0" cb="0"/><line nr="427" mi="0" ci="7" mb="0" cb="0"/><line nr="428" mi="0" ci="12" mb="0" cb="0"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="7" ci="0" mb="0" cb="0"/><line nr="436" mi="7" ci="0" mb="0" cb="0"/><line nr="437" mi="7" ci="0" mb="0" cb="0"/><line nr="438" mi="11" ci="0" mb="0" cb="0"/><line nr="439" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="0" ci="11" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="7" mb="0" cb="0"/><line nr="454" mi="0" ci="11" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="7" ci="0" mb="0" cb="0"/><line nr="462" mi="11" ci="0" mb="0" cb="0"/><line nr="463" mi="4" ci="0" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="0" mb="0" cb="0"/><line nr="470" mi="11" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="0" cb="0"/><line nr="478" mi="11" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="7" ci="0" mb="0" cb="0"/><line nr="486" mi="11" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="0" cb="0"/><line nr="494" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="4" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="7" mb="0" cb="0"/><line nr="504" mi="0" ci="9" mb="0" cb="0"/><line nr="505" mi="0" ci="7" mb="0" cb="0"/><line nr="506" mi="0" ci="13" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="7" mb="0" cb="0"/><line nr="514" mi="0" ci="7" mb="0" cb="0"/><line nr="515" mi="0" ci="10" mb="0" cb="0"/><line nr="516" mi="0" ci="4" mb="0" cb="0"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="9" ci="0" mb="0" cb="0"/><line nr="523" mi="6" ci="0" mb="0" cb="0"/><line nr="524" mi="7" ci="0" mb="0" cb="0"/><line nr="525" mi="7" ci="0" mb="0" cb="0"/><line nr="526" mi="9" ci="0" mb="0" cb="0"/><line nr="527" mi="7" ci="0" mb="0" cb="0"/><line nr="528" mi="14" ci="0" mb="0" cb="0"/><line nr="529" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="7" mb="0" cb="0"/><line nr="536" mi="0" ci="7" mb="0" cb="0"/><line nr="537" mi="0" ci="12" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="7" mb="0" cb="0"/><line nr="545" mi="0" ci="11" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="0" ci="2" mb="0" cb="0"/><line nr="552" mi="7" ci="0" mb="0" cb="0"/><line nr="553" mi="7" ci="0" mb="0" cb="0"/><line nr="554" mi="10" ci="0" mb="0" cb="0"/><line nr="555" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="2" ci="0" mb="0" cb="0"/><line nr="561" mi="7" ci="0" mb="0" cb="0"/><line nr="562" mi="7" ci="0" mb="0" cb="0"/><line nr="563" mi="10" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="7" ci="0" mb="0" cb="0"/><line nr="571" mi="7" ci="0" mb="0" cb="0"/><line nr="572" mi="12" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="580" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="7" mb="0" cb="0"/><line nr="583" mi="0" ci="12" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="7" mb="0" cb="0"/><line nr="591" mi="0" ci="7" mb="0" cb="0"/><line nr="592" mi="0" ci="10" mb="0" cb="0"/><line nr="593" mi="0" ci="4" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="7" ci="0" mb="0" cb="0"/><line nr="600" mi="7" ci="0" mb="0" cb="0"/><line nr="601" mi="7" ci="0" mb="0" cb="0"/><line nr="602" mi="11" ci="0" mb="0" cb="0"/><line nr="603" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="0" cb="0"/><line nr="609" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="611" mi="7" ci="0" mb="0" cb="0"/><line nr="612" mi="11" ci="0" mb="0" cb="0"/><line nr="613" mi="4" ci="0" mb="0" cb="0"/><line nr="614" mi="2" ci="0" mb="0" cb="0"/><line nr="619" mi="7" ci="0" mb="0" cb="0"/><line nr="620" mi="7" ci="0" mb="0" cb="0"/><line nr="621" mi="7" ci="0" mb="0" cb="0"/><line nr="622" mi="11" ci="0" mb="0" cb="0"/><line nr="623" mi="4" ci="0" mb="0" cb="0"/><line nr="624" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="6" ci="0" mb="0" cb="0"/><line nr="630" mi="7" ci="0" mb="0" cb="0"/><line nr="631" mi="9" ci="0" mb="0" cb="0"/><line nr="632" mi="7" ci="0" mb="0" cb="0"/><line nr="633" mi="14" ci="0" mb="0" cb="0"/><line nr="634" mi="4" ci="0" mb="0" cb="0"/><line nr="635" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="7" ci="0" mb="0" cb="0"/><line nr="641" mi="7" ci="0" mb="0" cb="0"/><line nr="642" mi="10" ci="0" mb="0" cb="0"/><line nr="643" mi="4" ci="0" mb="0" cb="0"/><line nr="644" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="7" ci="0" mb="0" cb="0"/><line nr="650" mi="7" ci="0" mb="0" cb="0"/><line nr="651" mi="7" ci="0" mb="0" cb="0"/><line nr="652" mi="11" ci="0" mb="0" cb="0"/><line nr="653" mi="4" ci="0" mb="0" cb="0"/><line nr="654" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="0" ci="6" mb="0" cb="0"/><line nr="660" mi="0" ci="7" mb="0" cb="0"/><line nr="661" mi="0" ci="10" mb="0" cb="0"/><line nr="662" mi="0" ci="4" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="668" mi="7" ci="0" mb="0" cb="0"/><line nr="669" mi="7" ci="0" mb="0" cb="0"/><line nr="670" mi="7" ci="0" mb="0" cb="0"/><line nr="671" mi="11" ci="0" mb="0" cb="0"/><line nr="672" mi="4" ci="0" mb="0" cb="0"/><line nr="673" mi="2" ci="0" mb="0" cb="0"/><line nr="678" mi="7" ci="0" mb="0" cb="0"/><line nr="679" mi="9" ci="0" mb="0" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="681" mi="2" ci="0" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="687" mi="0" ci="7" mb="0" cb="0"/><line nr="688" mi="0" ci="10" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="6" ci="0" mb="0" cb="0"/><line nr="696" mi="7" ci="0" mb="0" cb="0"/><line nr="697" mi="7" ci="0" mb="0" cb="0"/><line nr="698" mi="11" ci="0" mb="0" cb="0"/><line nr="699" mi="4" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="705" mi="6" ci="0" mb="0" cb="0"/><line nr="706" mi="6" ci="0" mb="0" cb="0"/><line nr="707" mi="7" ci="0" mb="0" cb="0"/><line nr="708" mi="13" ci="0" mb="0" cb="0"/><line nr="709" mi="4" ci="0" mb="0" cb="0"/><line nr="710" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="7" ci="0" mb="0" cb="0"/><line nr="716" mi="7" ci="0" mb="0" cb="0"/><line nr="717" mi="10" ci="0" mb="0" cb="0"/><line nr="718" mi="4" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="724" mi="7" ci="0" mb="0" cb="0"/><line nr="725" mi="7" ci="0" mb="0" cb="0"/><line nr="726" mi="10" ci="0" mb="0" cb="0"/><line nr="727" mi="4" ci="0" mb="0" cb="0"/><line nr="728" mi="2" ci="0" mb="0" cb="0"/><line nr="733" mi="7" ci="0" mb="0" cb="0"/><line nr="734" mi="7" ci="0" mb="0" cb="0"/><line nr="735" mi="7" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="0" cb="0"/><line nr="737" mi="12" ci="0" mb="0" cb="0"/><line nr="738" mi="4" ci="0" mb="0" cb="0"/><line nr="739" mi="2" ci="0" mb="0" cb="0"/><line nr="744" mi="7" ci="0" mb="0" cb="0"/><line nr="745" mi="7" ci="0" mb="0" cb="0"/><line nr="746" mi="7" ci="0" mb="0" cb="0"/><line nr="747" mi="11" ci="0" mb="0" cb="0"/><line nr="748" mi="4" ci="0" mb="0" cb="0"/><line nr="749" mi="2" ci="0" mb="0" cb="0"/><line nr="754" mi="7" ci="0" mb="0" cb="0"/><line nr="755" mi="7" ci="0" mb="0" cb="0"/><line nr="756" mi="10" ci="0" mb="0" cb="0"/><line nr="757" mi="4" ci="0" mb="0" cb="0"/><line nr="758" mi="2" ci="0" mb="0" cb="0"/><line nr="763" mi="7" ci="0" mb="0" cb="0"/><line nr="764" mi="7" ci="0" mb="0" cb="0"/><line nr="765" mi="7" ci="0" mb="0" cb="0"/><line nr="766" mi="11" ci="0" mb="0" cb="0"/><line nr="767" mi="4" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="773" mi="7" ci="0" mb="0" cb="0"/><line nr="774" mi="7" ci="0" mb="0" cb="0"/><line nr="775" mi="7" ci="0" mb="0" cb="0"/><line nr="776" mi="7" ci="0" mb="0" cb="0"/><line nr="777" mi="12" ci="0" mb="0" cb="0"/><line nr="778" mi="4" ci="0" mb="0" cb="0"/><line nr="779" mi="2" ci="0" mb="0" cb="0"/><line nr="784" mi="7" ci="0" mb="0" cb="0"/><line nr="785" mi="7" ci="0" mb="0" cb="0"/><line nr="786" mi="6" ci="0" mb="0" cb="0"/><line nr="787" mi="6" ci="0" mb="0" cb="0"/><line nr="788" mi="7" ci="0" mb="0" cb="0"/><line nr="789" mi="13" ci="0" mb="0" cb="0"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="7" ci="0" mb="0" cb="0"/><line nr="797" mi="7" ci="0" mb="0" cb="0"/><line nr="798" mi="10" ci="0" mb="0" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="0" cb="0"/><line nr="806" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="7" ci="0" mb="0" cb="0"/><line nr="808" mi="11" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="2" ci="0" mb="0" cb="0"/><line nr="815" mi="6" ci="0" mb="0" cb="0"/><line nr="816" mi="7" ci="0" mb="0" cb="0"/><line nr="817" mi="6" ci="0" mb="0" cb="0"/><line nr="818" mi="7" ci="0" mb="0" cb="0"/><line nr="819" mi="7" ci="0" mb="0" cb="0"/><line nr="820" mi="13" ci="0" mb="0" cb="0"/><line nr="821" mi="4" ci="0" mb="0" cb="0"/><line nr="822" mi="2" ci="0" mb="0" cb="0"/><line nr="827" mi="7" ci="0" mb="0" cb="0"/><line nr="828" mi="7" ci="0" mb="0" cb="0"/><line nr="829" mi="7" ci="0" mb="0" cb="0"/><line nr="830" mi="11" ci="0" mb="0" cb="0"/><line nr="831" mi="4" ci="0" mb="0" cb="0"/><line nr="832" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="7" ci="0" mb="0" cb="0"/><line nr="838" mi="6" ci="0" mb="0" cb="0"/><line nr="839" mi="7" ci="0" mb="0" cb="0"/><line nr="840" mi="13" ci="0" mb="0" cb="0"/><line nr="841" mi="4" ci="0" mb="0" cb="0"/><line nr="842" mi="2" ci="0" mb="0" cb="0"/><line nr="847" mi="7" ci="0" mb="0" cb="0"/><line nr="848" mi="9" ci="0" mb="0" cb="0"/><line nr="849" mi="7" ci="0" mb="0" cb="0"/><line nr="850" mi="13" ci="0" mb="0" cb="0"/><line nr="851" mi="4" ci="0" mb="0" cb="0"/><line nr="852" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="7" ci="0" mb="0" cb="0"/><line nr="858" mi="7" ci="0" mb="0" cb="0"/><line nr="859" mi="10" ci="0" mb="0" cb="0"/><line nr="860" mi="4" ci="0" mb="0" cb="0"/><line nr="861" mi="2" ci="0" mb="0" cb="0"/><line nr="866" mi="0" ci="4" mb="0" cb="0"/><line nr="867" mi="0" ci="9" mb="0" cb="2"/><line nr="868" mi="0" ci="7" mb="0" cb="0"/><line nr="869" mi="0" ci="2" mb="1" cb="1"/><line nr="870" mi="0" ci="4" mb="0" cb="0"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="873" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="7" ci="0" mb="0" cb="0"/><line nr="879" mi="7" ci="0" mb="0" cb="0"/><line nr="880" mi="14" ci="0" mb="0" cb="0"/><line nr="881" mi="4" ci="0" mb="0" cb="0"/><line nr="882" mi="2" ci="0" mb="0" cb="0"/><line nr="887" mi="6" ci="0" mb="0" cb="0"/><line nr="888" mi="6" ci="0" mb="0" cb="0"/><line nr="889" mi="7" ci="0" mb="0" cb="0"/><line nr="890" mi="7" ci="0" mb="0" cb="0"/><line nr="891" mi="14" ci="0" mb="0" cb="0"/><line nr="892" mi="4" ci="0" mb="0" cb="0"/><line nr="893" mi="2" ci="0" mb="0" cb="0"/><line nr="898" mi="6" ci="0" mb="0" cb="0"/><line nr="899" mi="7" ci="0" mb="0" cb="0"/><line nr="900" mi="7" ci="0" mb="0" cb="0"/><line nr="901" mi="11" ci="0" mb="0" cb="0"/><line nr="902" mi="4" ci="0" mb="0" cb="0"/><line nr="903" mi="2" ci="0" mb="0" cb="0"/><line nr="908" mi="0" ci="3" mb="0" cb="2"/><line nr="909" mi="0" ci="2" mb="0" cb="0"/><line nr="911" mi="0" ci="8" mb="0" cb="0"/><line nr="912" mi="0" ci="2" mb="1" cb="1"/><line nr="913" mi="2" ci="0" mb="0" cb="0"/><line nr="915" mi="0" ci="2" mb="0" cb="0"/><line nr="920" mi="0" ci="2" mb="1" cb="1"/><line nr="921" mi="2" ci="0" mb="0" cb="0"/><line nr="923" mi="0" ci="6" mb="0" cb="0"/><line nr="924" mi="0" ci="2" mb="1" cb="1"/><line nr="925" mi="2" ci="0" mb="0" cb="0"/><line nr="927" mi="0" ci="2" mb="0" cb="0"/><line nr="931" mi="0" ci="2" mb="0" cb="2"/><line nr="932" mi="0" ci="2" mb="0" cb="0"/><line nr="934" mi="0" ci="6" mb="0" cb="0"/><line nr="939" mi="6" ci="0" mb="0" cb="0"/><line nr="940" mi="7" ci="0" mb="0" cb="0"/><line nr="941" mi="7" ci="0" mb="0" cb="0"/><line nr="942" mi="11" ci="0" mb="0" cb="0"/><line nr="943" mi="4" ci="0" mb="0" cb="0"/><line nr="944" mi="2" ci="0" mb="0" cb="0"/><line nr="949" mi="7" ci="0" mb="0" cb="0"/><line nr="950" mi="6" ci="0" mb="0" cb="0"/><line nr="951" mi="7" ci="0" mb="0" cb="0"/><line nr="952" mi="11" ci="0" mb="0" cb="0"/><line nr="953" mi="4" ci="0" mb="0" cb="0"/><line nr="954" mi="2" ci="0" mb="0" cb="0"/><line nr="959" mi="7" ci="0" mb="0" cb="0"/><line nr="960" mi="7" ci="0" mb="0" cb="0"/><line nr="961" mi="10" ci="0" mb="0" cb="0"/><line nr="962" mi="4" ci="0" mb="0" cb="0"/><line nr="963" mi="2" ci="0" mb="0" cb="0"/><line nr="968" mi="6" ci="0" mb="0" cb="0"/><line nr="969" mi="7" ci="0" mb="0" cb="0"/><line nr="970" mi="7" ci="0" mb="0" cb="0"/><line nr="971" mi="11" ci="0" mb="0" cb="0"/><line nr="972" mi="4" ci="0" mb="0" cb="0"/><line nr="973" mi="2" ci="0" mb="0" cb="0"/><line nr="978" mi="7" ci="0" mb="0" cb="0"/><line nr="979" mi="9" ci="0" mb="0" cb="0"/><line nr="980" mi="4" ci="0" mb="0" cb="0"/><line nr="981" mi="2" ci="0" mb="0" cb="0"/><line nr="986" mi="6" ci="0" mb="0" cb="0"/><line nr="987" mi="7" ci="0" mb="0" cb="0"/><line nr="988" mi="7" ci="0" mb="0" cb="0"/><line nr="989" mi="7" ci="0" mb="0" cb="0"/><line nr="990" mi="12" ci="0" mb="0" cb="0"/><line nr="991" mi="4" ci="0" mb="0" cb="0"/><line nr="992" mi="2" ci="0" mb="0" cb="0"/><line nr="997" mi="6" ci="0" mb="0" cb="0"/><line nr="998" mi="7" ci="0" mb="0" cb="0"/><line nr="999" mi="9" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1001" mi="2" ci="0" mb="0" cb="0"/><line nr="1006" mi="0" ci="7" mb="0" cb="0"/><line nr="1007" mi="0" ci="11" mb="0" cb="0"/><line nr="1008" mi="0" ci="4" mb="0" cb="0"/><line nr="1009" mi="0" ci="2" mb="0" cb="0"/><line nr="1014" mi="6" ci="0" mb="0" cb="0"/><line nr="1015" mi="7" ci="0" mb="0" cb="0"/><line nr="1016" mi="7" ci="0" mb="0" cb="0"/><line nr="1017" mi="11" ci="0" mb="0" cb="0"/><line nr="1018" mi="4" ci="0" mb="0" cb="0"/><line nr="1019" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2192" covered="1458"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="352" covered="236"/><counter type="COMPLEXITY" missed="65" covered="40"/><counter type="METHOD" missed="61" covered="37"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierVisitor.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="16" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="16" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="16" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="4" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="16" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="4" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="16" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="16" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="4" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="16" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="16" ci="0" mb="0" cb="0"/><line nr="128" mi="16" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="6" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="2" cb="2"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="6" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="1" cb="1"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="6" ci="10" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="16" ci="0" mb="0" cb="0"/><line nr="184" mi="16" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="6" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="2" cb="2"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="7" ci="0" mb="0" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="16" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="4" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="16" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="0" cb="0"/><line nr="226" mi="16" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="6" ci="10" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="1" cb="1"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="16" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="6" ci="10" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="1" cb="1"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="6" ci="10" mb="0" cb="0"/><line nr="278" mi="6" ci="10" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="6" ci="10" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="0" cb="0"/><line nr="292" mi="7" ci="0" mb="0" cb="0"/><line nr="293" mi="7" ci="0" mb="0" cb="0"/><line nr="294" mi="16" ci="0" mb="0" cb="0"/><line nr="295" mi="6" ci="0" mb="6" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="6" ci="10" mb="0" cb="0"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="6" ci="10" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="2" cb="2"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="16" ci="0" mb="0" cb="0"/><line nr="332" mi="16" ci="0" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="7" ci="0" mb="0" cb="0"/><line nr="341" mi="7" ci="0" mb="0" cb="0"/><line nr="342" mi="16" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="4" cb="0"/><line nr="344" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="16" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="360" mi="16" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="0" cb="0"/><line nr="368" mi="16" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="0" mb="2" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="6" ci="0" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="0" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="16" ci="0" mb="0" cb="0"/><line nr="383" mi="2" ci="0" mb="2" cb="0"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="6" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="6" ci="0" mb="0" cb="0"/><line nr="399" mi="7" ci="0" mb="0" cb="0"/><line nr="400" mi="6" ci="0" mb="0" cb="0"/><line nr="401" mi="16" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="2" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="0" cb="0"/><line nr="405" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="16" ci="0" mb="0" cb="0"/><line nr="418" mi="6" ci="0" mb="0" cb="0"/><line nr="419" mi="16" ci="0" mb="0" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="0" cb="0"/><line nr="430" mi="6" ci="10" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="2"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="7" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="443" mi="16" ci="0" mb="0" cb="0"/><line nr="444" mi="4" ci="0" mb="4" cb="0"/><line nr="445" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="448" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="4" ci="0" mb="0" cb="0"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="455" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="6" mb="0" cb="0"/><line nr="458" mi="6" ci="10" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="2"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="7" ci="0" mb="0" cb="0"/><line nr="472" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="16" ci="0" mb="0" cb="0"/><line nr="474" mi="6" ci="0" mb="6" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="476" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="7" ci="0" mb="0" cb="0"/><line nr="486" mi="16" ci="0" mb="0" cb="0"/><line nr="487" mi="6" ci="0" mb="0" cb="0"/><line nr="488" mi="6" ci="0" mb="0" cb="0"/><line nr="489" mi="16" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="2" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="0" cb="0"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="495" mi="4" ci="0" mb="0" cb="0"/><line nr="496" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="7" ci="0" mb="0" cb="0"/><line nr="503" mi="16" ci="0" mb="0" cb="0"/><line nr="504" mi="7" ci="0" mb="0" cb="0"/><line nr="505" mi="16" ci="0" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="4" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="509" mi="4" ci="0" mb="0" cb="0"/><line nr="510" mi="4" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="517" mi="7" ci="0" mb="0" cb="0"/><line nr="518" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="16" ci="0" mb="0" cb="0"/><line nr="520" mi="2" ci="0" mb="2" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="7" ci="0" mb="0" cb="0"/><line nr="531" mi="7" ci="0" mb="0" cb="0"/><line nr="532" mi="16" ci="0" mb="0" cb="0"/><line nr="533" mi="4" ci="0" mb="4" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="536" mi="4" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="16" ci="0" mb="0" cb="0"/><line nr="544" mi="4" ci="0" mb="0" cb="0"/><line nr="545" mi="2" ci="0" mb="0" cb="0"/><line nr="550" mi="16" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="7" ci="0" mb="0" cb="0"/><line nr="558" mi="7" ci="0" mb="0" cb="0"/><line nr="559" mi="16" ci="0" mb="0" cb="0"/><line nr="560" mi="4" ci="0" mb="4" cb="0"/><line nr="561" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="4" ci="0" mb="0" cb="0"/><line nr="563" mi="4" ci="0" mb="0" cb="0"/><line nr="564" mi="4" ci="0" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="16" ci="0" mb="0" cb="0"/><line nr="571" mi="4" ci="0" mb="0" cb="0"/><line nr="572" mi="2" ci="0" mb="0" cb="0"/><line nr="577" mi="7" ci="0" mb="0" cb="0"/><line nr="578" mi="16" ci="0" mb="0" cb="0"/><line nr="579" mi="2" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="581" mi="4" ci="0" mb="0" cb="0"/><line nr="582" mi="4" ci="0" mb="0" cb="0"/><line nr="583" mi="2" ci="0" mb="0" cb="0"/><line nr="588" mi="7" ci="0" mb="0" cb="0"/><line nr="589" mi="7" ci="0" mb="0" cb="0"/><line nr="590" mi="16" ci="0" mb="0" cb="0"/><line nr="591" mi="4" ci="0" mb="4" cb="0"/><line nr="592" mi="2" ci="0" mb="0" cb="0"/><line nr="593" mi="4" ci="0" mb="0" cb="0"/><line nr="594" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="4" ci="0" mb="0" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="601" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="7" mb="0" cb="0"/><line nr="603" mi="0" ci="16" mb="0" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="0"/><line nr="605" mi="6" ci="10" mb="0" cb="0"/><line nr="606" mi="0" ci="2" mb="1" cb="1"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="611" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="2" mb="0" cb="0"/><line nr="618" mi="0" ci="16" mb="0" cb="0"/><line nr="619" mi="0" ci="7" mb="0" cb="0"/><line nr="620" mi="0" ci="6" mb="0" cb="0"/><line nr="621" mi="0" ci="7" mb="0" cb="0"/><line nr="622" mi="0" ci="6" mb="0" cb="0"/><line nr="623" mi="6" ci="10" mb="0" cb="0"/><line nr="624" mi="0" ci="6" mb="0" cb="0"/><line nr="625" mi="0" ci="6" mb="0" cb="0"/><line nr="626" mi="0" ci="6" mb="0" cb="0"/><line nr="627" mi="6" ci="10" mb="0" cb="0"/><line nr="628" mi="0" ci="4" mb="2" cb="2"/><line nr="629" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="0"/><line nr="632" mi="0" ci="4" mb="0" cb="0"/><line nr="633" mi="0" ci="4" mb="0" cb="0"/><line nr="634" mi="0" ci="4" mb="0" cb="0"/><line nr="635" mi="0" ci="4" mb="0" cb="0"/><line nr="636" mi="0" ci="4" mb="0" cb="0"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="638" mi="0" ci="4" mb="0" cb="0"/><line nr="639" mi="0" ci="4" mb="0" cb="0"/><line nr="640" mi="0" ci="2" mb="0" cb="0"/><line nr="645" mi="0" ci="7" mb="0" cb="0"/><line nr="646" mi="6" ci="10" mb="0" cb="0"/><line nr="647" mi="0" ci="2" mb="1" cb="1"/><line nr="648" mi="2" ci="0" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="656" mi="6" ci="0" mb="0" cb="0"/><line nr="657" mi="7" ci="0" mb="0" cb="0"/><line nr="658" mi="16" ci="0" mb="0" cb="0"/><line nr="659" mi="2" ci="0" mb="2" cb="0"/><line nr="660" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="4" ci="0" mb="0" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="663" mi="4" ci="0" mb="0" cb="0"/><line nr="664" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="16" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="671" mi="2" ci="0" mb="0" cb="0"/><line nr="676" mi="6" ci="0" mb="0" cb="0"/><line nr="677" mi="6" ci="0" mb="0" cb="0"/><line nr="678" mi="16" ci="0" mb="0" cb="0"/><line nr="679" mi="7" ci="0" mb="0" cb="0"/><line nr="680" mi="6" ci="0" mb="0" cb="0"/><line nr="681" mi="16" ci="0" mb="0" cb="0"/><line nr="682" mi="2" ci="0" mb="2" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="4" ci="0" mb="0" cb="0"/><line nr="685" mi="4" ci="0" mb="0" cb="0"/><line nr="686" mi="4" ci="0" mb="0" cb="0"/><line nr="687" mi="4" ci="0" mb="0" cb="0"/><line nr="688" mi="4" ci="0" mb="0" cb="0"/><line nr="689" mi="4" ci="0" mb="0" cb="0"/><line nr="690" mi="2" ci="0" mb="0" cb="0"/><line nr="695" mi="6" ci="0" mb="0" cb="0"/><line nr="696" mi="7" ci="0" mb="0" cb="0"/><line nr="697" mi="16" ci="0" mb="0" cb="0"/><line nr="698" mi="2" ci="0" mb="2" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><line nr="700" mi="4" ci="0" mb="0" cb="0"/><line nr="701" mi="4" ci="0" mb="0" cb="0"/><line nr="702" mi="4" ci="0" mb="0" cb="0"/><line nr="703" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="0" ci="6" mb="0" cb="0"/><line nr="709" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="7" mb="0" cb="0"/><line nr="711" mi="0" ci="7" mb="0" cb="0"/><line nr="712" mi="0" ci="6" mb="0" cb="0"/><line nr="713" mi="6" ci="10" mb="0" cb="0"/><line nr="714" mi="0" ci="4" mb="2" cb="2"/><line nr="715" mi="2" ci="0" mb="0" cb="0"/><line nr="716" mi="0" ci="4" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="4" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="721" mi="0" ci="4" mb="0" cb="0"/><line nr="722" mi="0" ci="2" mb="0" cb="0"/><line nr="727" mi="16" ci="0" mb="0" cb="0"/><line nr="728" mi="16" ci="0" mb="0" cb="0"/><line nr="729" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="4" ci="0" mb="0" cb="0"/><line nr="731" mi="2" ci="0" mb="0" cb="0"/><line nr="736" mi="6" ci="0" mb="0" cb="0"/><line nr="737" mi="16" ci="0" mb="0" cb="0"/><line nr="738" mi="4" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="0" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="745" mi="6" ci="10" mb="0" cb="0"/><line nr="746" mi="0" ci="4" mb="0" cb="0"/><line nr="747" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="7" ci="0" mb="0" cb="0"/><line nr="753" mi="6" ci="0" mb="0" cb="0"/><line nr="754" mi="16" ci="0" mb="0" cb="0"/><line nr="755" mi="2" ci="0" mb="2" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="757" mi="4" ci="0" mb="0" cb="0"/><line nr="758" mi="4" ci="0" mb="0" cb="0"/><line nr="759" mi="4" ci="0" mb="0" cb="0"/><line nr="760" mi="2" ci="0" mb="0" cb="0"/><line nr="765" mi="6" ci="0" mb="0" cb="0"/><line nr="766" mi="16" ci="0" mb="0" cb="0"/><line nr="767" mi="16" ci="0" mb="0" cb="0"/><line nr="768" mi="4" ci="0" mb="0" cb="0"/><line nr="769" mi="4" ci="0" mb="0" cb="0"/><line nr="770" mi="4" ci="0" mb="0" cb="0"/><line nr="771" mi="2" ci="0" mb="0" cb="0"/><line nr="776" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="778" mi="6" ci="10" mb="0" cb="0"/><line nr="779" mi="0" ci="3" mb="1" cb="1"/><line nr="780" mi="2" ci="0" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><line nr="782" mi="0" ci="4" mb="0" cb="0"/><line nr="783" mi="0" ci="4" mb="0" cb="0"/><line nr="784" mi="0" ci="2" mb="0" cb="0"/><line nr="789" mi="6" ci="0" mb="0" cb="0"/><line nr="790" mi="6" ci="0" mb="0" cb="0"/><line nr="791" mi="16" ci="0" mb="0" cb="0"/><line nr="792" mi="3" ci="0" mb="2" cb="0"/><line nr="793" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="4" ci="0" mb="0" cb="0"/><line nr="795" mi="4" ci="0" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="797" mi="2" ci="0" mb="0" cb="0"/><line nr="802" mi="0" ci="16" mb="0" cb="0"/><line nr="803" mi="6" ci="10" mb="0" cb="0"/><line nr="804" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="806" mi="0" ci="2" mb="0" cb="0"/><line nr="811" mi="7" ci="0" mb="0" cb="0"/><line nr="812" mi="7" ci="0" mb="0" cb="0"/><line nr="813" mi="16" ci="0" mb="0" cb="0"/><line nr="814" mi="4" ci="0" mb="4" cb="0"/><line nr="815" mi="2" ci="0" mb="0" cb="0"/><line nr="816" mi="4" ci="0" mb="0" cb="0"/><line nr="817" mi="4" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="819" mi="2" ci="0" mb="0" cb="0"/><line nr="824" mi="6" ci="10" mb="0" cb="0"/><line nr="825" mi="0" ci="4" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="0"/><line nr="831" mi="16" ci="0" mb="0" cb="0"/><line nr="832" mi="16" ci="0" mb="0" cb="0"/><line nr="833" mi="4" ci="0" mb="0" cb="0"/><line nr="834" mi="4" ci="0" mb="0" cb="0"/><line nr="835" mi="2" ci="0" mb="0" cb="0"/><line nr="840" mi="6" ci="0" mb="0" cb="0"/><line nr="841" mi="6" ci="0" mb="0" cb="0"/><line nr="842" mi="16" ci="0" mb="0" cb="0"/><line nr="843" mi="4" ci="0" mb="0" cb="0"/><line nr="844" mi="4" ci="0" mb="0" cb="0"/><line nr="845" mi="4" ci="0" mb="0" cb="0"/><line nr="846" mi="2" ci="0" mb="0" cb="0"/><line nr="851" mi="6" ci="0" mb="0" cb="0"/><line nr="852" mi="7" ci="0" mb="0" cb="0"/><line nr="853" mi="16" ci="0" mb="0" cb="0"/><line nr="854" mi="2" ci="0" mb="2" cb="0"/><line nr="855" mi="2" ci="0" mb="0" cb="0"/><line nr="856" mi="4" ci="0" mb="0" cb="0"/><line nr="857" mi="4" ci="0" mb="0" cb="0"/><line nr="858" mi="4" ci="0" mb="0" cb="0"/><line nr="859" mi="2" ci="0" mb="0" cb="0"/><line nr="864" mi="7" ci="0" mb="0" cb="0"/><line nr="865" mi="7" ci="0" mb="0" cb="0"/><line nr="866" mi="16" ci="0" mb="0" cb="0"/><line nr="867" mi="4" ci="0" mb="4" cb="0"/><line nr="868" mi="2" ci="0" mb="0" cb="0"/><line nr="869" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="4" ci="0" mb="0" cb="0"/><line nr="871" mi="4" ci="0" mb="0" cb="0"/><line nr="872" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="16" ci="0" mb="0" cb="0"/><line nr="878" mi="16" ci="0" mb="0" cb="0"/><line nr="879" mi="4" ci="0" mb="0" cb="0"/><line nr="880" mi="4" ci="0" mb="0" cb="0"/><line nr="881" mi="2" ci="0" mb="0" cb="0"/><line nr="886" mi="7" ci="0" mb="0" cb="0"/><line nr="887" mi="16" ci="0" mb="0" cb="0"/><line nr="888" mi="2" ci="0" mb="2" cb="0"/><line nr="889" mi="2" ci="0" mb="0" cb="0"/><line nr="890" mi="4" ci="0" mb="0" cb="0"/><line nr="891" mi="4" ci="0" mb="0" cb="0"/><line nr="892" mi="2" ci="0" mb="0" cb="0"/><line nr="897" mi="6" ci="0" mb="0" cb="0"/><line nr="898" mi="16" ci="0" mb="0" cb="0"/><line nr="899" mi="6" ci="0" mb="0" cb="0"/><line nr="900" mi="7" ci="0" mb="0" cb="0"/><line nr="901" mi="16" ci="0" mb="0" cb="0"/><line nr="902" mi="2" ci="0" mb="2" cb="0"/><line nr="903" mi="2" ci="0" mb="0" cb="0"/><line nr="904" mi="4" ci="0" mb="0" cb="0"/><line nr="905" mi="4" ci="0" mb="0" cb="0"/><line nr="906" mi="4" ci="0" mb="0" cb="0"/><line nr="907" mi="4" ci="0" mb="0" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="909" mi="2" ci="0" mb="0" cb="0"/><line nr="914" mi="7" ci="0" mb="0" cb="0"/><line nr="915" mi="16" ci="0" mb="0" cb="0"/><line nr="916" mi="2" ci="0" mb="2" cb="0"/><line nr="917" mi="2" ci="0" mb="0" cb="0"/><line nr="918" mi="4" ci="0" mb="0" cb="0"/><line nr="919" mi="4" ci="0" mb="0" cb="0"/><line nr="920" mi="2" ci="0" mb="0" cb="0"/><line nr="925" mi="7" ci="0" mb="0" cb="0"/><line nr="926" mi="6" ci="0" mb="0" cb="0"/><line nr="927" mi="6" ci="0" mb="0" cb="0"/><line nr="928" mi="16" ci="0" mb="0" cb="0"/><line nr="929" mi="2" ci="0" mb="2" cb="0"/><line nr="930" mi="2" ci="0" mb="0" cb="0"/><line nr="931" mi="4" ci="0" mb="0" cb="0"/><line nr="932" mi="4" ci="0" mb="0" cb="0"/><line nr="933" mi="4" ci="0" mb="0" cb="0"/><line nr="934" mi="4" ci="0" mb="0" cb="0"/><line nr="935" mi="2" ci="0" mb="0" cb="0"/><line nr="940" mi="7" ci="0" mb="0" cb="0"/><line nr="941" mi="16" ci="0" mb="0" cb="0"/><line nr="942" mi="2" ci="0" mb="2" cb="0"/><line nr="943" mi="2" ci="0" mb="0" cb="0"/><line nr="944" mi="4" ci="0" mb="0" cb="0"/><line nr="945" mi="4" ci="0" mb="0" cb="0"/><line nr="946" mi="2" ci="0" mb="0" cb="0"/><line nr="951" mi="0" ci="6" mb="0" cb="0"/><line nr="952" mi="6" ci="10" mb="0" cb="0"/><line nr="953" mi="0" ci="4" mb="0" cb="0"/><line nr="954" mi="0" ci="4" mb="0" cb="0"/><line nr="955" mi="0" ci="2" mb="0" cb="0"/><line nr="960" mi="0" ci="6" mb="0" cb="0"/><line nr="961" mi="0" ci="6" mb="0" cb="0"/><line nr="962" mi="0" ci="6" mb="0" cb="0"/><line nr="963" mi="6" ci="10" mb="0" cb="0"/><line nr="964" mi="0" ci="3" mb="1" cb="1"/><line nr="965" mi="0" ci="2" mb="0" cb="0"/><line nr="966" mi="4" ci="0" mb="0" cb="0"/><line nr="967" mi="4" ci="0" mb="0" cb="0"/><line nr="968" mi="4" ci="0" mb="0" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="2" ci="0" mb="0" cb="0"/><line nr="975" mi="0" ci="16" mb="0" cb="0"/><line nr="976" mi="0" ci="7" mb="0" cb="0"/><line nr="977" mi="0" ci="7" mb="0" cb="0"/><line nr="978" mi="6" ci="10" mb="0" cb="0"/><line nr="979" mi="0" ci="4" mb="2" cb="2"/><line nr="980" mi="2" ci="0" mb="0" cb="0"/><line nr="981" mi="0" ci="4" mb="0" cb="0"/><line nr="982" mi="0" ci="4" mb="0" cb="0"/><line nr="983" mi="0" ci="4" mb="0" cb="0"/><line nr="984" mi="0" ci="4" mb="0" cb="0"/><line nr="985" mi="0" ci="2" mb="0" cb="0"/><line nr="990" mi="0" ci="6" mb="0" cb="0"/><line nr="991" mi="6" ci="10" mb="0" cb="0"/><line nr="992" mi="0" ci="4" mb="0" cb="0"/><line nr="993" mi="0" ci="4" mb="0" cb="0"/><line nr="994" mi="0" ci="2" mb="0" cb="0"/><line nr="999" mi="7" ci="0" mb="0" cb="0"/><line nr="1000" mi="7" ci="0" mb="0" cb="0"/><line nr="1001" mi="16" ci="0" mb="0" cb="0"/><line nr="1002" mi="4" ci="0" mb="4" cb="0"/><line nr="1003" mi="2" ci="0" mb="0" cb="0"/><line nr="1004" mi="4" ci="0" mb="0" cb="0"/><line nr="1005" mi="4" ci="0" mb="0" cb="0"/><line nr="1006" mi="4" ci="0" mb="0" cb="0"/><line nr="1007" mi="2" ci="0" mb="0" cb="0"/><line nr="1012" mi="16" ci="0" mb="0" cb="0"/><line nr="1013" mi="16" ci="0" mb="0" cb="0"/><line nr="1014" mi="6" ci="0" mb="0" cb="0"/><line nr="1015" mi="16" ci="0" mb="0" cb="0"/><line nr="1016" mi="4" ci="0" mb="0" cb="0"/><line nr="1017" mi="4" ci="0" mb="0" cb="0"/><line nr="1018" mi="4" ci="0" mb="0" cb="0"/><line nr="1019" mi="4" ci="0" mb="0" cb="0"/><line nr="1020" mi="2" ci="0" mb="0" cb="0"/><line nr="1025" mi="0" ci="7" mb="0" cb="0"/><line nr="1026" mi="0" ci="6" mb="0" cb="0"/><line nr="1027" mi="6" ci="10" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="1" cb="1"/><line nr="1029" mi="2" ci="0" mb="0" cb="0"/><line nr="1030" mi="0" ci="4" mb="0" cb="0"/><line nr="1031" mi="0" ci="4" mb="0" cb="0"/><line nr="1032" mi="0" ci="4" mb="0" cb="0"/><line nr="1033" mi="0" ci="2" mb="0" cb="0"/><line nr="1038" mi="7" ci="0" mb="0" cb="0"/><line nr="1039" mi="6" ci="0" mb="0" cb="0"/><line nr="1040" mi="16" ci="0" mb="0" cb="0"/><line nr="1041" mi="2" ci="0" mb="2" cb="0"/><line nr="1042" mi="2" ci="0" mb="0" cb="0"/><line nr="1043" mi="4" ci="0" mb="0" cb="0"/><line nr="1044" mi="4" ci="0" mb="0" cb="0"/><line nr="1045" mi="4" ci="0" mb="0" cb="0"/><line nr="1046" mi="2" ci="0" mb="0" cb="0"/><line nr="1051" mi="7" ci="0" mb="0" cb="0"/><line nr="1052" mi="16" ci="0" mb="0" cb="0"/><line nr="1053" mi="2" ci="0" mb="2" cb="0"/><line nr="1054" mi="2" ci="0" mb="0" cb="0"/><line nr="1055" mi="4" ci="0" mb="0" cb="0"/><line nr="1056" mi="4" ci="0" mb="0" cb="0"/><line nr="1057" mi="2" ci="0" mb="0" cb="0"/><line nr="1062" mi="0" ci="3" mb="0" cb="2"/><line nr="1063" mi="0" ci="2" mb="0" cb="0"/><line nr="1065" mi="0" ci="4" mb="0" cb="0"/><line nr="1066" mi="0" ci="5" mb="0" cb="0"/><line nr="1067" mi="0" ci="10" mb="0" cb="2"/><line nr="1068" mi="0" ci="6" mb="0" cb="0"/><line nr="1069" mi="0" ci="8" mb="0" cb="0"/><line nr="1070" mi="0" ci="1" mb="0" cb="0"/><line nr="1071" mi="0" ci="10" mb="0" cb="2"/><line nr="1072" mi="0" ci="3" mb="0" cb="2"/><line nr="1073" mi="0" ci="7" mb="0" cb="0"/><line nr="1075" mi="0" ci="5" mb="0" cb="0"/><line nr="1077" mi="0" ci="3" mb="0" cb="2"/><line nr="1078" mi="0" ci="7" mb="0" cb="0"/><line nr="1081" mi="0" ci="1" mb="0" cb="0"/><line nr="1082" mi="0" ci="2" mb="0" cb="0"/><line nr="1087" mi="7" ci="0" mb="0" cb="0"/><line nr="1088" mi="16" ci="0" mb="0" cb="0"/><line nr="1089" mi="2" ci="0" mb="2" cb="0"/><line nr="1090" mi="2" ci="0" mb="0" cb="0"/><line nr="1091" mi="4" ci="0" mb="0" cb="0"/><line nr="1092" mi="4" ci="0" mb="0" cb="0"/><line nr="1093" mi="2" ci="0" mb="0" cb="0"/><line nr="1098" mi="16" ci="0" mb="0" cb="0"/><line nr="1099" mi="4" ci="0" mb="0" cb="0"/><line nr="1100" mi="2" ci="0" mb="0" cb="0"/><line nr="1105" mi="16" ci="0" mb="0" cb="0"/><line nr="1106" mi="4" ci="0" mb="0" cb="0"/><line nr="1107" mi="2" ci="0" mb="0" cb="0"/><line nr="1111" mi="0" ci="6" mb="0" cb="0"/><line nr="1115" mi="0" ci="14" mb="0" cb="0"/><line nr="1119" mi="6" ci="0" mb="0" cb="0"/><line nr="1120" mi="6" ci="0" mb="0" cb="0"/><line nr="1121" mi="7" ci="0" mb="0" cb="0"/><line nr="1122" mi="16" ci="0" mb="0" cb="0"/><line nr="1123" mi="2" ci="0" mb="2" cb="0"/><line nr="1124" mi="2" ci="0" mb="0" cb="0"/><line nr="1125" mi="4" ci="0" mb="0" cb="0"/><line nr="1126" mi="4" ci="0" mb="0" cb="0"/><line nr="1127" mi="4" ci="0" mb="0" cb="0"/><line nr="1128" mi="4" ci="0" mb="0" cb="0"/><line nr="1129" mi="2" ci="0" mb="0" cb="0"/><line nr="1133" mi="6" ci="0" mb="0" cb="0"/><line nr="1134" mi="7" ci="0" mb="0" cb="0"/><line nr="1135" mi="16" ci="0" mb="0" cb="0"/><line nr="1136" mi="2" ci="0" mb="2" cb="0"/><line nr="1137" mi="2" ci="0" mb="0" cb="0"/><line nr="1138" mi="4" ci="0" mb="0" cb="0"/><line nr="1139" mi="4" ci="0" mb="0" cb="0"/><line nr="1140" mi="4" ci="0" mb="0" cb="0"/><line nr="1141" mi="2" ci="0" mb="0" cb="0"/><line nr="1146" mi="6" ci="0" mb="0" cb="0"/><line nr="1147" mi="7" ci="0" mb="0" cb="0"/><line nr="1148" mi="16" ci="0" mb="0" cb="0"/><line nr="1149" mi="2" ci="0" mb="2" cb="0"/><line nr="1150" mi="2" ci="0" mb="0" cb="0"/><line nr="1151" mi="4" ci="0" mb="0" cb="0"/><line nr="1152" mi="4" ci="0" mb="0" cb="0"/><line nr="1153" mi="4" ci="0" mb="0" cb="0"/><line nr="1154" mi="2" ci="0" mb="0" cb="0"/><line nr="1159" mi="7" ci="0" mb="0" cb="0"/><line nr="1160" mi="6" ci="0" mb="0" cb="0"/><line nr="1161" mi="16" ci="0" mb="0" cb="0"/><line nr="1162" mi="2" ci="0" mb="2" cb="0"/><line nr="1163" mi="2" ci="0" mb="0" cb="0"/><line nr="1164" mi="4" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="0" cb="0"/><line nr="1166" mi="4" ci="0" mb="0" cb="0"/><line nr="1167" mi="2" ci="0" mb="0" cb="0"/><line nr="1172" mi="7" ci="0" mb="0" cb="0"/><line nr="1173" mi="16" ci="0" mb="0" cb="0"/><line nr="1174" mi="2" ci="0" mb="2" cb="0"/><line nr="1175" mi="2" ci="0" mb="0" cb="0"/><line nr="1176" mi="4" ci="0" mb="0" cb="0"/><line nr="1177" mi="4" ci="0" mb="0" cb="0"/><line nr="1178" mi="2" ci="0" mb="0" cb="0"/><line nr="1183" mi="6" ci="0" mb="0" cb="0"/><line nr="1184" mi="7" ci="0" mb="0" cb="0"/><line nr="1185" mi="16" ci="0" mb="0" cb="0"/><line nr="1186" mi="2" ci="0" mb="2" cb="0"/><line nr="1187" mi="2" ci="0" mb="0" cb="0"/><line nr="1188" mi="4" ci="0" mb="0" cb="0"/><line nr="1189" mi="4" ci="0" mb="0" cb="0"/><line nr="1190" mi="4" ci="0" mb="0" cb="0"/><line nr="1191" mi="2" ci="0" mb="0" cb="0"/><line nr="1196" mi="16" ci="0" mb="0" cb="0"/><line nr="1197" mi="4" ci="0" mb="0" cb="0"/><line nr="1198" mi="2" ci="0" mb="0" cb="0"/><line nr="1203" mi="6" ci="0" mb="0" cb="0"/><line nr="1204" mi="7" ci="0" mb="0" cb="0"/><line nr="1205" mi="7" ci="0" mb="0" cb="0"/><line nr="1206" mi="16" ci="0" mb="0" cb="0"/><line nr="1207" mi="4" ci="0" mb="4" cb="0"/><line nr="1208" mi="2" ci="0" mb="0" cb="0"/><line nr="1209" mi="4" ci="0" mb="0" cb="0"/><line nr="1210" mi="4" ci="0" mb="0" cb="0"/><line nr="1211" mi="4" ci="0" mb="0" cb="0"/><line nr="1212" mi="4" ci="0" mb="0" cb="0"/><line nr="1213" mi="2" ci="0" mb="0" cb="0"/><line nr="1218" mi="6" ci="0" mb="0" cb="0"/><line nr="1219" mi="16" ci="0" mb="0" cb="0"/><line nr="1220" mi="4" ci="0" mb="0" cb="0"/><line nr="1221" mi="4" ci="0" mb="0" cb="0"/><line nr="1222" mi="2" ci="0" mb="0" cb="0"/><line nr="1227" mi="6" ci="10" mb="0" cb="0"/><line nr="1228" mi="0" ci="4" mb="0" cb="0"/><line nr="1229" mi="0" ci="2" mb="0" cb="0"/><line nr="1234" mi="6" ci="0" mb="0" cb="0"/><line nr="1235" mi="7" ci="0" mb="0" cb="0"/><line nr="1236" mi="16" ci="0" mb="0" cb="0"/><line nr="1237" mi="2" ci="0" mb="2" cb="0"/><line nr="1238" mi="2" ci="0" mb="0" cb="0"/><line nr="1239" mi="4" ci="0" mb="0" cb="0"/><line nr="1240" mi="4" ci="0" mb="0" cb="0"/><line nr="1241" mi="4" ci="0" mb="0" cb="0"/><line nr="1242" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3456" covered="1257"/><counter type="BRANCH" missed="148" covered="36"/><counter type="LINE" missed="574" covered="236"/><counter type="COMPLEXITY" missed="266" covered="42"/><counter type="METHOD" missed="182" covered="34"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoCommentEqualsVisitor.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="2" cb="2"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="1" cb="1"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="2" cb="2"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="1" cb="1"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="2" cb="2"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="1" cb="1"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="1" cb="1"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="1" cb="1"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="2" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="2" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="7" ci="0" mb="2" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="1" cb="1"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="1" cb="1"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="1" cb="1"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="1" cb="1"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="1" cb="1"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="1" cb="1"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="1" cb="1"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="7" ci="0" mb="2" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="7" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="7" ci="0" mb="2" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="7" ci="0" mb="2" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="7" ci="0" mb="2" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="2" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="7" ci="0" mb="2" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="2" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="7" ci="0" mb="2" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="7" ci="0" mb="2" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="2" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="2" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="2" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="2" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="2" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="7" ci="0" mb="2" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="7" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="7" ci="0" mb="2" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="7" ci="0" mb="2" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="2" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="2" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="2" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="238" mi="7" ci="0" mb="2" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="7" ci="0" mb="2" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="7" ci="0" mb="2" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="7" ci="0" mb="2" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="7" ci="0" mb="2" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="7" ci="0" mb="2" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="7" ci="0" mb="2" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="2" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="2" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="7" ci="0" mb="2" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="7" ci="0" mb="2" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="2" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="7" ci="0" mb="2" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="2" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="7" ci="0" mb="2" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="0" mb="2" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="7" ci="0" mb="2" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="0" mb="2" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="7" ci="0" mb="2" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="2" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="9" ci="0" mb="2" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="7" ci="0" mb="2" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="7" ci="0" mb="2" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="2" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="2" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="7" ci="0" mb="2" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="9" ci="0" mb="2" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="7" ci="0" mb="2" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="2" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="331" mi="7" ci="0" mb="2" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="7" ci="0" mb="2" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="7" ci="0" mb="2" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="7" ci="0" mb="2" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="345" mi="7" ci="0" mb="2" cb="0"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="3" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="7" ci="0" mb="2" cb="0"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="7" ci="0" mb="2" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="7" ci="0" mb="2" cb="0"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="7" ci="0" mb="2" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="2" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="374" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="7" ci="0" mb="2" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="2" cb="0"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="3" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="7" ci="0" mb="2" cb="0"/><line nr="386" mi="3" ci="0" mb="0" cb="0"/><line nr="387" mi="7" ci="0" mb="2" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="0" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="395" mi="7" ci="0" mb="2" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="7" ci="0" mb="2" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="7" ci="0" mb="2" cb="0"/><line nr="408" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="7" ci="0" mb="2" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="7" ci="0" mb="2" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="7" ci="0" mb="2" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="7" ci="0" mb="2" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="7" ci="0" mb="2" cb="0"/><line nr="436" mi="3" ci="0" mb="0" cb="0"/><line nr="437" mi="7" ci="0" mb="2" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="445" mi="7" ci="0" mb="2" cb="0"/><line nr="446" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="2" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="7" ci="0" mb="2" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="7" ci="0" mb="2" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="459" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="3" ci="0" mb="0" cb="0"/><line nr="465" mi="7" ci="0" mb="2" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="2" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="0" mb="2" cb="0"/><line nr="470" mi="3" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="7" ci="0" mb="2" cb="0"/><line nr="478" mi="3" ci="0" mb="0" cb="0"/><line nr="479" mi="7" ci="0" mb="2" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="487" mi="7" ci="0" mb="2" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="7" ci="0" mb="2" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="7" ci="0" mb="2" cb="0"/><line nr="498" mi="3" ci="0" mb="0" cb="0"/><line nr="499" mi="7" ci="0" mb="2" cb="0"/><line nr="500" mi="3" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="7" ci="0" mb="2" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="515" mi="7" ci="0" mb="2" cb="0"/><line nr="516" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="7" ci="0" mb="2" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="7" ci="0" mb="2" cb="0"/><line nr="520" mi="3" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="7" ci="0" mb="2" cb="0"/><line nr="528" mi="3" ci="0" mb="0" cb="0"/><line nr="529" mi="7" ci="0" mb="2" cb="0"/><line nr="530" mi="3" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="0" cb="0"/><line nr="537" mi="7" ci="0" mb="2" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="0" cb="0"/><line nr="544" mi="3" ci="0" mb="0" cb="0"/><line nr="545" mi="7" ci="0" mb="2" cb="0"/><line nr="546" mi="3" ci="0" mb="0" cb="0"/><line nr="547" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="7" ci="0" mb="2" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="7" ci="0" mb="2" cb="0"/><line nr="562" mi="3" ci="0" mb="0" cb="0"/><line nr="563" mi="3" ci="0" mb="0" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="569" mi="7" ci="0" mb="2" cb="0"/><line nr="570" mi="3" ci="0" mb="0" cb="0"/><line nr="571" mi="3" ci="0" mb="0" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="9" ci="0" mb="2" cb="0"/><line nr="578" mi="3" ci="0" mb="0" cb="0"/><line nr="579" mi="3" ci="0" mb="0" cb="0"/><line nr="584" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="590" mi="7" ci="0" mb="2" cb="0"/><line nr="591" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="7" ci="0" mb="2" cb="0"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="594" mi="7" ci="0" mb="2" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="596" mi="7" ci="0" mb="2" cb="0"/><line nr="597" mi="3" ci="0" mb="0" cb="0"/><line nr="598" mi="3" ci="0" mb="0" cb="0"/><line nr="603" mi="3" ci="0" mb="0" cb="0"/><line nr="604" mi="7" ci="0" mb="2" cb="0"/><line nr="605" mi="3" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="612" mi="7" ci="0" mb="2" cb="0"/><line nr="613" mi="3" ci="0" mb="0" cb="0"/><line nr="614" mi="7" ci="0" mb="2" cb="0"/><line nr="615" mi="3" ci="0" mb="0" cb="0"/><line nr="616" mi="7" ci="0" mb="2" cb="0"/><line nr="617" mi="3" ci="0" mb="0" cb="0"/><line nr="618" mi="7" ci="0" mb="2" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="620" mi="7" ci="0" mb="2" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="622" mi="3" ci="0" mb="0" cb="0"/><line nr="627" mi="3" ci="0" mb="0" cb="0"/><line nr="628" mi="7" ci="0" mb="2" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="630" mi="7" ci="0" mb="2" cb="0"/><line nr="631" mi="3" ci="0" mb="0" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="7" mb="0" cb="2"/><line nr="639" mi="0" ci="3" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="645" mi="3" ci="0" mb="0" cb="0"/><line nr="646" mi="7" ci="0" mb="2" cb="0"/><line nr="647" mi="3" ci="0" mb="0" cb="0"/><line nr="648" mi="3" ci="0" mb="0" cb="0"/><line nr="653" mi="3" ci="0" mb="0" cb="0"/><line nr="654" mi="7" ci="0" mb="2" cb="0"/><line nr="655" mi="3" ci="0" mb="0" cb="0"/><line nr="656" mi="3" ci="0" mb="0" cb="0"/><line nr="661" mi="3" ci="0" mb="0" cb="0"/><line nr="662" mi="7" ci="0" mb="2" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="7" ci="0" mb="2" cb="0"/><line nr="665" mi="3" ci="0" mb="0" cb="0"/><line nr="666" mi="3" ci="0" mb="0" cb="0"/><line nr="671" mi="3" ci="0" mb="0" cb="0"/><line nr="672" mi="7" ci="0" mb="2" cb="0"/><line nr="673" mi="3" ci="0" mb="0" cb="0"/><line nr="674" mi="7" ci="0" mb="2" cb="0"/><line nr="675" mi="3" ci="0" mb="0" cb="0"/><line nr="676" mi="7" ci="0" mb="2" cb="0"/><line nr="677" mi="3" ci="0" mb="0" cb="0"/><line nr="678" mi="3" ci="0" mb="0" cb="0"/><line nr="683" mi="3" ci="0" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="2" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="3" ci="0" mb="0" cb="0"/><line nr="691" mi="3" ci="0" mb="0" cb="0"/><line nr="692" mi="7" ci="0" mb="2" cb="0"/><line nr="693" mi="3" ci="0" mb="0" cb="0"/><line nr="694" mi="7" ci="0" mb="2" cb="0"/><line nr="695" mi="3" ci="0" mb="0" cb="0"/><line nr="696" mi="3" ci="0" mb="0" cb="0"/><line nr="701" mi="3" ci="0" mb="0" cb="0"/><line nr="702" mi="7" ci="0" mb="2" cb="0"/><line nr="703" mi="3" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="2" cb="0"/><line nr="705" mi="3" ci="0" mb="0" cb="0"/><line nr="706" mi="3" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="712" mi="7" ci="0" mb="2" cb="0"/><line nr="713" mi="3" ci="0" mb="0" cb="0"/><line nr="714" mi="7" ci="0" mb="2" cb="0"/><line nr="715" mi="3" ci="0" mb="0" cb="0"/><line nr="716" mi="3" ci="0" mb="0" cb="0"/><line nr="721" mi="3" ci="0" mb="0" cb="0"/><line nr="722" mi="7" ci="0" mb="2" cb="0"/><line nr="723" mi="3" ci="0" mb="0" cb="0"/><line nr="724" mi="7" ci="0" mb="2" cb="0"/><line nr="725" mi="3" ci="0" mb="0" cb="0"/><line nr="726" mi="9" ci="0" mb="2" cb="0"/><line nr="727" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="7" ci="0" mb="2" cb="0"/><line nr="729" mi="3" ci="0" mb="0" cb="0"/><line nr="730" mi="3" ci="0" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="2" cb="0"/><line nr="737" mi="3" ci="0" mb="0" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="744" mi="7" ci="0" mb="2" cb="0"/><line nr="745" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="7" ci="0" mb="2" cb="0"/><line nr="747" mi="3" ci="0" mb="0" cb="0"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><line nr="753" mi="3" ci="0" mb="0" cb="0"/><line nr="754" mi="7" ci="0" mb="2" cb="0"/><line nr="755" mi="3" ci="0" mb="0" cb="0"/><line nr="756" mi="3" ci="0" mb="0" cb="0"/><line nr="761" mi="3" ci="0" mb="0" cb="0"/><line nr="762" mi="7" ci="0" mb="2" cb="0"/><line nr="763" mi="3" ci="0" mb="0" cb="0"/><line nr="764" mi="7" ci="0" mb="2" cb="0"/><line nr="765" mi="3" ci="0" mb="0" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="771" mi="3" ci="0" mb="0" cb="0"/><line nr="776" mi="3" ci="0" mb="0" cb="0"/><line nr="777" mi="7" ci="0" mb="2" cb="0"/><line nr="778" mi="3" ci="0" mb="0" cb="0"/><line nr="779" mi="3" ci="0" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="0" cb="0"/><line nr="785" mi="7" ci="0" mb="2" cb="0"/><line nr="786" mi="3" ci="0" mb="0" cb="0"/><line nr="787" mi="7" ci="0" mb="2" cb="0"/><line nr="788" mi="3" ci="0" mb="0" cb="0"/><line nr="789" mi="3" ci="0" mb="0" cb="0"/><line nr="794" mi="3" ci="0" mb="0" cb="0"/><line nr="795" mi="7" ci="0" mb="2" cb="0"/><line nr="796" mi="3" ci="0" mb="0" cb="0"/><line nr="797" mi="7" ci="0" mb="2" cb="0"/><line nr="798" mi="3" ci="0" mb="0" cb="0"/><line nr="799" mi="7" ci="0" mb="2" cb="0"/><line nr="800" mi="3" ci="0" mb="0" cb="0"/><line nr="801" mi="3" ci="0" mb="0" cb="0"/><line nr="806" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="7" ci="0" mb="2" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="809" mi="3" ci="0" mb="0" cb="0"/><line nr="814" mi="3" ci="0" mb="0" cb="0"/><line nr="815" mi="7" ci="0" mb="2" cb="0"/><line nr="816" mi="3" ci="0" mb="0" cb="0"/><line nr="817" mi="3" ci="0" mb="0" cb="0"/><line nr="822" mi="3" ci="0" mb="0" cb="0"/><line nr="823" mi="7" ci="0" mb="2" cb="0"/><line nr="824" mi="3" ci="0" mb="0" cb="0"/><line nr="825" mi="7" ci="0" mb="2" cb="0"/><line nr="826" mi="3" ci="0" mb="0" cb="0"/><line nr="827" mi="7" ci="0" mb="2" cb="0"/><line nr="828" mi="3" ci="0" mb="0" cb="0"/><line nr="829" mi="3" ci="0" mb="0" cb="0"/><line nr="834" mi="3" ci="0" mb="0" cb="0"/><line nr="835" mi="7" ci="0" mb="2" cb="0"/><line nr="836" mi="3" ci="0" mb="0" cb="0"/><line nr="837" mi="7" ci="0" mb="2" cb="0"/><line nr="838" mi="3" ci="0" mb="0" cb="0"/><line nr="839" mi="3" ci="0" mb="0" cb="0"/><line nr="844" mi="3" ci="0" mb="0" cb="0"/><line nr="845" mi="7" ci="0" mb="2" cb="0"/><line nr="846" mi="3" ci="0" mb="0" cb="0"/><line nr="847" mi="3" ci="0" mb="0" cb="0"/><line nr="852" mi="3" ci="0" mb="0" cb="0"/><line nr="853" mi="7" ci="0" mb="2" cb="0"/><line nr="854" mi="3" ci="0" mb="0" cb="0"/><line nr="855" mi="7" ci="0" mb="2" cb="0"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="857" mi="3" ci="0" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="7" ci="0" mb="2" cb="0"/><line nr="864" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="7" ci="0" mb="2" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="867" mi="7" ci="0" mb="2" cb="0"/><line nr="868" mi="3" ci="0" mb="0" cb="0"/><line nr="869" mi="3" ci="0" mb="0" cb="0"/><line nr="874" mi="3" ci="0" mb="0" cb="0"/><line nr="875" mi="7" ci="0" mb="2" cb="0"/><line nr="876" mi="3" ci="0" mb="0" cb="0"/><line nr="877" mi="7" ci="0" mb="2" cb="0"/><line nr="878" mi="3" ci="0" mb="0" cb="0"/><line nr="879" mi="7" ci="0" mb="2" cb="0"/><line nr="880" mi="3" ci="0" mb="0" cb="0"/><line nr="881" mi="7" ci="0" mb="2" cb="0"/><line nr="882" mi="3" ci="0" mb="0" cb="0"/><line nr="883" mi="3" ci="0" mb="0" cb="0"/><line nr="888" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="7" ci="0" mb="2" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="3" ci="0" mb="0" cb="0"/><line nr="896" mi="3" ci="0" mb="0" cb="0"/><line nr="897" mi="7" ci="0" mb="2" cb="0"/><line nr="898" mi="3" ci="0" mb="0" cb="0"/><line nr="899" mi="7" ci="0" mb="2" cb="0"/><line nr="900" mi="3" ci="0" mb="0" cb="0"/><line nr="901" mi="3" ci="0" mb="0" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="907" mi="7" ci="0" mb="2" cb="0"/><line nr="908" mi="3" ci="0" mb="0" cb="0"/><line nr="909" mi="7" ci="0" mb="2" cb="0"/><line nr="910" mi="3" ci="0" mb="0" cb="0"/><line nr="911" mi="7" ci="0" mb="2" cb="0"/><line nr="912" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="2" cb="0"/><line nr="914" mi="3" ci="0" mb="0" cb="0"/><line nr="915" mi="3" ci="0" mb="0" cb="0"/><line nr="920" mi="3" ci="0" mb="0" cb="0"/><line nr="921" mi="7" ci="0" mb="2" cb="0"/><line nr="922" mi="3" ci="0" mb="0" cb="0"/><line nr="923" mi="7" ci="0" mb="2" cb="0"/><line nr="924" mi="3" ci="0" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="0" cb="0"/><line nr="930" mi="3" ci="0" mb="0" cb="0"/><line nr="931" mi="7" ci="0" mb="2" cb="0"/><line nr="932" mi="3" ci="0" mb="0" cb="0"/><line nr="933" mi="9" ci="0" mb="2" cb="0"/><line nr="934" mi="3" ci="0" mb="0" cb="0"/><line nr="935" mi="7" ci="0" mb="2" cb="0"/><line nr="936" mi="3" ci="0" mb="0" cb="0"/><line nr="937" mi="3" ci="0" mb="0" cb="0"/><line nr="942" mi="3" ci="0" mb="0" cb="0"/><line nr="943" mi="7" ci="0" mb="2" cb="0"/><line nr="944" mi="3" ci="0" mb="0" cb="0"/><line nr="945" mi="7" ci="0" mb="2" cb="0"/><line nr="946" mi="3" ci="0" mb="0" cb="0"/><line nr="947" mi="7" ci="0" mb="2" cb="0"/><line nr="948" mi="3" ci="0" mb="0" cb="0"/><line nr="949" mi="3" ci="0" mb="0" cb="0"/><line nr="954" mi="3" ci="0" mb="0" cb="0"/><line nr="955" mi="7" ci="0" mb="2" cb="0"/><line nr="956" mi="3" ci="0" mb="0" cb="0"/><line nr="957" mi="3" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="963" mi="9" ci="0" mb="2" cb="0"/><line nr="964" mi="3" ci="0" mb="0" cb="0"/><line nr="965" mi="9" ci="0" mb="2" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="7" ci="0" mb="2" cb="0"/><line nr="968" mi="3" ci="0" mb="0" cb="0"/><line nr="969" mi="3" ci="0" mb="0" cb="0"/><line nr="974" mi="7" ci="0" mb="0" cb="0"/><line nr="979" mi="3" ci="0" mb="0" cb="0"/><line nr="980" mi="7" ci="0" mb="2" cb="0"/><line nr="981" mi="3" ci="0" mb="0" cb="0"/><line nr="982" mi="7" ci="0" mb="2" cb="0"/><line nr="983" mi="3" ci="0" mb="0" cb="0"/><line nr="984" mi="9" ci="0" mb="2" cb="0"/><line nr="985" mi="3" ci="0" mb="0" cb="0"/><line nr="986" mi="7" ci="0" mb="2" cb="0"/><line nr="987" mi="3" ci="0" mb="0" cb="0"/><line nr="988" mi="3" ci="0" mb="0" cb="0"/><line nr="993" mi="3" ci="0" mb="0" cb="0"/><line nr="994" mi="7" ci="0" mb="2" cb="0"/><line nr="995" mi="3" ci="0" mb="0" cb="0"/><line nr="996" mi="7" ci="0" mb="2" cb="0"/><line nr="997" mi="3" ci="0" mb="0" cb="0"/><line nr="998" mi="3" ci="0" mb="0" cb="0"/><line nr="1003" mi="3" ci="0" mb="0" cb="0"/><line nr="1004" mi="7" ci="0" mb="2" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1006" mi="7" ci="0" mb="2" cb="0"/><line nr="1007" mi="3" ci="0" mb="0" cb="0"/><line nr="1008" mi="3" ci="0" mb="0" cb="0"/><line nr="1013" mi="3" ci="0" mb="0" cb="0"/><line nr="1014" mi="7" ci="0" mb="2" cb="0"/><line nr="1015" mi="3" ci="0" mb="0" cb="0"/><line nr="1016" mi="7" ci="0" mb="2" cb="0"/><line nr="1017" mi="3" ci="0" mb="0" cb="0"/><line nr="1018" mi="3" ci="0" mb="0" cb="0"/><line nr="1023" mi="3" ci="0" mb="0" cb="0"/><line nr="1024" mi="7" ci="0" mb="2" cb="0"/><line nr="1025" mi="3" ci="0" mb="0" cb="0"/><line nr="1026" mi="3" ci="0" mb="0" cb="0"/><line nr="1031" mi="3" ci="0" mb="0" cb="0"/><line nr="1032" mi="7" ci="0" mb="2" cb="0"/><line nr="1033" mi="3" ci="0" mb="0" cb="0"/><line nr="1034" mi="7" ci="0" mb="2" cb="0"/><line nr="1035" mi="3" ci="0" mb="0" cb="0"/><line nr="1036" mi="3" ci="0" mb="0" cb="0"/><line nr="1041" mi="3" ci="0" mb="0" cb="0"/><line nr="1046" mi="3" ci="0" mb="0" cb="0"/><line nr="1047" mi="7" ci="0" mb="2" cb="0"/><line nr="1048" mi="3" ci="0" mb="0" cb="0"/><line nr="1049" mi="7" ci="0" mb="2" cb="0"/><line nr="1050" mi="3" ci="0" mb="0" cb="0"/><line nr="1051" mi="7" ci="0" mb="2" cb="0"/><line nr="1052" mi="3" ci="0" mb="0" cb="0"/><line nr="1053" mi="3" ci="0" mb="0" cb="0"/><line nr="1058" mi="3" ci="0" mb="0" cb="0"/><line nr="1059" mi="7" ci="0" mb="2" cb="0"/><line nr="1060" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="3" ci="0" mb="0" cb="0"/><line nr="1066" mi="3" ci="0" mb="0" cb="0"/><line nr="1067" mi="7" ci="0" mb="2" cb="0"/><line nr="1068" mi="3" ci="0" mb="0" cb="0"/><line nr="1069" mi="3" ci="0" mb="0" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1075" mi="7" ci="0" mb="2" cb="0"/><line nr="1076" mi="3" ci="0" mb="0" cb="0"/><line nr="1077" mi="7" ci="0" mb="2" cb="0"/><line nr="1078" mi="3" ci="0" mb="0" cb="0"/><line nr="1079" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2638" covered="211"/><counter type="BRANCH" missed="427" covered="33"/><counter type="LINE" missed="600" covered="42"/><counter type="COMPLEXITY" missed="315" covered="17"/><counter type="METHOD" missed="92" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TreeVisitor.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="11" ci="0" mb="2" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="74"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EqualsVisitor.java"><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="66" mi="0" ci="2" mb="1" cb="1"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="11" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="2" cb="2"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="9" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="1" cb="3"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="2" cb="2"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="1" cb="1"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="1" cb="1"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="1" cb="1"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="1" cb="1"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="1" cb="1"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="1" cb="1"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="2" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="7" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="7" ci="0" mb="2" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="2"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="1" cb="1"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="1" cb="1"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="1" cb="1"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="1" cb="1"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="1" cb="1"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="1" cb="1"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="2"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="1" cb="1"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="1" cb="1"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="1" cb="1"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="7" ci="0" mb="2" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="2" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="2" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="7" ci="0" mb="2" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="7" ci="0" mb="2" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="7" ci="0" mb="2" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="7" ci="0" mb="2" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="7" ci="0" mb="2" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="2" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="2" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="7" ci="0" mb="2" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="2" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="7" ci="0" mb="2" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="2" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="7" ci="0" mb="2" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="7" ci="0" mb="2" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="1" cb="1"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="2" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="2" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="2" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="7" ci="0" mb="2" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="7" ci="0" mb="2" cb="0"/><line nr="284" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="7" mb="1" cb="1"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="7" mb="1" cb="1"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="7" ci="0" mb="2" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="2" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="7" mb="0" cb="2"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="2"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="7" mb="1" cb="1"/><line nr="310" mi="3" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="1" cb="1"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="7" ci="0" mb="2" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="7" ci="0" mb="2" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="7" ci="0" mb="2" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="2" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="7" ci="0" mb="2" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="2" cb="0"/><line nr="330" mi="3" ci="0" mb="0" cb="0"/><line nr="331" mi="7" ci="0" mb="2" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="7" ci="0" mb="2" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="7" ci="0" mb="2" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="2"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="7" mb="1" cb="1"/><line nr="346" mi="3" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="7" mb="1" cb="1"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="2"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="2"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="1" cb="1"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="1" cb="1"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="0" ci="7" mb="1" cb="1"/><line nr="358" mi="3" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="1" cb="1"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="1" cb="1"/><line nr="362" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="1" cb="1"/><line nr="370" mi="3" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="9" mb="1" cb="1"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="1" cb="1"/><line nr="374" mi="3" ci="0" mb="0" cb="0"/><line nr="375" mi="0" ci="7" mb="0" cb="2"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="7" mb="1" cb="1"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="7" mb="1" cb="1"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="1" cb="1"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="7" ci="0" mb="2" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="9" ci="0" mb="2" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="7" ci="0" mb="2" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="395" mi="7" ci="0" mb="2" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="7" mb="0" cb="2"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="7" mb="1" cb="1"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="7" mb="0" cb="2"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="7" mb="1" cb="1"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="7" mb="1" cb="1"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="7" mb="1" cb="1"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="7" mb="1" cb="1"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="1" cb="1"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="1" cb="1"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="1" cb="1"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="0" ci="7" mb="0" cb="2"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="7" mb="1" cb="1"/><line nr="444" mi="3" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="1" cb="1"/><line nr="446" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="7" mb="1" cb="1"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="7" ci="0" mb="2" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="7" ci="0" mb="2" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="459" mi="7" ci="0" mb="2" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="2" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="0" mb="2" cb="0"/><line nr="470" mi="3" ci="0" mb="0" cb="0"/><line nr="471" mi="7" ci="0" mb="2" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="3" ci="0" mb="0" cb="0"/><line nr="478" mi="3" ci="0" mb="0" cb="0"/><line nr="479" mi="7" ci="0" mb="2" cb="0"/><line nr="480" mi="3" ci="0" mb="0" cb="0"/><line nr="481" mi="7" ci="0" mb="2" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="7" ci="0" mb="2" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="7" mb="1" cb="1"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="1" cb="1"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="0" cb="0"/><line nr="501" mi="7" ci="0" mb="2" cb="0"/><line nr="502" mi="3" ci="0" mb="0" cb="0"/><line nr="503" mi="7" ci="0" mb="2" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="7" ci="0" mb="2" cb="0"/><line nr="506" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="7" ci="0" mb="2" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="7" mb="1" cb="1"/><line nr="516" mi="3" ci="0" mb="0" cb="0"/><line nr="517" mi="0" ci="7" mb="1" cb="1"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="0" cb="0"/><line nr="525" mi="7" ci="0" mb="2" cb="0"/><line nr="526" mi="3" ci="0" mb="0" cb="0"/><line nr="527" mi="7" ci="0" mb="2" cb="0"/><line nr="528" mi="3" ci="0" mb="0" cb="0"/><line nr="529" mi="7" ci="0" mb="2" cb="0"/><line nr="530" mi="3" ci="0" mb="0" cb="0"/><line nr="531" mi="3" ci="0" mb="0" cb="0"/><line nr="536" mi="3" ci="0" mb="0" cb="0"/><line nr="537" mi="7" ci="0" mb="2" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="7" ci="0" mb="2" cb="0"/><line nr="540" mi="3" ci="0" mb="0" cb="0"/><line nr="541" mi="7" ci="0" mb="2" cb="0"/><line nr="542" mi="3" ci="0" mb="0" cb="0"/><line nr="543" mi="7" ci="0" mb="2" cb="0"/><line nr="544" mi="3" ci="0" mb="0" cb="0"/><line nr="545" mi="3" ci="0" mb="0" cb="0"/><line nr="550" mi="3" ci="0" mb="0" cb="0"/><line nr="551" mi="7" ci="0" mb="2" cb="0"/><line nr="552" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="7" ci="0" mb="2" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="7" ci="0" mb="2" cb="0"/><line nr="562" mi="3" ci="0" mb="0" cb="0"/><line nr="563" mi="7" ci="0" mb="2" cb="0"/><line nr="564" mi="3" ci="0" mb="0" cb="0"/><line nr="565" mi="7" ci="0" mb="2" cb="0"/><line nr="566" mi="3" ci="0" mb="0" cb="0"/><line nr="567" mi="7" ci="0" mb="2" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="569" mi="3" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="7" ci="0" mb="2" cb="0"/><line nr="576" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="7" ci="0" mb="2" cb="0"/><line nr="578" mi="3" ci="0" mb="0" cb="0"/><line nr="579" mi="7" ci="0" mb="2" cb="0"/><line nr="580" mi="3" ci="0" mb="0" cb="0"/><line nr="581" mi="7" ci="0" mb="2" cb="0"/><line nr="582" mi="3" ci="0" mb="0" cb="0"/><line nr="583" mi="3" ci="0" mb="0" cb="0"/><line nr="588" mi="3" ci="0" mb="0" cb="0"/><line nr="589" mi="7" ci="0" mb="2" cb="0"/><line nr="590" mi="3" ci="0" mb="0" cb="0"/><line nr="591" mi="7" ci="0" mb="2" cb="0"/><line nr="592" mi="3" ci="0" mb="0" cb="0"/><line nr="593" mi="7" ci="0" mb="2" cb="0"/><line nr="594" mi="3" ci="0" mb="0" cb="0"/><line nr="595" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="3" ci="0" mb="0" cb="0"/><line nr="601" mi="7" ci="0" mb="2" cb="0"/><line nr="602" mi="3" ci="0" mb="0" cb="0"/><line nr="603" mi="7" ci="0" mb="2" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="3" ci="0" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="7" ci="0" mb="2" cb="0"/><line nr="612" mi="3" ci="0" mb="0" cb="0"/><line nr="613" mi="7" ci="0" mb="2" cb="0"/><line nr="614" mi="3" ci="0" mb="0" cb="0"/><line nr="615" mi="7" ci="0" mb="2" cb="0"/><line nr="616" mi="3" ci="0" mb="0" cb="0"/><line nr="617" mi="7" ci="0" mb="2" cb="0"/><line nr="618" mi="3" ci="0" mb="0" cb="0"/><line nr="619" mi="3" ci="0" mb="0" cb="0"/><line nr="624" mi="3" ci="0" mb="0" cb="0"/><line nr="625" mi="7" ci="0" mb="2" cb="0"/><line nr="626" mi="3" ci="0" mb="0" cb="0"/><line nr="627" mi="7" ci="0" mb="2" cb="0"/><line nr="628" mi="3" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="635" mi="0" ci="7" mb="1" cb="1"/><line nr="636" mi="3" ci="0" mb="0" cb="0"/><line nr="637" mi="0" ci="7" mb="1" cb="1"/><line nr="638" mi="3" ci="0" mb="0" cb="0"/><line nr="639" mi="0" ci="7" mb="1" cb="1"/><line nr="640" mi="3" ci="0" mb="0" cb="0"/><line nr="641" mi="0" ci="7" mb="1" cb="1"/><line nr="642" mi="3" ci="0" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="648" mi="3" ci="0" mb="0" cb="0"/><line nr="649" mi="7" ci="0" mb="2" cb="0"/><line nr="650" mi="3" ci="0" mb="0" cb="0"/><line nr="651" mi="7" ci="0" mb="2" cb="0"/><line nr="652" mi="3" ci="0" mb="0" cb="0"/><line nr="653" mi="7" ci="0" mb="2" cb="0"/><line nr="654" mi="3" ci="0" mb="0" cb="0"/><line nr="655" mi="3" ci="0" mb="0" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="7" mb="0" cb="2"/><line nr="662" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="7" mb="1" cb="1"/><line nr="664" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="7" mb="0" cb="2"/><line nr="672" mi="0" ci="3" mb="0" cb="0"/><line nr="673" mi="0" ci="7" mb="1" cb="1"/><line nr="674" mi="3" ci="0" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="0" cb="0"/><line nr="681" mi="7" ci="0" mb="2" cb="0"/><line nr="682" mi="3" ci="0" mb="0" cb="0"/><line nr="683" mi="7" ci="0" mb="2" cb="0"/><line nr="684" mi="3" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="690" mi="3" ci="0" mb="0" cb="0"/><line nr="691" mi="7" ci="0" mb="2" cb="0"/><line nr="692" mi="3" ci="0" mb="0" cb="0"/><line nr="693" mi="7" ci="0" mb="2" cb="0"/><line nr="694" mi="3" ci="0" mb="0" cb="0"/><line nr="695" mi="3" ci="0" mb="0" cb="0"/><line nr="700" mi="3" ci="0" mb="0" cb="0"/><line nr="701" mi="7" ci="0" mb="2" cb="0"/><line nr="702" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="7" ci="0" mb="2" cb="0"/><line nr="704" mi="3" ci="0" mb="0" cb="0"/><line nr="705" mi="3" ci="0" mb="0" cb="0"/><line nr="710" mi="3" ci="0" mb="0" cb="0"/><line nr="711" mi="9" ci="0" mb="2" cb="0"/><line nr="712" mi="3" ci="0" mb="0" cb="0"/><line nr="713" mi="7" ci="0" mb="2" cb="0"/><line nr="714" mi="3" ci="0" mb="0" cb="0"/><line nr="715" mi="3" ci="0" mb="0" cb="0"/><line nr="720" mi="3" ci="0" mb="0" cb="0"/><line nr="721" mi="7" ci="0" mb="2" cb="0"/><line nr="722" mi="3" ci="0" mb="0" cb="0"/><line nr="723" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="0" ci="3" mb="0" cb="0"/><line nr="729" mi="0" ci="7" mb="0" cb="2"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="731" mi="0" ci="7" mb="0" cb="2"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="733" mi="0" ci="7" mb="1" cb="1"/><line nr="734" mi="3" ci="0" mb="0" cb="0"/><line nr="735" mi="0" ci="7" mb="1" cb="1"/><line nr="736" mi="3" ci="0" mb="0" cb="0"/><line nr="737" mi="0" ci="7" mb="1" cb="1"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="7" mb="0" cb="2"/><line nr="746" mi="0" ci="3" mb="0" cb="0"/><line nr="747" mi="0" ci="7" mb="1" cb="1"/><line nr="748" mi="3" ci="0" mb="0" cb="0"/><line nr="749" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="3" mb="0" cb="0"/><line nr="755" mi="0" ci="7" mb="1" cb="1"/><line nr="756" mi="3" ci="0" mb="0" cb="0"/><line nr="757" mi="0" ci="7" mb="1" cb="1"/><line nr="758" mi="3" ci="0" mb="0" cb="0"/><line nr="759" mi="0" ci="7" mb="1" cb="1"/><line nr="760" mi="3" ci="0" mb="0" cb="0"/><line nr="761" mi="0" ci="7" mb="1" cb="1"/><line nr="762" mi="3" ci="0" mb="0" cb="0"/><line nr="763" mi="0" ci="7" mb="1" cb="1"/><line nr="764" mi="3" ci="0" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="1" cb="1"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="767" mi="0" ci="3" mb="0" cb="0"/><line nr="772" mi="0" ci="3" mb="0" cb="0"/><line nr="773" mi="0" ci="7" mb="0" cb="2"/><line nr="774" mi="0" ci="3" mb="0" cb="0"/><line nr="775" mi="0" ci="7" mb="1" cb="1"/><line nr="776" mi="3" ci="0" mb="0" cb="0"/><line nr="777" mi="0" ci="7" mb="1" cb="1"/><line nr="778" mi="3" ci="0" mb="0" cb="0"/><line nr="779" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="785" mi="0" ci="7" mb="0" cb="2"/><line nr="786" mi="0" ci="3" mb="0" cb="0"/><line nr="787" mi="0" ci="7" mb="1" cb="1"/><line nr="788" mi="3" ci="0" mb="0" cb="0"/><line nr="789" mi="0" ci="3" mb="0" cb="0"/><line nr="794" mi="3" ci="0" mb="0" cb="0"/><line nr="795" mi="7" ci="0" mb="2" cb="0"/><line nr="796" mi="3" ci="0" mb="0" cb="0"/><line nr="797" mi="7" ci="0" mb="2" cb="0"/><line nr="798" mi="3" ci="0" mb="0" cb="0"/><line nr="799" mi="3" ci="0" mb="0" cb="0"/><line nr="804" mi="3" ci="0" mb="0" cb="0"/><line nr="805" mi="7" ci="0" mb="2" cb="0"/><line nr="806" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="7" ci="0" mb="2" cb="0"/><line nr="808" mi="3" ci="0" mb="0" cb="0"/><line nr="809" mi="3" ci="0" mb="0" cb="0"/><line nr="814" mi="3" ci="0" mb="0" cb="0"/><line nr="815" mi="7" ci="0" mb="2" cb="0"/><line nr="816" mi="3" ci="0" mb="0" cb="0"/><line nr="817" mi="7" ci="0" mb="2" cb="0"/><line nr="818" mi="3" ci="0" mb="0" cb="0"/><line nr="819" mi="7" ci="0" mb="2" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="3" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="3" mb="0" cb="0"/><line nr="827" mi="0" ci="7" mb="1" cb="1"/><line nr="828" mi="3" ci="0" mb="0" cb="0"/><line nr="829" mi="0" ci="7" mb="1" cb="1"/><line nr="830" mi="3" ci="0" mb="0" cb="0"/><line nr="831" mi="0" ci="7" mb="1" cb="1"/><line nr="832" mi="3" ci="0" mb="0" cb="0"/><line nr="833" mi="0" ci="7" mb="1" cb="1"/><line nr="834" mi="3" ci="0" mb="0" cb="0"/><line nr="835" mi="0" ci="3" mb="0" cb="0"/><line nr="840" mi="0" ci="3" mb="0" cb="0"/><line nr="841" mi="0" ci="7" mb="0" cb="2"/><line nr="842" mi="0" ci="3" mb="0" cb="0"/><line nr="843" mi="0" ci="7" mb="1" cb="1"/><line nr="844" mi="3" ci="0" mb="0" cb="0"/><line nr="845" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="3" mb="0" cb="0"/><line nr="851" mi="0" ci="7" mb="1" cb="1"/><line nr="852" mi="3" ci="0" mb="0" cb="0"/><line nr="853" mi="0" ci="7" mb="1" cb="1"/><line nr="854" mi="3" ci="0" mb="0" cb="0"/><line nr="855" mi="0" ci="7" mb="1" cb="1"/><line nr="856" mi="3" ci="0" mb="0" cb="0"/><line nr="857" mi="0" ci="3" mb="0" cb="0"/><line nr="862" mi="3" ci="0" mb="0" cb="0"/><line nr="863" mi="7" ci="0" mb="2" cb="0"/><line nr="864" mi="3" ci="0" mb="0" cb="0"/><line nr="865" mi="7" ci="0" mb="2" cb="0"/><line nr="866" mi="3" ci="0" mb="0" cb="0"/><line nr="867" mi="7" ci="0" mb="2" cb="0"/><line nr="868" mi="3" ci="0" mb="0" cb="0"/><line nr="869" mi="3" ci="0" mb="0" cb="0"/><line nr="874" mi="3" ci="0" mb="0" cb="0"/><line nr="875" mi="7" ci="0" mb="2" cb="0"/><line nr="876" mi="3" ci="0" mb="0" cb="0"/><line nr="877" mi="7" ci="0" mb="2" cb="0"/><line nr="878" mi="3" ci="0" mb="0" cb="0"/><line nr="879" mi="7" ci="0" mb="2" cb="0"/><line nr="880" mi="3" ci="0" mb="0" cb="0"/><line nr="881" mi="3" ci="0" mb="0" cb="0"/><line nr="886" mi="3" ci="0" mb="0" cb="0"/><line nr="887" mi="7" ci="0" mb="2" cb="0"/><line nr="888" mi="3" ci="0" mb="0" cb="0"/><line nr="889" mi="7" ci="0" mb="2" cb="0"/><line nr="890" mi="3" ci="0" mb="0" cb="0"/><line nr="891" mi="9" ci="0" mb="2" cb="0"/><line nr="892" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="7" ci="0" mb="2" cb="0"/><line nr="894" mi="3" ci="0" mb="0" cb="0"/><line nr="895" mi="7" ci="0" mb="2" cb="0"/><line nr="896" mi="3" ci="0" mb="0" cb="0"/><line nr="897" mi="3" ci="0" mb="0" cb="0"/><line nr="902" mi="3" ci="0" mb="0" cb="0"/><line nr="903" mi="7" ci="0" mb="2" cb="0"/><line nr="904" mi="3" ci="0" mb="0" cb="0"/><line nr="905" mi="7" ci="0" mb="2" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="907" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="7" ci="0" mb="2" cb="0"/><line nr="914" mi="3" ci="0" mb="0" cb="0"/><line nr="915" mi="7" ci="0" mb="2" cb="0"/><line nr="916" mi="3" ci="0" mb="0" cb="0"/><line nr="917" mi="7" ci="0" mb="2" cb="0"/><line nr="918" mi="3" ci="0" mb="0" cb="0"/><line nr="919" mi="3" ci="0" mb="0" cb="0"/><line nr="924" mi="0" ci="3" mb="0" cb="0"/><line nr="925" mi="0" ci="7" mb="0" cb="2"/><line nr="926" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="7" mb="1" cb="1"/><line nr="928" mi="3" ci="0" mb="0" cb="0"/><line nr="929" mi="0" ci="3" mb="0" cb="0"/><line nr="934" mi="3" ci="0" mb="0" cb="0"/><line nr="935" mi="7" ci="0" mb="2" cb="0"/><line nr="936" mi="3" ci="0" mb="0" cb="0"/><line nr="937" mi="7" ci="0" mb="2" cb="0"/><line nr="938" mi="3" ci="0" mb="0" cb="0"/><line nr="939" mi="7" ci="0" mb="2" cb="0"/><line nr="940" mi="3" ci="0" mb="0" cb="0"/><line nr="941" mi="3" ci="0" mb="0" cb="0"/><line nr="946" mi="3" ci="0" mb="0" cb="0"/><line nr="947" mi="7" ci="0" mb="2" cb="0"/><line nr="948" mi="3" ci="0" mb="0" cb="0"/><line nr="949" mi="3" ci="0" mb="0" cb="0"/><line nr="954" mi="0" ci="3" mb="0" cb="0"/><line nr="955" mi="0" ci="7" mb="1" cb="1"/><line nr="956" mi="3" ci="0" mb="0" cb="0"/><line nr="957" mi="0" ci="7" mb="1" cb="1"/><line nr="958" mi="3" ci="0" mb="0" cb="0"/><line nr="959" mi="0" ci="3" mb="0" cb="0"/><line nr="964" mi="3" ci="0" mb="0" cb="0"/><line nr="965" mi="7" ci="0" mb="2" cb="0"/><line nr="966" mi="3" ci="0" mb="0" cb="0"/><line nr="967" mi="7" ci="0" mb="2" cb="0"/><line nr="968" mi="3" ci="0" mb="0" cb="0"/><line nr="969" mi="7" ci="0" mb="2" cb="0"/><line nr="970" mi="3" ci="0" mb="0" cb="0"/><line nr="971" mi="3" ci="0" mb="0" cb="0"/><line nr="976" mi="3" ci="0" mb="0" cb="0"/><line nr="977" mi="7" ci="0" mb="2" cb="0"/><line nr="978" mi="3" ci="0" mb="0" cb="0"/><line nr="979" mi="7" ci="0" mb="2" cb="0"/><line nr="980" mi="3" ci="0" mb="0" cb="0"/><line nr="981" mi="7" ci="0" mb="2" cb="0"/><line nr="982" mi="3" ci="0" mb="0" cb="0"/><line nr="983" mi="7" ci="0" mb="2" cb="0"/><line nr="984" mi="3" ci="0" mb="0" cb="0"/><line nr="985" mi="3" ci="0" mb="0" cb="0"/><line nr="990" mi="3" ci="0" mb="0" cb="0"/><line nr="991" mi="7" ci="0" mb="2" cb="0"/><line nr="992" mi="3" ci="0" mb="0" cb="0"/><line nr="993" mi="7" ci="0" mb="2" cb="0"/><line nr="994" mi="3" ci="0" mb="0" cb="0"/><line nr="995" mi="3" ci="0" mb="0" cb="0"/><line nr="1000" mi="3" ci="0" mb="0" cb="0"/><line nr="1001" mi="7" ci="0" mb="2" cb="0"/><line nr="1002" mi="3" ci="0" mb="0" cb="0"/><line nr="1003" mi="7" ci="0" mb="2" cb="0"/><line nr="1004" mi="3" ci="0" mb="0" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1010" mi="3" ci="0" mb="0" cb="0"/><line nr="1011" mi="7" ci="0" mb="2" cb="0"/><line nr="1012" mi="3" ci="0" mb="0" cb="0"/><line nr="1013" mi="7" ci="0" mb="2" cb="0"/><line nr="1014" mi="3" ci="0" mb="0" cb="0"/><line nr="1015" mi="7" ci="0" mb="2" cb="0"/><line nr="1016" mi="3" ci="0" mb="0" cb="0"/><line nr="1017" mi="7" ci="0" mb="2" cb="0"/><line nr="1018" mi="3" ci="0" mb="0" cb="0"/><line nr="1019" mi="3" ci="0" mb="0" cb="0"/><line nr="1024" mi="3" ci="0" mb="0" cb="0"/><line nr="1025" mi="7" ci="0" mb="2" cb="0"/><line nr="1026" mi="3" ci="0" mb="0" cb="0"/><line nr="1027" mi="7" ci="0" mb="2" cb="0"/><line nr="1028" mi="3" ci="0" mb="0" cb="0"/><line nr="1029" mi="7" ci="0" mb="2" cb="0"/><line nr="1030" mi="3" ci="0" mb="0" cb="0"/><line nr="1031" mi="3" ci="0" mb="0" cb="0"/><line nr="1036" mi="3" ci="0" mb="0" cb="0"/><line nr="1037" mi="7" ci="0" mb="2" cb="0"/><line nr="1038" mi="3" ci="0" mb="0" cb="0"/><line nr="1039" mi="7" ci="0" mb="2" cb="0"/><line nr="1040" mi="3" ci="0" mb="0" cb="0"/><line nr="1041" mi="3" ci="0" mb="0" cb="0"/><line nr="1046" mi="3" ci="0" mb="0" cb="0"/><line nr="1047" mi="7" ci="0" mb="2" cb="0"/><line nr="1048" mi="3" ci="0" mb="0" cb="0"/><line nr="1049" mi="7" ci="0" mb="2" cb="0"/><line nr="1050" mi="3" ci="0" mb="0" cb="0"/><line nr="1051" mi="7" ci="0" mb="2" cb="0"/><line nr="1052" mi="3" ci="0" mb="0" cb="0"/><line nr="1053" mi="3" ci="0" mb="0" cb="0"/><line nr="1058" mi="3" ci="0" mb="0" cb="0"/><line nr="1059" mi="7" ci="0" mb="2" cb="0"/><line nr="1060" mi="3" ci="0" mb="0" cb="0"/><line nr="1061" mi="7" ci="0" mb="2" cb="0"/><line nr="1062" mi="3" ci="0" mb="0" cb="0"/><line nr="1063" mi="7" ci="0" mb="2" cb="0"/><line nr="1064" mi="3" ci="0" mb="0" cb="0"/><line nr="1065" mi="7" ci="0" mb="2" cb="0"/><line nr="1066" mi="3" ci="0" mb="0" cb="0"/><line nr="1067" mi="3" ci="0" mb="0" cb="0"/><line nr="1072" mi="3" ci="0" mb="0" cb="0"/><line nr="1073" mi="7" ci="0" mb="2" cb="0"/><line nr="1074" mi="3" ci="0" mb="0" cb="0"/><line nr="1075" mi="7" ci="0" mb="2" cb="0"/><line nr="1076" mi="3" ci="0" mb="0" cb="0"/><line nr="1077" mi="7" ci="0" mb="2" cb="0"/><line nr="1078" mi="3" ci="0" mb="0" cb="0"/><line nr="1079" mi="7" ci="0" mb="2" cb="0"/><line nr="1080" mi="3" ci="0" mb="0" cb="0"/><line nr="1081" mi="7" ci="0" mb="2" cb="0"/><line nr="1082" mi="3" ci="0" mb="0" cb="0"/><line nr="1083" mi="3" ci="0" mb="0" cb="0"/><line nr="1088" mi="3" ci="0" mb="0" cb="0"/><line nr="1089" mi="7" ci="0" mb="2" cb="0"/><line nr="1090" mi="3" ci="0" mb="0" cb="0"/><line nr="1091" mi="7" ci="0" mb="2" cb="0"/><line nr="1092" mi="3" ci="0" mb="0" cb="0"/><line nr="1093" mi="3" ci="0" mb="0" cb="0"/><line nr="1098" mi="3" ci="0" mb="0" cb="0"/><line nr="1099" mi="7" ci="0" mb="2" cb="0"/><line nr="1100" mi="3" ci="0" mb="0" cb="0"/><line nr="1101" mi="7" ci="0" mb="2" cb="0"/><line nr="1102" mi="3" ci="0" mb="0" cb="0"/><line nr="1103" mi="7" ci="0" mb="2" cb="0"/><line nr="1104" mi="3" ci="0" mb="0" cb="0"/><line nr="1105" mi="3" ci="0" mb="0" cb="0"/><line nr="1110" mi="3" ci="0" mb="0" cb="0"/><line nr="1111" mi="7" ci="0" mb="2" cb="0"/><line nr="1112" mi="3" ci="0" mb="0" cb="0"/><line nr="1113" mi="7" ci="0" mb="2" cb="0"/><line nr="1114" mi="3" ci="0" mb="0" cb="0"/><line nr="1115" mi="7" ci="0" mb="2" cb="0"/><line nr="1116" mi="3" ci="0" mb="0" cb="0"/><line nr="1117" mi="7" ci="0" mb="2" cb="0"/><line nr="1118" mi="3" ci="0" mb="0" cb="0"/><line nr="1119" mi="7" ci="0" mb="2" cb="0"/><line nr="1120" mi="3" ci="0" mb="0" cb="0"/><line nr="1121" mi="3" ci="0" mb="0" cb="0"/><line nr="1126" mi="3" ci="0" mb="0" cb="0"/><line nr="1127" mi="7" ci="0" mb="2" cb="0"/><line nr="1128" mi="3" ci="0" mb="0" cb="0"/><line nr="1129" mi="7" ci="0" mb="2" cb="0"/><line nr="1130" mi="3" ci="0" mb="0" cb="0"/><line nr="1131" mi="7" ci="0" mb="2" cb="0"/><line nr="1132" mi="3" ci="0" mb="0" cb="0"/><line nr="1133" mi="3" ci="0" mb="0" cb="0"/><line nr="1138" mi="0" ci="3" mb="0" cb="0"/><line nr="1139" mi="0" ci="7" mb="1" cb="1"/><line nr="1140" mi="3" ci="0" mb="0" cb="0"/><line nr="1141" mi="0" ci="9" mb="1" cb="1"/><line nr="1142" mi="3" ci="0" mb="0" cb="0"/><line nr="1143" mi="0" ci="7" mb="1" cb="1"/><line nr="1144" mi="3" ci="0" mb="0" cb="0"/><line nr="1145" mi="0" ci="7" mb="1" cb="1"/><line nr="1146" mi="3" ci="0" mb="0" cb="0"/><line nr="1147" mi="0" ci="3" mb="0" cb="0"/><line nr="1152" mi="3" ci="0" mb="0" cb="0"/><line nr="1153" mi="7" ci="0" mb="2" cb="0"/><line nr="1154" mi="3" ci="0" mb="0" cb="0"/><line nr="1155" mi="7" ci="0" mb="2" cb="0"/><line nr="1156" mi="3" ci="0" mb="0" cb="0"/><line nr="1157" mi="7" ci="0" mb="2" cb="0"/><line nr="1158" mi="3" ci="0" mb="0" cb="0"/><line nr="1159" mi="7" ci="0" mb="2" cb="0"/><line nr="1160" mi="3" ci="0" mb="0" cb="0"/><line nr="1161" mi="3" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="0" cb="0"/><line nr="1167" mi="7" ci="0" mb="2" cb="0"/><line nr="1168" mi="3" ci="0" mb="0" cb="0"/><line nr="1169" mi="7" ci="0" mb="2" cb="0"/><line nr="1170" mi="3" ci="0" mb="0" cb="0"/><line nr="1171" mi="3" ci="0" mb="0" cb="0"/><line nr="1176" mi="3" ci="0" mb="0" cb="0"/><line nr="1177" mi="9" ci="0" mb="2" cb="0"/><line nr="1178" mi="3" ci="0" mb="0" cb="0"/><line nr="1179" mi="9" ci="0" mb="2" cb="0"/><line nr="1180" mi="3" ci="0" mb="0" cb="0"/><line nr="1181" mi="7" ci="0" mb="2" cb="0"/><line nr="1182" mi="3" ci="0" mb="0" cb="0"/><line nr="1183" mi="7" ci="0" mb="2" cb="0"/><line nr="1184" mi="3" ci="0" mb="0" cb="0"/><line nr="1185" mi="3" ci="0" mb="0" cb="0"/><line nr="1190" mi="7" ci="0" mb="0" cb="0"/><line nr="1195" mi="3" ci="0" mb="0" cb="0"/><line nr="1196" mi="7" ci="0" mb="2" cb="0"/><line nr="1197" mi="3" ci="0" mb="0" cb="0"/><line nr="1198" mi="7" ci="0" mb="2" cb="0"/><line nr="1199" mi="3" ci="0" mb="0" cb="0"/><line nr="1200" mi="9" ci="0" mb="2" cb="0"/><line nr="1201" mi="3" ci="0" mb="0" cb="0"/><line nr="1202" mi="7" ci="0" mb="2" cb="0"/><line nr="1203" mi="3" ci="0" mb="0" cb="0"/><line nr="1204" mi="7" ci="0" mb="2" cb="0"/><line nr="1205" mi="3" ci="0" mb="0" cb="0"/><line nr="1206" mi="3" ci="0" mb="0" cb="0"/><line nr="1211" mi="3" ci="0" mb="0" cb="0"/><line nr="1212" mi="7" ci="0" mb="2" cb="0"/><line nr="1213" mi="3" ci="0" mb="0" cb="0"/><line nr="1214" mi="7" ci="0" mb="2" cb="0"/><line nr="1215" mi="3" ci="0" mb="0" cb="0"/><line nr="1216" mi="7" ci="0" mb="2" cb="0"/><line nr="1217" mi="3" ci="0" mb="0" cb="0"/><line nr="1218" mi="3" ci="0" mb="0" cb="0"/><line nr="1223" mi="3" ci="0" mb="0" cb="0"/><line nr="1224" mi="7" ci="0" mb="2" cb="0"/><line nr="1225" mi="3" ci="0" mb="0" cb="0"/><line nr="1226" mi="7" ci="0" mb="2" cb="0"/><line nr="1227" mi="3" ci="0" mb="0" cb="0"/><line nr="1228" mi="7" ci="0" mb="2" cb="0"/><line nr="1229" mi="3" ci="0" mb="0" cb="0"/><line nr="1230" mi="3" ci="0" mb="0" cb="0"/><line nr="1235" mi="3" ci="0" mb="0" cb="0"/><line nr="1236" mi="7" ci="0" mb="2" cb="0"/><line nr="1237" mi="3" ci="0" mb="0" cb="0"/><line nr="1238" mi="7" ci="0" mb="2" cb="0"/><line nr="1239" mi="3" ci="0" mb="0" cb="0"/><line nr="1240" mi="7" ci="0" mb="2" cb="0"/><line nr="1241" mi="3" ci="0" mb="0" cb="0"/><line nr="1242" mi="3" ci="0" mb="0" cb="0"/><line nr="1247" mi="3" ci="0" mb="0" cb="0"/><line nr="1248" mi="7" ci="0" mb="2" cb="0"/><line nr="1249" mi="3" ci="0" mb="0" cb="0"/><line nr="1250" mi="7" ci="0" mb="2" cb="0"/><line nr="1251" mi="3" ci="0" mb="0" cb="0"/><line nr="1252" mi="3" ci="0" mb="0" cb="0"/><line nr="1257" mi="3" ci="0" mb="0" cb="0"/><line nr="1258" mi="7" ci="0" mb="2" cb="0"/><line nr="1259" mi="3" ci="0" mb="0" cb="0"/><line nr="1260" mi="7" ci="0" mb="2" cb="0"/><line nr="1261" mi="3" ci="0" mb="0" cb="0"/><line nr="1262" mi="7" ci="0" mb="2" cb="0"/><line nr="1263" mi="3" ci="0" mb="0" cb="0"/><line nr="1264" mi="3" ci="0" mb="0" cb="0"/><line nr="1269" mi="3" ci="0" mb="0" cb="0"/><line nr="1270" mi="7" ci="0" mb="2" cb="0"/><line nr="1271" mi="3" ci="0" mb="0" cb="0"/><line nr="1272" mi="3" ci="0" mb="0" cb="0"/><line nr="1277" mi="3" ci="0" mb="0" cb="0"/><line nr="1278" mi="7" ci="0" mb="2" cb="0"/><line nr="1279" mi="3" ci="0" mb="0" cb="0"/><line nr="1280" mi="7" ci="0" mb="2" cb="0"/><line nr="1281" mi="3" ci="0" mb="0" cb="0"/><line nr="1282" mi="7" ci="0" mb="2" cb="0"/><line nr="1283" mi="3" ci="0" mb="0" cb="0"/><line nr="1284" mi="7" ci="0" mb="2" cb="0"/><line nr="1285" mi="3" ci="0" mb="0" cb="0"/><line nr="1286" mi="3" ci="0" mb="0" cb="0"/><line nr="1291" mi="3" ci="0" mb="0" cb="0"/><line nr="1292" mi="7" ci="0" mb="2" cb="0"/><line nr="1293" mi="3" ci="0" mb="0" cb="0"/><line nr="1294" mi="7" ci="0" mb="2" cb="0"/><line nr="1295" mi="3" ci="0" mb="0" cb="0"/><line nr="1296" mi="3" ci="0" mb="0" cb="0"/><line nr="1301" mi="0" ci="3" mb="0" cb="0"/><line nr="1302" mi="0" ci="7" mb="0" cb="2"/><line nr="1303" mi="0" ci="3" mb="0" cb="0"/><line nr="1304" mi="0" ci="7" mb="1" cb="1"/><line nr="1305" mi="3" ci="0" mb="0" cb="0"/><line nr="1306" mi="0" ci="3" mb="0" cb="0"/><line nr="1311" mi="3" ci="0" mb="0" cb="0"/><line nr="1312" mi="7" ci="0" mb="2" cb="0"/><line nr="1313" mi="3" ci="0" mb="0" cb="0"/><line nr="1314" mi="7" ci="0" mb="2" cb="0"/><line nr="1315" mi="3" ci="0" mb="0" cb="0"/><line nr="1316" mi="7" ci="0" mb="2" cb="0"/><line nr="1317" mi="3" ci="0" mb="0" cb="0"/><line nr="1318" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2706" covered="1183"/><counter type="BRANCH" missed="504" covered="164"/><counter type="LINE" missed="624" covered="230"/><counter type="COMPLEXITY" missed="361" covered="76"/><counter type="METHOD" missed="63" covered="40"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectIdentityHashCodeVisitor.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="378" mi="4" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="4" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="379" covered="12"/><counter type="LINE" missed="94" covered="3"/><counter type="COMPLEXITY" missed="94" covered="3"/><counter type="METHOD" missed="94" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VoidVisitorAdapter.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="5" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="5" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="5" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="5" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="5" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="5" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><line nr="121" mi="5" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="5" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="5" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="5" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="5" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="11" mb="0" cb="0"/><line nr="165" mi="0" ci="17" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="11" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="176" mi="0" ci="11" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="5" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="5" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="11" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="0"/><line nr="196" mi="0" ci="11" mb="0" cb="0"/><line nr="197" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="5" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="5" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="5" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="11" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="235" mi="0" ci="11" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="11" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="0"/><line nr="242" mi="0" ci="11" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="11" mb="0" cb="0"/><line nr="246" mi="0" ci="11" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="11" mb="0" cb="0"/><line nr="252" mi="5" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="17" mb="0" cb="0"/><line nr="254" mi="5" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="5" ci="12" mb="0" cb="0"/><line nr="268" mi="5" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="11" mb="0" cb="0"/><line nr="274" mi="0" ci="11" mb="0" cb="0"/><line nr="275" mi="0" ci="11" mb="0" cb="0"/><line nr="276" mi="0" ci="11" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="11" mb="0" cb="0"/><line nr="291" mi="0" ci="11" mb="0" cb="0"/><line nr="292" mi="0" ci="11" mb="0" cb="0"/><line nr="293" mi="0" ci="11" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="11" mb="0" cb="0"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="5" ci="6" mb="0" cb="0"/><line nr="308" mi="5" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="5" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="11" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="5" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="332" mi="5" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="5" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="5" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="5" ci="6" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="5" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="11" mb="0" cb="0"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="11" mb="0" cb="0"/><line nr="363" mi="0" ci="17" mb="0" cb="0"/><line nr="364" mi="0" ci="11" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="11" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="0" ci="11" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="11" mb="0" cb="0"/><line nr="374" mi="0" ci="11" mb="0" cb="0"/><line nr="375" mi="0" ci="11" mb="0" cb="0"/><line nr="376" mi="0" ci="11" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="0"/><line nr="378" mi="0" ci="11" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="11" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="11" mb="0" cb="0"/><line nr="390" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="5" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="11" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="17" mb="0" cb="0"/><line nr="402" mi="0" ci="11" mb="0" cb="0"/><line nr="403" mi="0" ci="11" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="17" mb="0" cb="0"/><line nr="406" mi="5" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="11" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="11" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="11" mb="0" cb="0"/><line nr="419" mi="0" ci="11" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="11" mb="0" cb="0"/><line nr="423" mi="0" ci="11" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="5" ci="6" mb="0" cb="0"/><line nr="429" mi="0" ci="11" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="11" mb="0" cb="0"/><line nr="435" mi="5" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="440" mi="0" ci="11" mb="0" cb="0"/><line nr="441" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="446" mi="0" ci="11" mb="0" cb="0"/><line nr="447" mi="5" ci="6" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="11" mb="0" cb="0"/><line nr="453" mi="0" ci="11" mb="0" cb="0"/><line nr="454" mi="5" ci="6" mb="0" cb="0"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="11" mb="0" cb="0"/><line nr="460" mi="5" ci="6" mb="0" cb="0"/><line nr="461" mi="5" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="1" mb="0" cb="0"/><line nr="466" mi="0" ci="11" mb="0" cb="0"/><line nr="467" mi="5" ci="6" mb="0" cb="0"/><line nr="468" mi="5" ci="6" mb="0" cb="0"/><line nr="469" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="11" mb="0" cb="0"/><line nr="474" mi="0" ci="11" mb="0" cb="0"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="5" ci="6" mb="0" cb="0"/><line nr="482" mi="0" ci="1" mb="0" cb="0"/><line nr="486" mi="0" ci="11" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="11" mb="0" cb="0"/><line nr="492" mi="5" ci="6" mb="0" cb="0"/><line nr="493" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="11" mb="0" cb="0"/><line nr="498" mi="0" ci="11" mb="0" cb="0"/><line nr="499" mi="0" ci="11" mb="0" cb="0"/><line nr="500" mi="0" ci="1" mb="0" cb="0"/><line nr="504" mi="0" ci="11" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="506" mi="5" ci="6" mb="0" cb="0"/><line nr="507" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="5" mb="0" cb="0"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="5" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="11" mb="0" cb="0"/><line nr="519" mi="5" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="5" mb="0" cb="0"/><line nr="525" mi="0" ci="11" mb="0" cb="0"/><line nr="526" mi="0" ci="1" mb="0" cb="0"/><line nr="530" mi="0" ci="11" mb="0" cb="0"/><line nr="531" mi="0" ci="11" mb="0" cb="0"/><line nr="532" mi="0" ci="11" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="11" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="11" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="5" mb="0" cb="0"/><line nr="546" mi="0" ci="11" mb="0" cb="0"/><line nr="547" mi="0" ci="11" mb="0" cb="0"/><line nr="548" mi="5" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="11" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="5" ci="6" mb="0" cb="0"/><line nr="560" mi="5" ci="6" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="11" mb="0" cb="0"/><line nr="566" mi="0" ci="11" mb="0" cb="0"/><line nr="567" mi="0" ci="11" mb="0" cb="0"/><line nr="568" mi="0" ci="11" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="573" mi="0" ci="11" mb="0" cb="0"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="5" ci="6" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="5" ci="6" mb="0" cb="0"/><line nr="582" mi="5" ci="6" mb="0" cb="0"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="587" mi="0" ci="5" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="0" ci="11" mb="0" cb="0"/><line nr="590" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="11" mb="0" cb="0"/><line nr="595" mi="0" ci="11" mb="0" cb="0"/><line nr="596" mi="0" ci="11" mb="0" cb="0"/><line nr="597" mi="5" ci="6" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="602" mi="0" ci="5" mb="0" cb="0"/><line nr="603" mi="0" ci="11" mb="0" cb="0"/><line nr="604" mi="5" ci="6" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="17" mb="0" cb="0"/><line nr="611" mi="5" ci="6" mb="0" cb="0"/><line nr="612" mi="0" ci="1" mb="0" cb="0"/><line nr="616" mi="0" ci="5" mb="0" cb="0"/><line nr="617" mi="0" ci="11" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="622" mi="9" ci="0" mb="2" cb="0"/><line nr="623" mi="5" ci="0" mb="0" cb="0"/><line nr="624" mi="1" ci="0" mb="0" cb="0"/><line nr="625" mi="1" ci="0" mb="0" cb="0"/><line nr="629" mi="0" ci="5" mb="0" cb="0"/><line nr="630" mi="5" ci="6" mb="0" cb="0"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="11" mb="0" cb="0"/><line nr="635" mi="0" ci="11" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="5" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="11" mb="0" cb="0"/><line nr="642" mi="0" ci="5" mb="0" cb="0"/><line nr="643" mi="5" ci="6" mb="0" cb="0"/><line nr="644" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="11" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="5" ci="6" mb="0" cb="0"/><line nr="651" mi="0" ci="1" mb="0" cb="0"/><line nr="655" mi="0" ci="5" mb="0" cb="0"/><line nr="656" mi="0" ci="11" mb="0" cb="0"/><line nr="657" mi="5" ci="6" mb="0" cb="0"/><line nr="658" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="0" ci="5" mb="0" cb="0"/><line nr="663" mi="5" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="0" ci="11" mb="0" cb="0"/><line nr="669" mi="0" ci="5" mb="0" cb="0"/><line nr="670" mi="5" ci="6" mb="0" cb="0"/><line nr="671" mi="0" ci="1" mb="0" cb="0"/><line nr="675" mi="5" ci="6" mb="0" cb="0"/><line nr="676" mi="0" ci="1" mb="0" cb="0"/><line nr="680" mi="0" ci="11" mb="0" cb="0"/><line nr="681" mi="0" ci="5" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="0"/><line nr="683" mi="5" ci="6" mb="0" cb="0"/><line nr="684" mi="0" ci="1" mb="0" cb="0"/><line nr="688" mi="5" ci="6" mb="0" cb="0"/><line nr="689" mi="5" ci="6" mb="0" cb="0"/><line nr="690" mi="0" ci="1" mb="0" cb="0"/><line nr="694" mi="5" ci="6" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="0" ci="11" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="5" ci="6" mb="0" cb="0"/><line nr="702" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="346" covered="2462"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="380"/><counter type="COMPLEXITY" missed="68" covered="239"/><counter type="METHOD" missed="67" covered="239"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericVisitorWithDefaults.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="325" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="5" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="375" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="385" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="5" ci="0" mb="0" cb="0"/><line nr="400" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="425" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="5" ci="0" mb="0" cb="0"/><line nr="435" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="5" ci="0" mb="0" cb="0"/><line nr="445" mi="5" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="5" ci="0" mb="0" cb="0"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="465" mi="5" ci="0" mb="0" cb="0"/><line nr="470" mi="5" ci="0" mb="0" cb="0"/><line nr="475" mi="5" ci="0" mb="0" cb="0"/><line nr="480" mi="5" ci="0" mb="0" cb="0"/><line nr="485" mi="5" ci="0" mb="0" cb="0"/><line nr="490" mi="5" ci="0" mb="0" cb="0"/><line nr="495" mi="5" ci="0" mb="0" cb="0"/><line nr="500" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="5" ci="0" mb="0" cb="0"/><line nr="515" mi="5" ci="0" mb="0" cb="0"/><line nr="520" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="477" covered="0"/><counter type="LINE" missed="97" covered="0"/><counter type="COMPLEXITY" missed="97" covered="0"/><counter type="METHOD" missed="97" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="26876" covered="8398"/><counter type="BRANCH" missed="3156" covered="368"/><counter type="LINE" missed="4956" covered="1285"/><counter type="COMPLEXITY" missed="2868" covered="498"/><counter type="METHOD" missed="1177" covered="427"/><counter type="CLASS" missed="4" covered="10"/></package><package name="com/github/javaparser/ast/modules"><class name="com/github/javaparser/ast/modules/ModuleDirective" sourcefilename="ModuleDirective.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleDirective;" line="44"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleExportsStmt" desc="()Z" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleExportsStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="62"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleOpensStmt" desc="()Z" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleOpensStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleProvidesStmt" desc="()Z" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleProvidesStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="82"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleRequiresStmt" desc="()Z" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleRequiresStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="92"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleUsesStmt" desc="()Z" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleUsesStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="102"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleExportsStmt" desc="(Ljava/util/function/Consumer;)V" line="107"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleOpensStmt" desc="(Ljava/util/function/Consumer;)V" line="111"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleProvidesStmt" desc="(Ljava/util/function/Consumer;)V" line="115"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleRequiresStmt" desc="(Ljava/util/function/Consumer;)V" line="119"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleUsesStmt" desc="(Ljava/util/function/Consumer;)V" line="123"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleExportsStmt" desc="()Ljava/util/Optional;" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleOpensStmt" desc="()Ljava/util/Optional;" line="132"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleProvidesStmt" desc="()Ljava/util/Optional;" line="137"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleRequiresStmt" desc="()Ljava/util/Optional;" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleUsesStmt" desc="()Ljava/util/Optional;" line="147"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleExportsDirective" desc="()Z" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleExportsDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="157"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleExportsDirective" desc="()Ljava/util/Optional;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleExportsDirective" desc="(Ljava/util/function/Consumer;)V" line="167"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleOpensDirective" desc="()Z" line="171"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleOpensDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="176"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleOpensDirective" desc="()Ljava/util/Optional;" line="181"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleOpensDirective" desc="(Ljava/util/function/Consumer;)V" line="186"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleProvidesDirective" desc="()Z" line="190"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleProvidesDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleProvidesDirective" desc="()Ljava/util/Optional;" line="200"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleProvidesDirective" desc="(Ljava/util/function/Consumer;)V" line="205"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleRequiresDirective" desc="()Z" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleRequiresDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="214"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleRequiresDirective" desc="()Ljava/util/Optional;" line="219"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleRequiresDirective" desc="(Ljava/util/function/Consumer;)V" line="224"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleUsesDirective" desc="()Z" line="228"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleUsesDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="233"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleUsesDirective" desc="()Ljava/util/Optional;" line="238"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleUsesDirective" desc="(Ljava/util/function/Consumer;)V" line="243"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleDirectiveMetaModel;" line="248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="201" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="50" covered="3"/><counter type="COMPLEXITY" missed="47" covered="1"/><counter type="METHOD" missed="45" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleDeclaration" sourcefilename="ModuleDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Z)V" line="39"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;ZLcom/github/javaparser/ast/NodeList;)V" line="44"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;ZLcom/github/javaparser/ast/NodeList;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="79"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="98"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="113"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOpen" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOpen" desc="(Z)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="137"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectives" desc="()Lcom/github/javaparser/ast/NodeList;" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirectives" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="152"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="167"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleDeclarationMetaModel;" line="173"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="179"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addDirective" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="204"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addDirective" desc="(Lcom/github/javaparser/ast/modules/ModuleDirective;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="208"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="176" covered="156"/><counter type="BRANCH" missed="28" covered="8"/><counter type="LINE" missed="37" covered="45"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleExportsDirective" sourcefilename="ModuleExportsDirective.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="65"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="83"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModuleNames" desc="()Lcom/github/javaparser/ast/NodeList;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModuleNames" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="102"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="117"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="123"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleExportsStmt" desc="()Z" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleExportsStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="147"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifModuleExportsStmt" desc="(Ljava/util/function/Consumer;)V" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleExportsStmt" desc="()Ljava/util/Optional;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addModuleName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="162"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isModuleExportsDirective" desc="()Z" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleExportsDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleExportsDirective;" line="175"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleExportsDirective" desc="()Ljava/util/Optional;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleExportsDirective" desc="(Ljava/util/function/Consumer;)V" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleExportsDirectiveMetaModel;" line="192"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="122" covered="100"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="33" covered="30"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="12" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleOpensDirective" sourcefilename="ModuleOpensDirective.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="64"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="82"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModuleNames" desc="()Lcom/github/javaparser/ast/NodeList;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModuleNames" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="101"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="116"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="122"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleOpensStmt" desc="()Z" line="140"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleOpensStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="146"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifModuleOpensStmt" desc="(Ljava/util/function/Consumer;)V" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleOpensStmt" desc="()Ljava/util/Optional;" line="157"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleOpensDirective" desc="()Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleOpensDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleOpensDirective;" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleOpensDirective" desc="()Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleOpensDirective" desc="(Ljava/util/function/Consumer;)V" line="180"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleOpensDirectiveMetaModel;" line="186"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="24" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleRequiresDirective" sourcefilename="ModuleRequiresDirective.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;)V" line="38"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="71"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="90"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTransitive" desc="()Z" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTransitive" desc="(Z)Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="113"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="127"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="133"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleRequiresStmt" desc="()Z" line="151"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleRequiresStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="157"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifModuleRequiresStmt" desc="(Ljava/util/function/Consumer;)V" line="162"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleRequiresStmt" desc="()Ljava/util/Optional;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleRequiresDirective" desc="()Z" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleRequiresDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;" line="180"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleRequiresDirective" desc="()Ljava/util/Optional;" line="186"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleRequiresDirective" desc="(Ljava/util/function/Consumer;)V" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleRequiresDirectiveMetaModel;" line="197"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="147" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="38" covered="25"/><counter type="COMPLEXITY" missed="26" covered="8"/><counter type="METHOD" missed="15" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleProvidesDirective" sourcefilename="ModuleProvidesDirective.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/NodeList;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="64"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleProvidesStmt" desc="()Z" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleProvidesStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifModuleProvidesStmt" desc="(Ljava/util/function/Consumer;)V" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleProvidesStmt" desc="()Ljava/util/Optional;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setWith" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="125"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWith" desc="()Lcom/github/javaparser/ast/NodeList;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleProvidesDirective" desc="()Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleProvidesDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleProvidesDirective;" line="169"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleProvidesDirective" desc="()Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleProvidesDirective" desc="(Ljava/util/function/Consumer;)V" line="180"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleProvidesDirectiveMetaModel;" line="186"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="24" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/modules/ModuleUsesDirective" sourcefilename="ModuleUsesDirective.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;)V" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="67"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleUsesStmt" desc="()Z" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleUsesStmt" desc="()Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifModuleUsesStmt" desc="(Ljava/util/function/Consumer;)V" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleUsesStmt" desc="()Ljava/util/Optional;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="115"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="130"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isModuleUsesDirective" desc="()Z" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asModuleUsesDirective" desc="()Lcom/github/javaparser/ast/modules/ModuleUsesDirective;" line="148"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toModuleUsesDirective" desc="()Ljava/util/Optional;" line="154"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifModuleUsesDirective" desc="(Ljava/util/function/Consumer;)V" line="159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModuleUsesDirectiveMetaModel;" line="165"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="111" covered="46"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="35" covered="16"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="14" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ModuleProvidesDirective.java"><line nr="30" mi="9" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="2" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="9" ci="0" mb="2" cb="0"/><line nr="152" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="7" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="24" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleDeclaration.java"><line nr="35" mi="13" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="2" cb="0"/><line nr="116" mi="6" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="2" cb="0"/><line nr="122" mi="6" ci="0" mb="2" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="1" cb="1"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="2" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="9" ci="0" mb="2" cb="0"/><line nr="182" mi="6" ci="0" mb="2" cb="0"/><line nr="183" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="9" ci="0" mb="2" cb="0"/><line nr="188" mi="6" ci="0" mb="2" cb="0"/><line nr="189" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="176" covered="156"/><counter type="BRANCH" missed="28" covered="8"/><counter type="LINE" missed="37" covered="45"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleExportsDirective.java"><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="1" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="6" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="2" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="100"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="33" covered="30"/><counter type="COMPLEXITY" missed="22" covered="11"/><counter type="METHOD" missed="12" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleRequiresDirective.java"><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="1" cb="1"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="1" cb="1"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="2" cb="0"/><line nr="116" mi="6" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="9" ci="0" mb="2" cb="0"/><line nr="136" mi="6" ci="0" mb="2" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="38" covered="25"/><counter type="COMPLEXITY" missed="26" covered="8"/><counter type="METHOD" missed="15" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleOpensDirective.java"><line nr="30" mi="9" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="2" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="9" ci="0" mb="2" cb="0"/><line nr="125" mi="6" ci="0" mb="2" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="77"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="36" covered="25"/><counter type="COMPLEXITY" missed="24" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleDirective.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="2" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="12" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="12" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="12" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="12" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="12" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="201" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="50" covered="3"/><counter type="COMPLEXITY" missed="47" covered="1"/><counter type="METHOD" missed="45" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleUsesDirective.java"><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="1" cb="1"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="111" covered="46"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="35" covered="16"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="14" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1031" covered="539"/><counter type="BRANCH" missed="115" covered="27"/><counter type="LINE" missed="265" covered="169"/><counter type="COMPLEXITY" missed="187" covered="57"/><counter type="METHOD" missed="118" covered="55"/><counter type="CLASS" missed="0" covered="7"/></package><package name="com/github/javaparser/utils"><class name="com/github/javaparser/utils/VisitorSet$1" sourcefilename="VisitorSet.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorSet;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils$OctalUnescaper" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="()V" line="337"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="344"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOctalDigit" desc="(C)Z" line="375"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZeroToThree" desc="(C)Z" line="385"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="116"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/ClassUtils" sourcefilename="ClassUtils.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitiveOrWrapper" desc="(Ljava/lang/Class;)Z" line="69"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveWrapper" desc="(Ljava/lang/Class;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="96"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceZip" sourcefilename="SourceZip.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/github/javaparser/utils/SourceZip$Callback;)Lcom/github/javaparser/utils/SourceZip;" line="101"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZipPath" desc="()Ljava/nio/file/Path;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaParser" desc="()Lcom/github/javaparser/JavaParser;" line="145"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setJavaParser" desc="(Lcom/github/javaparser/JavaParser;)Lcom/github/javaparser/utils/SourceZip;" line="155"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParserConfiguration" desc="()Lcom/github/javaparser/ParserConfiguration;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParserConfiguration" desc="(Lcom/github/javaparser/ParserConfiguration;)Lcom/github/javaparser/utils/SourceZip;" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parse$0" desc="(Ljava/util/List;Ljava/nio/file/Path;Lcom/github/javaparser/ParseResult;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="131"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="9" covered="24"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorList$3" sourcefilename="VisitorList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorList;Lcom/github/javaparser/ast/visitor/GenericVisitor;Lcom/github/javaparser/ast/visitor/GenericVisitor;II)V" line="245"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorList$2" sourcefilename="VisitorList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorList;I)V" line="156"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="166"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/Node;)V" line="176"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPrevious" desc="()Z" line="181"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextIndex" desc="()I" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="previous" desc="()Lcom/github/javaparser/ast/Node;" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="previousIndex" desc="()I" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Lcom/github/javaparser/ast/Node;)V" line="201"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="27"/><counter type="LINE" missed="9" covered="5"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorList$1" sourcefilename="VisitorList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorList;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorMap$EqualsHashcodeOverridingFacade" sourcefilename="VisitorMap.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorMap;Lcom/github/javaparser/ast/Node;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="80"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="85"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/Log" sourcefilename="Log.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAdapter" desc="(Lcom/github/javaparser/utils/Log$Adapter;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="info" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/Throwable;)V" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Ljava/lang/String;[Ljava/lang/Object;)V" line="120"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="20"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/CollectionStrategy" sourcefilename="CollectionStrategy.java"><method name="getRoot" desc="(Ljava/nio/file/Path;)Ljava/util/Optional;" line="23"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathMatcher" desc="(Ljava/lang/String;)Ljava/nio/file/PathMatcher;" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="23"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorSet$EqualsHashcodeOverridingFacade" sourcefilename="VisitorSet.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorSet;Lcom/github/javaparser/ast/Node;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="179"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="184"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot$1" sourcefilename="SourceRoot.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/SourceRoot;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="152"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot$2" sourcefilename="SourceRoot.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/SourceRoot;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;)V" line="327"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="330"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="338"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/ParserCollectionStrategy" sourcefilename="ParserCollectionStrategy.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ParserConfiguration;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/utils/ProjectRoot;" line="33"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils" sourcefilename="StringEscapeUtils.java"><method name="escapeJava" desc="(Ljava/lang/String;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unescapeJava" desc="(Ljava/lang/String;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="275"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="283"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/Log$StandardOutStandardErrorAdapter" sourcefilename="Log.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="info" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="(Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/Throwable;Ljava/lang/String;)V" line="29"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStackTrace" desc="(Ljava/lang/Throwable;)V" line="41"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="11"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SeparatedItemStringBuilder" sourcefilename="SeparatedItemStringBuilder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;[Ljava/lang/Object;)Lcom/github/javaparser/utils/SeparatedItemStringBuilder;" line="25"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasItems" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorList" sourcefilename="VisitorList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Lcom/github/javaparser/ast/visitor/GenericVisitor;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/Node;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(ILcom/github/javaparser/ast/Node;)V" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="77"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="101"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Lcom/github/javaparser/ast/Node;" line="109"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="114"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="146"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="156"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="208"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Lcom/github/javaparser/ast/Node;" line="213"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="218"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="227"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="235"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="240"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subList" desc="(II)Ljava/util/List;" line="245"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="259"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="264"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toArray$1" desc="(Lcom/github/javaparser/utils/VisitorList$EqualsHashcodeOverridingFacade;)Lcom/github/javaparser/ast/Node;" line="259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toArray$0" desc="(Lcom/github/javaparser/utils/VisitorList$EqualsHashcodeOverridingFacade;)Lcom/github/javaparser/ast/Node;" line="254"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="128" covered="193"/><counter type="BRANCH" missed="10" covered="14"/><counter type="LINE" missed="19" covered="40"/><counter type="COMPLEXITY" missed="18" covered="21"/><counter type="METHOD" missed="10" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorSet" sourcefilename="VisitorSet.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Lcom/github/javaparser/ast/visitor/GenericVisitor;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/Node;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="79"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="128"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="141"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toArray$1" desc="(Lcom/github/javaparser/utils/VisitorSet$EqualsHashcodeOverridingFacade;)Lcom/github/javaparser/ast/Node;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toArray$0" desc="(Lcom/github/javaparser/utils/VisitorSet$EqualsHashcodeOverridingFacade;)Lcom/github/javaparser/ast/Node;" line="141"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="143"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/CodeGenerationUtils" sourcefilename="CodeGenerationUtils.java"><method name="getterName" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getterToPropertyName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setterName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optionalOf" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="f" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileInPackageAbsolutePath" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;" line="65"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileInPackageAbsolutePath" desc="(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileInPackageRelativePath" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;" line="78"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageToPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageAbsolutePath" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;" line="96"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageAbsolutePath" desc="(Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classLoaderRoot" desc="(Ljava/lang/Class;)Ljava/nio/file/Path;" line="109"><counter type="INSTRUCTION" missed="7" covered="7"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mavenModuleRoot" desc="(Ljava/lang/Class;)Ljava/nio/file/Path;" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtractPaths" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="127"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="148"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="15" covered="23"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils$CharSequenceTranslator" sourcefilename="StringEscapeUtils.java"><method name="translate" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="166"><counter type="INSTRUCTION" missed="21" covered="47"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="([Lcom/github/javaparser/utils/StringEscapeUtils$CharSequenceTranslator;)Lcom/github/javaparser/utils/StringEscapeUtils$CharSequenceTranslator;" line="207"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="64"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="14" covered="19"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorList$EqualsHashcodeOverridingFacade" sourcefilename="VisitorList.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/VisitorList;Lcom/github/javaparser/ast/Node;)V" line="276"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="282"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="287"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="292"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="297"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/ParserCollectionStrategy$1" sourcefilename="ParserCollectionStrategy.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/ParserCollectionStrategy;Lcom/github/javaparser/utils/ProjectRoot;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="52"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;" line="60"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils$AggregateTranslator" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="([Lcom/github/javaparser/utils/StringEscapeUtils$CharSequenceTranslator;)V" line="303"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="314"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot$ParallelParse$1" sourcefilename="SourceRoot.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/SourceRoot$ParallelParse;Ljava/util/List;)V" line="584"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisitDirectory" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="587"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="602"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot$Callback$Result" sourcefilename="SourceRoot.java"><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils$LookupTranslator" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="([[Ljava/lang/CharSequence;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="266"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="128"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/Utils" sourcefilename="Utils.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureNotNull" desc="(Ljava/util/List;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNullOrEmpty" desc="(Ljava/util/Collection;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertNotNull" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertNonEmpty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertNonNegative" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="68"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertPositive" desc="(Ljava/lang/Number;)Ljava/lang/Number;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escapeEndOfLines" desc="(Ljava/lang/String;)Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readerToString" desc="(Ljava/io/Reader;)Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrayToList" desc="([Ljava/lang/Object;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCamelCase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="screamingToCamelCase" desc="(Ljava/lang/String;)Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="camelCaseToScreaming" desc="(Ljava/lang/String;)Ljava/lang/String;" line="153"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextWord" desc="(Ljava/lang/String;)Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;" line="181"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capitalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decapitalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringTransformer" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;" line="202"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueIsNullOrEmpty" desc="(Ljava/lang/Object;)Z" line="213"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueIsNullOrEmptyStringOrOptional" desc="(Ljava/lang/Object;)Z" line="232"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="249"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalizeEolInTextBlock" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFileExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="264"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimTrailingSpaces" desc="(Ljava/lang/String;)Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/String;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="333"/><counter type="BRANCH" missed="12" covered="53"/><counter type="LINE" missed="18" covered="70"/><counter type="COMPLEXITY" missed="16" covered="43"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/Pair" sourcefilename="Pair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="43"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="56"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="24"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/VisitorMap" sourcefilename="VisitorMap.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Lcom/github/javaparser/ast/visitor/GenericVisitor;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="109"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="121"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$entrySet$1" desc="(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleEntry;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$keySet$0" desc="(Lcom/github/javaparser/utils/VisitorMap$EqualsHashcodeOverridingFacade;)Lcom/github/javaparser/ast/Node;" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="63"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/CollectionContext" sourcefilename="CollectionContext.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/utils/CollectionStrategy;)V" line="14"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/utils/ProjectRoot;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/utils/ProjectRoot" sourcefilename="ProjectRoot.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceRoot" desc="(Ljava/nio/file/Path;)Ljava/util/Optional;" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceRoots" desc="()Ljava/util/List;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSourceRoot" desc="(Ljava/nio/file/Path;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProjectRoot" desc="()Ljava/nio/file/Path;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRoot" desc="()Ljava/nio/file/Path;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="41"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/Log$SilentAdapter" sourcefilename="Log.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="info" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/Throwable;Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot" sourcefilename="SourceRoot.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration;)V" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryToParse" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/JavaParser;)Lcom/github/javaparser/ParseResult;" line="97"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryToParse" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/ParserConfiguration;)Lcom/github/javaparser/ParseResult;" line="109"><counter type="INSTRUCTION" missed="14" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToParse" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ParseResult;" line="134"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToParse" desc="(Ljava/lang/String;)Ljava/util/List;" line="146"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSensibleDirectoryToEnter" desc="(Ljava/nio/file/Path;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToParse" desc="()Ljava/util/List;" line="186"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryToParseParallelized" desc="(Ljava/lang/String;)Ljava/util/List;" line="201"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryToParseParallelized" desc="()Ljava/util/List;" line="233"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/CompilationUnit;" line="246"><counter type="INSTRUCTION" missed="19" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callback" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;)Ljava/nio/file/FileVisitResult;" line="260"><counter type="INSTRUCTION" missed="7" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="285"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="298"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Lcom/github/javaparser/JavaParser;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="311"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="321"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="346"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logPackage" desc="(Ljava/lang/String;)V" line="351"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseParallelized" desc="(Ljava/lang/String;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="368"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseParallelized" desc="(Ljava/lang/String;Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="400"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseParallelized" desc="(Lcom/github/javaparser/utils/SourceRoot$Callback;)Lcom/github/javaparser/utils/SourceRoot;" line="411"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/ast/CompilationUnit;)Lcom/github/javaparser/utils/SourceRoot;" line="420"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/github/javaparser/ast/CompilationUnit;)Lcom/github/javaparser/utils/SourceRoot;" line="439"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="save" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/nio/file/Path;)Lcom/github/javaparser/utils/SourceRoot;" line="459"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveAll" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/utils/SourceRoot;" line="470"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveAll" desc="()Lcom/github/javaparser/utils/SourceRoot;" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCache" desc="()Ljava/util/List;" line="493"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompilationUnits" desc="()Ljava/util/List;" line="501"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/nio/file/Path;" line="511"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaParser" desc="()Lcom/github/javaparser/JavaParser;" line="519"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setJavaParser" desc="(Lcom/github/javaparser/JavaParser;)Lcom/github/javaparser/utils/SourceRoot;" line="529"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParserConfiguration" desc="()Lcom/github/javaparser/ParserConfiguration;" line="535"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParserConfiguration" desc="(Lcom/github/javaparser/ParserConfiguration;)Lcom/github/javaparser/utils/SourceRoot;" line="542"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrinter" desc="(Ljava/util/function/Function;)Lcom/github/javaparser/utils/SourceRoot;" line="551"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrinter" desc="()Ljava/util/function/Function;" line="560"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="621"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCompilationUnits$5" desc="(Lcom/github/javaparser/ParseResult;)Lcom/github/javaparser/ast/CompilationUnit;" line="503"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseParallelized$4" desc="(Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/utils/SourceRoot$Callback;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="375"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$callback$3" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ast/CompilationUnit;)V" line="266"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$callback$2" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ast/CompilationUnit;)V" line="263"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tryToParseParallelized$1" desc="(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;" line="205"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$tryToParse$0" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/ast/CompilationUnit;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="385" covered="390"/><counter type="BRANCH" missed="20" covered="14"/><counter type="LINE" missed="83" covered="83"/><counter type="COMPLEXITY" missed="34" covered="27"/><counter type="METHOD" missed="20" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/PositionUtils" sourcefilename="PositionUtils.java"><method name="sortByBeginPosition" desc="(Ljava/util/List;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByBeginPosition" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByBeginPosition" desc="(Ljava/util/List;Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areInOrder" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areInOrder" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Z)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Z)I" line="67"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastAnnotation" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="97"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginLineWithoutConsideringAnnotation" desc="(Lcom/github/javaparser/ast/Node;)I" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginColumnWithoutConsideringAnnotation" desc="(Lcom/github/javaparser/ast/Node;)I" line="115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beginNodeWithoutConsideringAnnotations" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="119"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeContains" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;Z)Z" line="131"><counter type="INSTRUCTION" missed="43" covered="39"/><counter type="BRANCH" missed="13" covered="7"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sortByBeginPosition$0" desc="(ZLcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="200"/><counter type="BRANCH" missed="17" covered="33"/><counter type="LINE" missed="8" covered="47"/><counter type="COMPLEXITY" missed="12" covered="25"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/StringEscapeUtils$UnicodeUnescaper" sourcefilename="StringEscapeUtils.java"><method name="&lt;init&gt;" desc="()V" line="398"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translate" desc="(Ljava/lang/CharSequence;ILjava/io/Writer;)I" line="405"><counter type="INSTRUCTION" missed="35" covered="81"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="85"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/utils/SourceRoot$ParallelParse" sourcefilename="SourceRoot.java"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Lcom/github/javaparser/utils/SourceRoot$ParallelParse$VisitFileCallback;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="()V" line="582"><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ProjectRoot.java"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="41"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PositionUtils.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="2"/><line nr="67" mi="0" ci="8" mb="0" cb="4"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="4"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="1" cb="3"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="1" cb="3"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="4"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="1" cb="1"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="1" cb="1"/><line nr="145" mi="12" ci="0" mb="4" cb="0"/><line nr="146" mi="9" ci="0" mb="2" cb="0"/><line nr="148" mi="18" ci="0" mb="4" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="200"/><counter type="BRANCH" missed="17" covered="33"/><counter type="LINE" missed="8" covered="47"/><counter type="COMPLEXITY" missed="12" covered="25"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SourceRoot.java"><line nr="45" mi="0" ci="16" mb="0" cb="0"/><line nr="46" mi="0" ci="18" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="1" cb="1"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="2" cb="2"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="4"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="8" ci="0" mb="4" cb="0"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="0"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="10" mb="0" cb="0"/><line nr="264" mi="0" ci="9" mb="2" cb="2"/><line nr="266" mi="0" ci="12" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="10" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="0" cb="0"/><line nr="299" mi="2" ci="0" mb="0" cb="0"/><line nr="311" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="1" cb="1"/><line nr="327" mi="0" ci="21" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="2" cb="2"/><line nr="331" mi="0" ci="9" mb="0" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="7" mb="0" cb="2"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="1" cb="1"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="8" ci="0" mb="0" cb="0"/><line nr="355" mi="1" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="5" mb="1" cb="1"/><line nr="374" mi="0" ci="9" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="2" cb="2"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="8" ci="0" mb="0" cb="0"/><line nr="411" mi="0" ci="8" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="421" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="12" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="10" ci="0" mb="0" cb="0"/><line nr="430" mi="6" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="2" cb="0"/><line nr="441" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="8" ci="0" mb="0" cb="0"/><line nr="443" mi="10" ci="0" mb="0" cb="0"/><line nr="448" mi="6" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="459" mi="0" ci="3" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="3" ci="0" mb="0" cb="0"/><line nr="471" mi="15" ci="0" mb="0" cb="0"/><line nr="472" mi="12" ci="0" mb="2" cb="0"/><line nr="473" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="6" ci="0" mb="2" cb="0"/><line nr="475" mi="8" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="493" mi="0" ci="7" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="6" ci="0" mb="0" cb="0"/><line nr="529" mi="3" ci="0" mb="0" cb="0"/><line nr="530" mi="4" ci="0" mb="0" cb="0"/><line nr="531" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="3" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="0" ci="2" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="582" mi="0" ci="4" mb="0" cb="0"/><line nr="584" mi="0" ci="18" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="2"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="6" mb="0" cb="2"/><line nr="591" mi="0" ci="8" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="593" mi="0" ci="5" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="2" mb="0" cb="0"/><line nr="602" mi="0" ci="7" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="606" mi="2" ci="0" mb="0" cb="0"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="609" mi="0" ci="10" mb="0" cb="2"/><line nr="610" mi="0" ci="3" mb="0" cb="0"/><line nr="611" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="390" covered="584"/><counter type="BRANCH" missed="24" covered="28"/><counter type="LINE" missed="86" covered="113"/><counter type="COMPLEXITY" missed="38" covered="44"/><counter type="METHOD" missed="20" covered="35"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="ClassUtils.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="4"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="96"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SeparatedItemStringBuilder.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectionContext.java"><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VisitorMap.java"><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="2" cb="2"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="99"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CollectionStrategy.java"><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="23"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringEscapeUtils.java"><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="68" mb="0" cb="0"/><line nr="80" mi="0" ci="68" mb="0" cb="0"/><line nr="88" mi="0" ci="43" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="24" mb="0" cb="0"/><line nr="102" mi="0" ci="66" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="1" cb="1"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="1" cb="1"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="1" cb="1"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="2"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="3" ci="3" mb="3" cb="1"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="2" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="2"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="7" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="1" cb="1"/><line nr="244" mi="0" ci="16" mb="0" cb="2"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="246" mi="0" ci="10" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="2"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="1" cb="1"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="8" mb="0" cb="2"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="2"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="2" ci="7" mb="1" cb="1"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="17" mb="0" cb="2"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="2"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="15" mb="1" cb="5"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="9" mb="2" cb="2"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="15" mb="3" cb="3"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="10" mb="0" cb="4"/><line nr="385" mi="1" ci="9" mb="2" cb="2"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="18" mb="1" cb="5"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="13" mb="2" cb="2"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="13" mb="2" cb="2"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="416" mi="0" ci="8" mb="1" cb="1"/><line nr="418" mi="0" ci="11" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="1" ci="0" mb="0" cb="0"/><line nr="424" mi="13" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="18" ci="0" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="716"/><counter type="BRANCH" missed="25" covered="55"/><counter type="LINE" missed="20" covered="91"/><counter type="COMPLEXITY" missed="24" covered="32"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="ParserCollectionStrategy.java"><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="1" cb="5"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="4"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="98"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VisitorList.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="1" cb="1"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="10" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="10" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="14" mb="0" cb="0"/><line nr="157" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="9" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="9" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="7" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="9" mb="0" cb="2"/><line nr="220" mi="0" ci="5" mb="1" cb="1"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="1" ci="7" mb="1" cb="1"/><line nr="235" mi="12" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="24" mb="0" cb="0"/><line nr="247" mi="0" ci="10" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="13" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="14" mb="0" cb="0"/><line nr="264" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="3" ci="0" mb="2" cb="0"/><line nr="266" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="11" ci="0" mb="2" cb="0"/><line nr="268" mi="13" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="11" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="10" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="2" cb="2"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="194" covered="292"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="33" covered="55"/><counter type="COMPLEXITY" missed="31" covered="30"/><counter type="METHOD" missed="21" covered="26"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="Utils.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="8" ci="0" mb="2" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="4"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="4"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="17" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="3"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="2"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="13" mb="0" cb="2"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="19" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="4"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="2" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="14" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="1" cb="1"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="2"/><line nr="217" mi="0" ci="4" mb="1" cb="1"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="1" cb="1"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="1" cb="1"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="11" mb="0" cb="4"/><line nr="276" mi="0" ci="9" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="333"/><counter type="BRANCH" missed="12" covered="53"/><counter type="LINE" missed="18" covered="70"/><counter type="COMPLEXITY" missed="16" covered="43"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Log.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="2" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="13" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="36"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SourceZip.java"><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="2"/><line nr="105" mi="0" ci="8" mb="0" cb="4"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="131"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="9" covered="24"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VisitorSet.java"><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="1" cb="1"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="1" cb="1"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="1" cb="1"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="1" ci="7" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="13" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="14" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="11" ci="0" mb="2" cb="0"/><line nr="155" mi="13" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="10" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="2" cb="2"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="201"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="14" covered="40"/><counter type="COMPLEXITY" missed="15" covered="22"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CodeGenerationUtils.java"><line nr="16" mi="0" ci="4" mb="0" cb="2"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="2" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="2" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="2" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="2" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="14" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="6" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="148"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="15" covered="23"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Pair.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="2" cb="0"/><line nr="44" mi="9" ci="0" mb="4" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="15" ci="0" mb="6" cb="0"/><line nr="49" mi="15" ci="0" mb="6" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="2" cb="0"/><line nr="57" mi="13" ci="0" mb="2" cb="0"/><line nr="62" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="24"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="13" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1283" covered="3077"/><counter type="BRANCH" missed="138" covered="239"/><counter type="LINE" missed="263" covered="572"/><counter type="COMPLEXITY" missed="192" covered="272"/><counter type="METHOD" missed="91" covered="183"/><counter type="CLASS" missed="1" covered="36"/></package><package name="com/github/javaparser/metamodel"><class name="com/github/javaparser/metamodel/PackageDeclarationMetaModel" sourcefilename="PackageDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SwitchEntryMetaModel" sourcefilename="SwitchEntryMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ThisExprMetaModel" sourcefilename="ThisExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ClassOrInterfaceDeclarationMetaModel" sourcefilename="ClassOrInterfaceDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/AssignExprMetaModel" sourcefilename="AssignExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleDirectiveMetaModel" sourcefilename="ModuleDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/NullLiteralExprMetaModel" sourcefilename="NullLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/UnionTypeMetaModel" sourcefilename="UnionTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/WhileStmtMetaModel" sourcefilename="WhileStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/JavaParserMetaModel" sourcefilename="JavaParserMetaModel.java"><method name="initializeConstructorParameters" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="1387"/><counter type="LINE" missed="0" covered="232"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeMetaModels" desc="()Ljava/util/List;" line="249"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeNodeMetaModels" desc="()V" line="253"><counter type="INSTRUCTION" missed="0" covered="425"/><counter type="LINE" missed="0" covered="107"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializePropertyMetaModels" desc="()V" line="362"><counter type="INSTRUCTION" missed="0" covered="3948"/><counter type="LINE" missed="0" covered="399"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeMetaModel" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="763"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="643"/><counter type="LINE" missed="0" covered="111"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="6405"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="850"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/AnnotationDeclarationMetaModel" sourcefilename="AnnotationDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModifierMetaModel" sourcefilename="ModifierMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ConditionalExprMetaModel" sourcefilename="ConditionalExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/DoubleLiteralExprMetaModel" sourcefilename="DoubleLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CatchClauseMetaModel" sourcefilename="CatchClauseMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/AnnotationExprMetaModel" sourcefilename="AnnotationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BooleanLiteralExprMetaModel" sourcefilename="BooleanLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CallableDeclarationMetaModel" sourcefilename="CallableDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ArrayAccessExprMetaModel" sourcefilename="ArrayAccessExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleRequiresDirectiveMetaModel" sourcefilename="ModuleRequiresDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/VoidTypeMetaModel" sourcefilename="VoidTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ExpressionStmtMetaModel" sourcefilename="ExpressionStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/AssertStmtMetaModel" sourcefilename="AssertStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/EnclosedExprMetaModel" sourcefilename="EnclosedExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/IntegerLiteralExprMetaModel" sourcefilename="IntegerLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/TypeMetaModel" sourcefilename="TypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BaseNodeMetaModel" sourcefilename="BaseNodeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="18"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/lang/Class;)Z" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedClassName" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSuperNodeMetaModel" desc="()Ljava/util/Optional;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclaredPropertyMetaModels" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDerivedPropertyMetaModels" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructorParameters" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllPropertyMetaModels" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInstanceOfMetaModel" desc="(Lcom/github/javaparser/metamodel/BaseNodeMetaModel;)Z" line="93"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageName" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAbstract" desc="()Z" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasWildcard" desc="()Z" line="127"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRootNode" desc="()Z" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="139"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeNameGenerified" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeName" desc="()Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModelFieldName" desc="()Ljava/lang/String;" line="180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="(Ljava/util/Map;)Lcom/github/javaparser/ast/Node;" line="190"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="178" covered="88"/><counter type="BRANCH" missed="28" covered="2"/><counter type="LINE" missed="35" covered="25"/><counter type="COMPLEXITY" missed="25" covered="11"/><counter type="METHOD" missed="11" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LabeledStmtMetaModel" sourcefilename="LabeledStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ContinueStmtMetaModel" sourcefilename="ContinueStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CompilationUnitMetaModel" sourcefilename="CompilationUnitMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SingleMemberAnnotationExprMetaModel" sourcefilename="SingleMemberAnnotationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ExplicitConstructorInvocationStmtMetaModel" sourcefilename="ExplicitConstructorInvocationStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ArrayCreationLevelMetaModel" sourcefilename="ArrayCreationLevelMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/IfStmtMetaModel" sourcefilename="IfStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/InitializerDeclarationMetaModel" sourcefilename="InitializerDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ClassExprMetaModel" sourcefilename="ClassExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/TypeDeclarationMetaModel" sourcefilename="TypeDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/IntersectionTypeMetaModel" sourcefilename="IntersectionTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CharLiteralExprMetaModel" sourcefilename="CharLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/EnumConstantDeclarationMetaModel" sourcefilename="EnumConstantDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BlockCommentMetaModel" sourcefilename="BlockCommentMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/TypeExprMetaModel" sourcefilename="TypeExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/NodeMetaModel" sourcefilename="NodeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ArrayCreationExprMetaModel" sourcefilename="ArrayCreationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/MethodCallExprMetaModel" sourcefilename="MethodCallExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ReceiverParameterMetaModel" sourcefilename="ReceiverParameterMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/UnaryExprMetaModel" sourcefilename="UnaryExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ImportDeclarationMetaModel" sourcefilename="ImportDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleExportsDirectiveMetaModel" sourcefilename="ModuleExportsDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ArrayInitializerExprMetaModel" sourcefilename="ArrayInitializerExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SwitchExprMetaModel" sourcefilename="SwitchExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ThrowStmtMetaModel" sourcefilename="ThrowStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LineCommentMetaModel" sourcefilename="LineCommentMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LiteralExprMetaModel" sourcefilename="LiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ExpressionMetaModel" sourcefilename="ExpressionMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/VariableDeclaratorMetaModel" sourcefilename="VariableDeclaratorMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ForStmtMetaModel" sourcefilename="ForStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/InstanceOfExprMetaModel" sourcefilename="InstanceOfExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/StatementMetaModel" sourcefilename="StatementMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/VariableDeclarationExprMetaModel" sourcefilename="VariableDeclarationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/WildcardTypeMetaModel" sourcefilename="WildcardTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SimpleNameMetaModel" sourcefilename="SimpleNameMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/TryStmtMetaModel" sourcefilename="TryStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/MethodReferenceExprMetaModel" sourcefilename="MethodReferenceExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BinaryExprMetaModel" sourcefilename="BinaryExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/JavadocCommentMetaModel" sourcefilename="JavadocCommentMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleDeclarationMetaModel" sourcefilename="ModuleDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CommentMetaModel" sourcefilename="CommentMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/CastExprMetaModel" sourcefilename="CastExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/TypeParameterMetaModel" sourcefilename="TypeParameterMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ParameterMetaModel" sourcefilename="ParameterMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ReferenceTypeMetaModel" sourcefilename="ReferenceTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ReturnStmtMetaModel" sourcefilename="ReturnStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ForEachStmtMetaModel" sourcefilename="ForEachStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/UnparsableStmtMetaModel" sourcefilename="UnparsableStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LambdaExprMetaModel" sourcefilename="LambdaExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ConstructorDeclarationMetaModel" sourcefilename="ConstructorDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleOpensDirectiveMetaModel" sourcefilename="ModuleOpensDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/FieldDeclarationMetaModel" sourcefilename="FieldDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BreakStmtMetaModel" sourcefilename="BreakStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/FieldAccessExprMetaModel" sourcefilename="FieldAccessExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/NameExprMetaModel" sourcefilename="NameExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/DoStmtMetaModel" sourcefilename="DoStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BodyDeclarationMetaModel" sourcefilename="BodyDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/StringLiteralExprMetaModel" sourcefilename="StringLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LocalClassDeclarationStmtMetaModel" sourcefilename="LocalClassDeclarationStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/BlockStmtMetaModel" sourcefilename="BlockStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SuperExprMetaModel" sourcefilename="SuperExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ObjectCreationExprMetaModel" sourcefilename="ObjectCreationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SwitchStmtMetaModel" sourcefilename="SwitchStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/MemberValuePairMetaModel" sourcefilename="MemberValuePairMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/PrimitiveTypeMetaModel" sourcefilename="PrimitiveTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ArrayTypeMetaModel" sourcefilename="ArrayTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/EmptyStmtMetaModel" sourcefilename="EmptyStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/UnknownTypeMetaModel" sourcefilename="UnknownTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleUsesDirectiveMetaModel" sourcefilename="ModuleUsesDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/NormalAnnotationExprMetaModel" sourcefilename="NormalAnnotationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ModuleProvidesDirectiveMetaModel" sourcefilename="ModuleProvidesDirectiveMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/EnumDeclarationMetaModel" sourcefilename="EnumDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/PropertyMetaModel" sourcefilename="PropertyMetaModel.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/metamodel/BaseNodeMetaModel;Ljava/lang/String;Ljava/lang/Class;Ljava/util/Optional;ZZZZ)V" line="24"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is" desc="(Ljava/lang/Class;Ljava/lang/String;)Z" line="39"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is" desc="(Ljava/lang/String;)Z" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSetterMethodName" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetterMethodName" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingNodeMetaModel" desc="()Lcom/github/javaparser/metamodel/BaseNodeMetaModel;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonEmpty" desc="()Z" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/Class;" line="88"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeReference" desc="()Ljava/util/Optional;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOptional" desc="()Z" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRequired" desc="()Z" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNodeList" desc="()Z" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasWildcard" desc="()Z" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingular" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="140"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="153"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeNameGenerified" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeName" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNameForGetter" desc="()Ljava/lang/String;" line="179"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeNameForSetter" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNode" desc="()Z" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModelFieldName" desc="()Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAttribute" desc="()Z" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Object;" line="222"><counter type="INSTRUCTION" missed="12" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="129" covered="164"/><counter type="BRANCH" missed="17" covered="15"/><counter type="LINE" missed="22" covered="34"/><counter type="COMPLEXITY" missed="21" covered="21"/><counter type="METHOD" missed="12" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/AnnotationMemberDeclarationMetaModel" sourcefilename="AnnotationMemberDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/MethodDeclarationMetaModel" sourcefilename="MethodDeclarationMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/SynchronizedStmtMetaModel" sourcefilename="SynchronizedStmtMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/VarTypeMetaModel" sourcefilename="VarTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LiteralStringValueExprMetaModel" sourcefilename="LiteralStringValueExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/ClassOrInterfaceTypeMetaModel" sourcefilename="ClassOrInterfaceTypeMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/NameMetaModel" sourcefilename="NameMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/LongLiteralExprMetaModel" sourcefilename="LongLiteralExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/metamodel/MarkerAnnotationExprMetaModel" sourcefilename="MarkerAnnotationExprMetaModel.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ArrayAccessExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemberValuePairMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleExportsDirectiveMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CastExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParameterMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlockStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassOrInterfaceDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationMemberDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntersectionTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleDirectiveMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VarTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuperExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssertStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassOrInterfaceTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayInitializerExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnclosedExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LambdaExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExplicitConstructorInvocationStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeParameterMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldAccessExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralStringValueExprMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwitchStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralExprMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PackageDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThisExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LabeledStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImportDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleProvidesDirectiveMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TryStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnaryExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaParserMetaModel.java"><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="14" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="14" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="14" mb="0" cb="0"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="368" mi="0" ci="14" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="14" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="14" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="0" cb="0"/><line nr="374" mi="0" ci="14" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="0"/><line nr="376" mi="0" ci="14" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="378" mi="0" ci="14" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="14" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="14" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="0" ci="14" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="14" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="13" mb="0" cb="0"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="14" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="14" mb="0" cb="0"/><line nr="393" mi="0" ci="6" mb="0" cb="0"/><line nr="394" mi="0" ci="13" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="396" mi="0" ci="14" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="14" mb="0" cb="0"/><line nr="399" mi="0" ci="6" mb="0" cb="0"/><line nr="400" mi="0" ci="14" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="14" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="14" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="14" mb="0" cb="0"/><line nr="407" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="14" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="410" mi="0" ci="14" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="14" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="414" mi="0" ci="13" mb="0" cb="0"/><line nr="415" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="14" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="418" mi="0" ci="14" mb="0" cb="0"/><line nr="419" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="14" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="422" mi="0" ci="14" mb="0" cb="0"/><line nr="423" mi="0" ci="6" mb="0" cb="0"/><line nr="424" mi="0" ci="14" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="14" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="428" mi="0" ci="13" mb="0" cb="0"/><line nr="429" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="14" mb="0" cb="0"/><line nr="431" mi="0" ci="6" mb="0" cb="0"/><line nr="432" mi="0" ci="14" mb="0" cb="0"/><line nr="433" mi="0" ci="6" mb="0" cb="0"/><line nr="434" mi="0" ci="14" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="14" mb="0" cb="0"/><line nr="437" mi="0" ci="6" mb="0" cb="0"/><line nr="438" mi="0" ci="14" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="440" mi="0" ci="14" mb="0" cb="0"/><line nr="441" mi="0" ci="6" mb="0" cb="0"/><line nr="442" mi="0" ci="14" mb="0" cb="0"/><line nr="443" mi="0" ci="6" mb="0" cb="0"/><line nr="444" mi="0" ci="14" mb="0" cb="0"/><line nr="445" mi="0" ci="6" mb="0" cb="0"/><line nr="446" mi="0" ci="14" mb="0" cb="0"/><line nr="447" mi="0" ci="6" mb="0" cb="0"/><line nr="448" mi="0" ci="14" mb="0" cb="0"/><line nr="449" mi="0" ci="6" mb="0" cb="0"/><line nr="450" mi="0" ci="14" mb="0" cb="0"/><line nr="451" mi="0" ci="6" mb="0" cb="0"/><line nr="452" mi="0" ci="13" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="14" mb="0" cb="0"/><line nr="455" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="14" mb="0" cb="0"/><line nr="457" mi="0" ci="6" mb="0" cb="0"/><line nr="458" mi="0" ci="14" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="460" mi="0" ci="13" mb="0" cb="0"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="14" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="464" mi="0" ci="14" mb="0" cb="0"/><line nr="465" mi="0" ci="6" mb="0" cb="0"/><line nr="466" mi="0" ci="14" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="468" mi="0" ci="14" mb="0" cb="0"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="14" mb="0" cb="0"/><line nr="471" mi="0" ci="6" mb="0" cb="0"/><line nr="472" mi="0" ci="14" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="14" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="14" mb="0" cb="0"/><line nr="477" mi="0" ci="6" mb="0" cb="0"/><line nr="478" mi="0" ci="14" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="480" mi="0" ci="14" mb="0" cb="0"/><line nr="481" mi="0" ci="6" mb="0" cb="0"/><line nr="482" mi="0" ci="13" mb="0" cb="0"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="14" mb="0" cb="0"/><line nr="485" mi="0" ci="6" mb="0" cb="0"/><line nr="486" mi="0" ci="14" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="14" mb="0" cb="0"/><line nr="489" mi="0" ci="6" mb="0" cb="0"/><line nr="490" mi="0" ci="14" mb="0" cb="0"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="14" mb="0" cb="0"/><line nr="493" mi="0" ci="6" mb="0" cb="0"/><line nr="494" mi="0" ci="14" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="13" mb="0" cb="0"/><line nr="497" mi="0" ci="6" mb="0" cb="0"/><line nr="498" mi="0" ci="14" mb="0" cb="0"/><line nr="499" mi="0" ci="6" mb="0" cb="0"/><line nr="500" mi="0" ci="14" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="14" mb="0" cb="0"/><line nr="503" mi="0" ci="6" mb="0" cb="0"/><line nr="504" mi="0" ci="13" mb="0" cb="0"/><line nr="505" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="14" mb="0" cb="0"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="508" mi="0" ci="13" mb="0" cb="0"/><line nr="509" mi="0" ci="6" mb="0" cb="0"/><line nr="510" mi="0" ci="14" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="0"/><line nr="512" mi="0" ci="14" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="14" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="14" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="518" mi="0" ci="14" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="14" mb="0" cb="0"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="14" mb="0" cb="0"/><line nr="523" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="14" mb="0" cb="0"/><line nr="525" mi="0" ci="6" mb="0" cb="0"/><line nr="526" mi="0" ci="14" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="14" mb="0" cb="0"/><line nr="529" mi="0" ci="6" mb="0" cb="0"/><line nr="530" mi="0" ci="13" mb="0" cb="0"/><line nr="531" mi="0" ci="6" mb="0" cb="0"/><line nr="532" mi="0" ci="14" mb="0" cb="0"/><line nr="533" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="14" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="14" mb="0" cb="0"/><line nr="537" mi="0" ci="6" mb="0" cb="0"/><line nr="538" mi="0" ci="13" mb="0" cb="0"/><line nr="539" mi="0" ci="6" mb="0" cb="0"/><line nr="540" mi="0" ci="14" mb="0" cb="0"/><line nr="541" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="14" mb="0" cb="0"/><line nr="543" mi="0" ci="6" mb="0" cb="0"/><line nr="544" mi="0" ci="14" mb="0" cb="0"/><line nr="545" mi="0" ci="6" mb="0" cb="0"/><line nr="546" mi="0" ci="14" mb="0" cb="0"/><line nr="547" mi="0" ci="6" mb="0" cb="0"/><line nr="548" mi="0" ci="14" mb="0" cb="0"/><line nr="549" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="0" ci="14" mb="0" cb="0"/><line nr="551" mi="0" ci="6" mb="0" cb="0"/><line nr="552" mi="0" ci="14" mb="0" cb="0"/><line nr="553" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="0" ci="14" mb="0" cb="0"/><line nr="555" mi="0" ci="6" mb="0" cb="0"/><line nr="556" mi="0" ci="13" mb="0" cb="0"/><line nr="557" mi="0" ci="6" mb="0" cb="0"/><line nr="558" mi="0" ci="13" mb="0" cb="0"/><line nr="559" mi="0" ci="6" mb="0" cb="0"/><line nr="560" mi="0" ci="14" mb="0" cb="0"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="562" mi="0" ci="14" mb="0" cb="0"/><line nr="563" mi="0" ci="6" mb="0" cb="0"/><line nr="564" mi="0" ci="13" mb="0" cb="0"/><line nr="565" mi="0" ci="6" mb="0" cb="0"/><line nr="566" mi="0" ci="14" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="0"/><line nr="568" mi="0" ci="13" mb="0" cb="0"/><line nr="569" mi="0" ci="6" mb="0" cb="0"/><line nr="570" mi="0" ci="14" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="0" ci="14" mb="0" cb="0"/><line nr="573" mi="0" ci="6" mb="0" cb="0"/><line nr="574" mi="0" ci="14" mb="0" cb="0"/><line nr="575" mi="0" ci="6" mb="0" cb="0"/><line nr="576" mi="0" ci="14" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="578" mi="0" ci="14" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="580" mi="0" ci="14" mb="0" cb="0"/><line nr="581" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="14" mb="0" cb="0"/><line nr="583" mi="0" ci="6" mb="0" cb="0"/><line nr="584" mi="0" ci="13" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="13" mb="0" cb="0"/><line nr="587" mi="0" ci="6" mb="0" cb="0"/><line nr="588" mi="0" ci="14" mb="0" cb="0"/><line nr="589" mi="0" ci="6" mb="0" cb="0"/><line nr="590" mi="0" ci="14" mb="0" cb="0"/><line nr="591" mi="0" ci="6" mb="0" cb="0"/><line nr="592" mi="0" ci="14" mb="0" cb="0"/><line nr="593" mi="0" ci="6" mb="0" cb="0"/><line nr="594" mi="0" ci="14" mb="0" cb="0"/><line nr="595" mi="0" ci="6" mb="0" cb="0"/><line nr="596" mi="0" ci="14" mb="0" cb="0"/><line nr="597" mi="0" ci="6" mb="0" cb="0"/><line nr="598" mi="0" ci="13" mb="0" cb="0"/><line nr="599" mi="0" ci="6" mb="0" cb="0"/><line nr="600" mi="0" ci="13" mb="0" cb="0"/><line nr="601" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="13" mb="0" cb="0"/><line nr="603" mi="0" ci="6" mb="0" cb="0"/><line nr="604" mi="0" ci="14" mb="0" cb="0"/><line nr="605" mi="0" ci="6" mb="0" cb="0"/><line nr="606" mi="0" ci="14" mb="0" cb="0"/><line nr="607" mi="0" ci="6" mb="0" cb="0"/><line nr="608" mi="0" ci="14" mb="0" cb="0"/><line nr="609" mi="0" ci="6" mb="0" cb="0"/><line nr="610" mi="0" ci="14" mb="0" cb="0"/><line nr="611" mi="0" ci="6" mb="0" cb="0"/><line nr="612" mi="0" ci="14" mb="0" cb="0"/><line nr="613" mi="0" ci="6" mb="0" cb="0"/><line nr="614" mi="0" ci="14" mb="0" cb="0"/><line nr="615" mi="0" ci="6" mb="0" cb="0"/><line nr="616" mi="0" ci="13" mb="0" cb="0"/><line nr="617" mi="0" ci="6" mb="0" cb="0"/><line nr="618" mi="0" ci="13" mb="0" cb="0"/><line nr="619" mi="0" ci="6" mb="0" cb="0"/><line nr="620" mi="0" ci="14" mb="0" cb="0"/><line nr="621" mi="0" ci="6" mb="0" cb="0"/><line nr="622" mi="0" ci="14" mb="0" cb="0"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="624" mi="0" ci="14" mb="0" cb="0"/><line nr="625" mi="0" ci="6" mb="0" cb="0"/><line nr="626" mi="0" ci="14" mb="0" cb="0"/><line nr="627" mi="0" ci="6" mb="0" cb="0"/><line nr="628" mi="0" ci="14" mb="0" cb="0"/><line nr="629" mi="0" ci="6" mb="0" cb="0"/><line nr="630" mi="0" ci="14" mb="0" cb="0"/><line nr="631" mi="0" ci="6" mb="0" cb="0"/><line nr="632" mi="0" ci="14" mb="0" cb="0"/><line nr="633" mi="0" ci="6" mb="0" cb="0"/><line nr="634" mi="0" ci="14" mb="0" cb="0"/><line nr="635" mi="0" ci="6" mb="0" cb="0"/><line nr="636" mi="0" ci="14" mb="0" cb="0"/><line nr="637" mi="0" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="14" mb="0" cb="0"/><line nr="639" mi="0" ci="6" mb="0" cb="0"/><line nr="640" mi="0" ci="14" mb="0" cb="0"/><line nr="641" mi="0" ci="6" mb="0" cb="0"/><line nr="642" mi="0" ci="14" mb="0" cb="0"/><line nr="643" mi="0" ci="6" mb="0" cb="0"/><line nr="644" mi="0" ci="13" mb="0" cb="0"/><line nr="645" mi="0" ci="6" mb="0" cb="0"/><line nr="646" mi="0" ci="14" mb="0" cb="0"/><line nr="647" mi="0" ci="6" mb="0" cb="0"/><line nr="648" mi="0" ci="13" mb="0" cb="0"/><line nr="649" mi="0" ci="6" mb="0" cb="0"/><line nr="650" mi="0" ci="14" mb="0" cb="0"/><line nr="651" mi="0" ci="6" mb="0" cb="0"/><line nr="652" mi="0" ci="14" mb="0" cb="0"/><line nr="653" mi="0" ci="6" mb="0" cb="0"/><line nr="654" mi="0" ci="14" mb="0" cb="0"/><line nr="655" mi="0" ci="6" mb="0" cb="0"/><line nr="656" mi="0" ci="14" mb="0" cb="0"/><line nr="657" mi="0" ci="6" mb="0" cb="0"/><line nr="658" mi="0" ci="14" mb="0" cb="0"/><line nr="659" mi="0" ci="6" mb="0" cb="0"/><line nr="660" mi="0" ci="14" mb="0" cb="0"/><line nr="661" mi="0" ci="6" mb="0" cb="0"/><line nr="662" mi="0" ci="14" mb="0" cb="0"/><line nr="663" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="14" mb="0" cb="0"/><line nr="665" mi="0" ci="6" mb="0" cb="0"/><line nr="666" mi="0" ci="14" mb="0" cb="0"/><line nr="667" mi="0" ci="6" mb="0" cb="0"/><line nr="668" mi="0" ci="14" mb="0" cb="0"/><line nr="669" mi="0" ci="6" mb="0" cb="0"/><line nr="670" mi="0" ci="14" mb="0" cb="0"/><line nr="671" mi="0" ci="6" mb="0" cb="0"/><line nr="672" mi="0" ci="13" mb="0" cb="0"/><line nr="673" mi="0" ci="6" mb="0" cb="0"/><line nr="674" mi="0" ci="13" mb="0" cb="0"/><line nr="675" mi="0" ci="6" mb="0" cb="0"/><line nr="676" mi="0" ci="13" mb="0" cb="0"/><line nr="677" mi="0" ci="6" mb="0" cb="0"/><line nr="678" mi="0" ci="13" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="680" mi="0" ci="14" mb="0" cb="0"/><line nr="681" mi="0" ci="6" mb="0" cb="0"/><line nr="682" mi="0" ci="14" mb="0" cb="0"/><line nr="683" mi="0" ci="6" mb="0" cb="0"/><line nr="684" mi="0" ci="14" mb="0" cb="0"/><line nr="685" mi="0" ci="6" mb="0" cb="0"/><line nr="686" mi="0" ci="14" mb="0" cb="0"/><line nr="687" mi="0" ci="6" mb="0" cb="0"/><line nr="688" mi="0" ci="14" mb="0" cb="0"/><line nr="689" mi="0" ci="6" mb="0" cb="0"/><line nr="690" mi="0" ci="13" mb="0" cb="0"/><line nr="691" mi="0" ci="6" mb="0" cb="0"/><line nr="692" mi="0" ci="14" mb="0" cb="0"/><line nr="693" mi="0" ci="6" mb="0" cb="0"/><line nr="694" mi="0" ci="14" mb="0" cb="0"/><line nr="695" mi="0" ci="6" mb="0" cb="0"/><line nr="696" mi="0" ci="14" mb="0" cb="0"/><line nr="697" mi="0" ci="6" mb="0" cb="0"/><line nr="698" mi="0" ci="14" mb="0" cb="0"/><line nr="699" mi="0" ci="6" mb="0" cb="0"/><line nr="700" mi="0" ci="14" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="0"/><line nr="702" mi="0" ci="14" mb="0" cb="0"/><line nr="703" mi="0" ci="6" mb="0" cb="0"/><line nr="704" mi="0" ci="14" mb="0" cb="0"/><line nr="705" mi="0" ci="6" mb="0" cb="0"/><line nr="706" mi="0" ci="14" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="14" mb="0" cb="0"/><line nr="709" mi="0" ci="6" mb="0" cb="0"/><line nr="710" mi="0" ci="14" mb="0" cb="0"/><line nr="711" mi="0" ci="6" mb="0" cb="0"/><line nr="712" mi="0" ci="14" mb="0" cb="0"/><line nr="713" mi="0" ci="6" mb="0" cb="0"/><line nr="714" mi="0" ci="14" mb="0" cb="0"/><line nr="715" mi="0" ci="6" mb="0" cb="0"/><line nr="716" mi="0" ci="14" mb="0" cb="0"/><line nr="717" mi="0" ci="6" mb="0" cb="0"/><line nr="718" mi="0" ci="13" mb="0" cb="0"/><line nr="719" mi="0" ci="6" mb="0" cb="0"/><line nr="720" mi="0" ci="14" mb="0" cb="0"/><line nr="721" mi="0" ci="6" mb="0" cb="0"/><line nr="722" mi="0" ci="14" mb="0" cb="0"/><line nr="723" mi="0" ci="6" mb="0" cb="0"/><line nr="724" mi="0" ci="14" mb="0" cb="0"/><line nr="725" mi="0" ci="6" mb="0" cb="0"/><line nr="726" mi="0" ci="13" mb="0" cb="0"/><line nr="727" mi="0" ci="6" mb="0" cb="0"/><line nr="728" mi="0" ci="14" mb="0" cb="0"/><line nr="729" mi="0" ci="6" mb="0" cb="0"/><line nr="730" mi="0" ci="13" mb="0" cb="0"/><line nr="731" mi="0" ci="6" mb="0" cb="0"/><line nr="732" mi="0" ci="14" mb="0" cb="0"/><line nr="733" mi="0" ci="6" mb="0" cb="0"/><line nr="734" mi="0" ci="14" mb="0" cb="0"/><line nr="735" mi="0" ci="6" mb="0" cb="0"/><line nr="736" mi="0" ci="14" mb="0" cb="0"/><line nr="737" mi="0" ci="6" mb="0" cb="0"/><line nr="738" mi="0" ci="14" mb="0" cb="0"/><line nr="739" mi="0" ci="6" mb="0" cb="0"/><line nr="740" mi="0" ci="14" mb="0" cb="0"/><line nr="741" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="14" mb="0" cb="0"/><line nr="743" mi="0" ci="6" mb="0" cb="0"/><line nr="744" mi="0" ci="14" mb="0" cb="0"/><line nr="745" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="14" mb="0" cb="0"/><line nr="747" mi="0" ci="6" mb="0" cb="0"/><line nr="748" mi="0" ci="14" mb="0" cb="0"/><line nr="749" mi="0" ci="6" mb="0" cb="0"/><line nr="750" mi="0" ci="14" mb="0" cb="0"/><line nr="751" mi="0" ci="6" mb="0" cb="0"/><line nr="752" mi="0" ci="14" mb="0" cb="0"/><line nr="753" mi="0" ci="6" mb="0" cb="0"/><line nr="754" mi="0" ci="14" mb="0" cb="0"/><line nr="755" mi="0" ci="6" mb="0" cb="0"/><line nr="756" mi="0" ci="14" mb="0" cb="0"/><line nr="757" mi="0" ci="6" mb="0" cb="0"/><line nr="758" mi="0" ci="14" mb="0" cb="0"/><line nr="759" mi="0" ci="6" mb="0" cb="0"/><line nr="760" mi="0" ci="1" mb="0" cb="0"/><line nr="763" mi="10" ci="0" mb="2" cb="0"/><line nr="764" mi="6" ci="0" mb="2" cb="0"/><line nr="765" mi="3" ci="0" mb="0" cb="0"/><line nr="767" mi="1" ci="0" mb="0" cb="0"/><line nr="768" mi="2" ci="0" mb="0" cb="0"/><line nr="771" mi="0" ci="5" mb="0" cb="0"/><line nr="773" mi="0" ci="6" mb="0" cb="0"/><line nr="775" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="779" mi="0" ci="6" mb="0" cb="0"/><line nr="781" mi="0" ci="6" mb="0" cb="0"/><line nr="783" mi="0" ci="6" mb="0" cb="0"/><line nr="785" mi="0" ci="6" mb="0" cb="0"/><line nr="787" mi="0" ci="6" mb="0" cb="0"/><line nr="789" mi="0" ci="6" mb="0" cb="0"/><line nr="791" mi="0" ci="6" mb="0" cb="0"/><line nr="793" mi="0" ci="6" mb="0" cb="0"/><line nr="795" mi="0" ci="6" mb="0" cb="0"/><line nr="797" mi="0" ci="6" mb="0" cb="0"/><line nr="799" mi="0" ci="6" mb="0" cb="0"/><line nr="801" mi="0" ci="6" mb="0" cb="0"/><line nr="803" mi="0" ci="6" mb="0" cb="0"/><line nr="805" mi="0" ci="6" mb="0" cb="0"/><line nr="807" mi="0" ci="6" mb="0" cb="0"/><line nr="809" mi="0" ci="6" mb="0" cb="0"/><line nr="811" mi="0" ci="6" mb="0" cb="0"/><line nr="813" mi="0" ci="6" mb="0" cb="0"/><line nr="815" mi="0" ci="6" mb="0" cb="0"/><line nr="817" mi="0" ci="6" mb="0" cb="0"/><line nr="819" mi="0" ci="6" mb="0" cb="0"/><line nr="821" mi="0" ci="6" mb="0" cb="0"/><line nr="823" mi="0" ci="6" mb="0" cb="0"/><line nr="825" mi="0" ci="6" mb="0" cb="0"/><line nr="827" mi="0" ci="6" mb="0" cb="0"/><line nr="829" mi="0" ci="6" mb="0" cb="0"/><line nr="831" mi="0" ci="6" mb="0" cb="0"/><line nr="833" mi="0" ci="6" mb="0" cb="0"/><line nr="835" mi="0" ci="6" mb="0" cb="0"/><line nr="837" mi="0" ci="6" mb="0" cb="0"/><line nr="839" mi="0" ci="6" mb="0" cb="0"/><line nr="841" mi="0" ci="6" mb="0" cb="0"/><line nr="843" mi="0" ci="6" mb="0" cb="0"/><line nr="845" mi="0" ci="6" mb="0" cb="0"/><line nr="847" mi="0" ci="6" mb="0" cb="0"/><line nr="849" mi="0" ci="6" mb="0" cb="0"/><line nr="851" mi="0" ci="6" mb="0" cb="0"/><line nr="853" mi="0" ci="6" mb="0" cb="0"/><line nr="855" mi="0" ci="6" mb="0" cb="0"/><line nr="857" mi="0" ci="6" mb="0" cb="0"/><line nr="859" mi="0" ci="6" mb="0" cb="0"/><line nr="861" mi="0" ci="6" mb="0" cb="0"/><line nr="863" mi="0" ci="6" mb="0" cb="0"/><line nr="865" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="6" mb="0" cb="0"/><line nr="869" mi="0" ci="6" mb="0" cb="0"/><line nr="871" mi="0" ci="6" mb="0" cb="0"/><line nr="873" mi="0" ci="6" mb="0" cb="0"/><line nr="875" mi="0" ci="6" mb="0" cb="0"/><line nr="877" mi="0" ci="6" mb="0" cb="0"/><line nr="879" mi="0" ci="6" mb="0" cb="0"/><line nr="881" mi="0" ci="6" mb="0" cb="0"/><line nr="883" mi="0" ci="6" mb="0" cb="0"/><line nr="885" mi="0" ci="6" mb="0" cb="0"/><line nr="887" mi="0" ci="6" mb="0" cb="0"/><line nr="889" mi="0" ci="6" mb="0" cb="0"/><line nr="891" mi="0" ci="6" mb="0" cb="0"/><line nr="893" mi="0" ci="6" mb="0" cb="0"/><line nr="895" mi="0" ci="6" mb="0" cb="0"/><line nr="897" mi="0" ci="6" mb="0" cb="0"/><line nr="899" mi="0" ci="6" mb="0" cb="0"/><line nr="901" mi="0" ci="6" mb="0" cb="0"/><line nr="903" mi="0" ci="6" mb="0" cb="0"/><line nr="905" mi="0" ci="6" mb="0" cb="0"/><line nr="907" mi="0" ci="6" mb="0" cb="0"/><line nr="909" mi="0" ci="6" mb="0" cb="0"/><line nr="911" mi="0" ci="6" mb="0" cb="0"/><line nr="913" mi="0" ci="6" mb="0" cb="0"/><line nr="915" mi="0" ci="6" mb="0" cb="0"/><line nr="917" mi="0" ci="6" mb="0" cb="0"/><line nr="919" mi="0" ci="6" mb="0" cb="0"/><line nr="921" mi="0" ci="6" mb="0" cb="0"/><line nr="923" mi="0" ci="6" mb="0" cb="0"/><line nr="925" mi="0" ci="6" mb="0" cb="0"/><line nr="927" mi="0" ci="6" mb="0" cb="0"/><line nr="929" mi="0" ci="6" mb="0" cb="0"/><line nr="931" mi="0" ci="6" mb="0" cb="0"/><line nr="933" mi="0" ci="6" mb="0" cb="0"/><line nr="935" mi="0" ci="6" mb="0" cb="0"/><line nr="937" mi="0" ci="6" mb="0" cb="0"/><line nr="939" mi="0" ci="6" mb="0" cb="0"/><line nr="941" mi="0" ci="6" mb="0" cb="0"/><line nr="943" mi="0" ci="6" mb="0" cb="0"/><line nr="945" mi="0" ci="6" mb="0" cb="0"/><line nr="947" mi="0" ci="6" mb="0" cb="0"/><line nr="949" mi="0" ci="6" mb="0" cb="0"/><line nr="951" mi="0" ci="6" mb="0" cb="0"/><line nr="953" mi="0" ci="6" mb="0" cb="0"/><line nr="955" mi="0" ci="6" mb="0" cb="0"/><line nr="957" mi="0" ci="6" mb="0" cb="0"/><line nr="959" mi="0" ci="6" mb="0" cb="0"/><line nr="961" mi="0" ci="6" mb="0" cb="0"/><line nr="963" mi="0" ci="6" mb="0" cb="0"/><line nr="965" mi="0" ci="6" mb="0" cb="0"/><line nr="967" mi="0" ci="6" mb="0" cb="0"/><line nr="969" mi="0" ci="6" mb="0" cb="0"/><line nr="971" mi="0" ci="6" mb="0" cb="0"/><line nr="973" mi="0" ci="6" mb="0" cb="0"/><line nr="975" mi="0" ci="6" mb="0" cb="0"/><line nr="977" mi="0" ci="6" mb="0" cb="0"/><line nr="979" mi="0" ci="6" mb="0" cb="0"/><line nr="981" mi="0" ci="6" mb="0" cb="0"/><line nr="984" mi="0" ci="1" mb="0" cb="0"/><line nr="985" mi="0" ci="1" mb="0" cb="0"/><line nr="986" mi="0" ci="1" mb="0" cb="0"/><line nr="987" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="6405"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="850"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReturnStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstructorDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleMemberAnnotationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionalExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayCreationLevelMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CatchClauseMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwitchEntryMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BreakStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumConstantDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodReferenceExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableDeclarationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleNameMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayCreationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NormalAnnotationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectCreationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SynchronizedStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InitializerDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IfStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableDeclaratorMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleRequiresDirectiveMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodCallExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InstanceOfExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnionTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CallableDeclarationMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnparsableStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwitchExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VoidTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleUsesDirectiveMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyMetaModel.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="14" ci="0" mb="4" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="2" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="135" mi="20" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="2" cb="0"/><line nr="141" mi="9" ci="0" mb="4" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="180" mi="0" ci="12" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="12" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="222" mi="0" ci="9" mb="1" cb="1"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="16" mb="0" cb="2"/><line nr="225" mi="0" ci="6" mb="0" cb="2"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="164"/><counter type="BRANCH" missed="17" covered="15"/><counter type="LINE" missed="22" covered="34"/><counter type="COMPLEXITY" missed="21" covered="21"/><counter type="METHOD" missed="12" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssignExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalClassDeclarationStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleOpensDirectiveMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnknownTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompilationUnitMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavadocCommentMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrimitiveTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WhileStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeDeclarationMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlockCommentMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReferenceTypeMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContinueStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkerAnnotationExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WildcardTypeMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StatementMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaseNodeMetaModel.java"><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="13" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="2" cb="0"/><line nr="140" mi="9" ci="0" mb="4" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="10" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="18" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="2" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="11" ci="0" mb="2" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="4" cb="0"/><line nr="198" mi="3" ci="0" mb="2" cb="0"/><line nr="199" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="178" covered="88"/><counter type="BRANCH" missed="28" covered="2"/><counter type="LINE" missed="35" covered="25"/><counter type="COMPLEXITY" missed="25" covered="11"/><counter type="METHOD" missed="11" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineCommentMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BodyDeclarationMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationExprMetaModel.java"><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReceiverParameterMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForEachStmtMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharLiteralExprMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldDeclarationMetaModel.java"><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="329" covered="7728"/><counter type="BRANCH" missed="49" covered="17"/><counter type="LINE" missed="62" covered="1147"/><counter type="COMPLEXITY" missed="49" covered="156"/><counter type="METHOD" missed="24" covered="148"/><counter type="CLASS" missed="0" covered="109"/></package><package name="com/github/javaparser/ast/nodeTypes/modifiers"><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithProtectedModifier" sourcefilename="NodeWithProtectedModifier.java"><method name="isProtected" desc="()Z" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProtected" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithAbstractModifier" sourcefilename="NodeWithAbstractModifier.java"><method name="isAbstract" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAbstract" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithPrivateModifier" sourcefilename="NodeWithPrivateModifier.java"><method name="isPrivate" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrivate" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithPublicModifier" sourcefilename="NodeWithPublicModifier.java"><method name="isPublic" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPublic" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithFinalModifier" sourcefilename="NodeWithFinalModifier.java"><method name="isFinal" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFinal" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithStrictfpModifier" sourcefilename="NodeWithStrictfpModifier.java"><method name="isStrictfp" desc="()Z" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStrictfp" desc="(Z)Lcom/github/javaparser/ast/Node;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/modifiers/NodeWithStaticModifier" sourcefilename="NodeWithStaticModifier.java"><method name="isStatic" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="(Z)Lcom/github/javaparser/ast/Node;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NodeWithFinalModifier.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithPublicModifier.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithStaticModifier.java"><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithStrictfpModifier.java"><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithPrivateModifier.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithProtectedModifier.java"><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithAbstractModifier.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="43" covered="20"/><counter type="LINE" missed="9" covered="5"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="2" covered="5"/></package><package name="com/github/javaparser/printer/concretesyntaxmodel"><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmToken" sourcefilename="CsmToken.java"><method name="getTokenType" desc="()I" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/github/javaparser/printer/concretesyntaxmodel/CsmToken$TokenContentCalculator;)V" line="71"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="92"><counter type="INSTRUCTION" missed="17" covered="38"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="104"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhiteSpace" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNewLine" desc="()Z" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="145"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="6" covered="33"/><counter type="COMPLEXITY" missed="13" covered="14"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmSingleReference" sourcefilename="CsmSingleReference.java"><method name="getProperty" desc="()Lcom/github/javaparser/ast/observer/ObservableProperty;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmAttribute" sourcefilename="CsmAttribute.java"><method name="getProperty" desc="()Lcom/github/javaparser/ast/observer/ObservableProperty;" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenType" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;Ljava/lang/String;)I" line="56"><counter type="INSTRUCTION" missed="81" covered="43"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="63"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmList" sourcefilename="CsmList.java"><method name="getProperty" desc="()Lcom/github/javaparser/ast/observer/ObservableProperty;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeparatorPost" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeparatorPre" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreceeding" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFollowing" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="61"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="78"><counter type="INSTRUCTION" missed="65" covered="73"/><counter type="BRANCH" missed="25" covered="17"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="122"/><counter type="BRANCH" missed="25" covered="17"/><counter type="LINE" missed="15" covered="30"/><counter type="COMPLEXITY" missed="16" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmSequence" sourcefilename="CsmSequence.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="33"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$prettyPrint$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/PrintingHelper" sourcefilename="PrintingHelper.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmOrphanCommentsEnding" sourcefilename="CsmOrphanCommentsEnding.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmElement" sourcefilename="CsmElement.java"><method name="child" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="attribute" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sequence" desc="([Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="string" desc="(ILjava/lang/String;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="string" desc="(I)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringToken" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charToken" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="token" desc="(I)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="token" desc="(ILcom/github/javaparser/printer/concretesyntaxmodel/CsmToken$TokenContentCalculator;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="72"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="conditional" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="conditional" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="conditional" desc="(Ljava/util/List;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="space" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="semicolon" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comment" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newline" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="none" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="102"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comma" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="118"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="122"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orphanCommentsEnding" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orphanCommentsBeforeThis" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indent" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unindent" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="block" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="143"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="173"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="1" covered="26"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmConditional" sourcefilename="CsmConditional.java"><method name="getCondition" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperty" desc="()Lcom/github/javaparser/ast/observer/ObservableProperty;" line="43"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElseElement" desc="()Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="93"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="112"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmChar" sourcefilename="CsmChar.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmNone" sourcefilename="CsmNone.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmString" sourcefilename="CsmString.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmMix" sourcefilename="CsmMix.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="16"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="37"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$1" desc="(Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$prettyPrint$0" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;Lcom/github/javaparser/printer/concretesyntaxmodel/CsmElement;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="28"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmComment" sourcefilename="CsmComment.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/github/javaparser/ast/comments/Comment;Lcom/github/javaparser/printer/SourcePrinter;)V" line="34"><counter type="INSTRUCTION" missed="7" covered="53"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$prettyPrint$0" desc="(Lcom/github/javaparser/printer/SourcePrinter;Lcom/github/javaparser/ast/comments/Comment;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmIndent" sourcefilename="CsmIndent.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmConditional$Condition" sourcefilename="CsmConditional.java"><method name="evaluate" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;)Z" line="68"><counter type="INSTRUCTION" missed="6" covered="51"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="95"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/printer/concretesyntaxmodel/CsmUnindent" sourcefilename="CsmUnindent.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/printer/SourcePrinter;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CsmNone.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmElement.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="13" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="26" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="173"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="1" covered="26"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmList.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="13" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="1" cb="1"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="3"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="1" cb="3"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="1" cb="3"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="1" cb="3"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="4" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="4" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="4" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="4" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="122"/><counter type="BRANCH" missed="25" covered="17"/><counter type="LINE" missed="15" covered="30"/><counter type="COMPLEXITY" missed="16" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmAttribute.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="2" cb="4"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="2" cb="0"/><line nr="62" mi="6" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="18" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="18" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="63"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmConditional.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="1" cb="1"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="20" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="1" cb="3"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="4"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="2"/><line nr="111" mi="0" ci="12" mb="0" cb="4"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="207"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CsmOrphanCommentsEnding.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="4"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmToken.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="2" ci="7" mb="2" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="2" ci="5" mb="1" cb="1"/><line nr="98" mi="6" ci="9" mb="4" cb="2"/><line nr="99" mi="7" ci="9" mb="2" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="1" ci="12" mb="1" cb="1"/><line nr="106" mi="4" ci="9" mb="1" cb="1"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="145"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="6" covered="33"/><counter type="COMPLEXITY" missed="13" covered="14"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmChar.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmMix.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="1" cb="1"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="2" cb="0"/><line nr="38" mi="9" ci="0" mb="4" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="16" ci="0" mb="4" cb="0"/><line nr="47" mi="9" ci="0" mb="2" cb="0"/><line nr="52" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="28"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmString.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmSingleReference.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmUnindent.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmComment.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmSequence.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="1" cb="1"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrintingHelper.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CsmIndent.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="329" covered="1006"/><counter type="BRANCH" missed="67" covered="97"/><counter type="LINE" missed="48" covered="238"/><counter type="COMPLEXITY" missed="60" covered="124"/><counter type="METHOD" missed="12" covered="88"/><counter type="CLASS" missed="0" covered="17"/></package><package name="com/github/javaparser/ast/comments"><class name="com/github/javaparser/ast/comments/BlockComment" sourcefilename="BlockComment.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/comments/BlockComment;" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BlockCommentMetaModel;" line="93"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="99"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlockComment" desc="()Z" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBlockComment" desc="()Lcom/github/javaparser/ast/comments/BlockComment;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBlockComment" desc="(Ljava/util/function/Consumer;)V" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlockComment" desc="()Ljava/util/Optional;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="29"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/comments/JavadocComment" sourcefilename="JavadocComment.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()Lcom/github/javaparser/javadoc/Javadoc;" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/comments/JavadocComment;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/JavadocCommentMetaModel;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="101"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJavadocComment" desc="()Z" line="109"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asJavadocComment" desc="()Lcom/github/javaparser/ast/comments/JavadocComment;" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifJavadocComment" desc="(Ljava/util/function/Consumer;)V" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJavadocComment" desc="()Ljava/util/Optional;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="28"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/comments/Comment" sourcefilename="Comment.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContent" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/comments/Comment;" line="84"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLineComment" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asLineComment" desc="()Lcom/github/javaparser/ast/comments/LineComment;" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommentedNode" desc="()Ljava/util/Optional;" line="104"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCommentedNode" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/comments/Comment;" line="114"><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOrphan" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()Z" line="136"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="149"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/comments/Comment;" line="157"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CommentMetaModel;" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="169"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlockComment" desc="()Z" line="176"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBlockComment" desc="()Lcom/github/javaparser/ast/comments/BlockComment;" line="181"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJavadocComment" desc="()Z" line="186"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asJavadocComment" desc="()Lcom/github/javaparser/ast/comments/JavadocComment;" line="191"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBlockComment" desc="(Ljava/util/function/Consumer;)V" line="196"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifJavadocComment" desc="(Ljava/util/function/Consumer;)V" line="200"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLineComment" desc="(Ljava/util/function/Consumer;)V" line="204"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlockComment" desc="()Ljava/util/Optional;" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJavadocComment" desc="()Ljava/util/Optional;" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLineComment" desc="()Ljava/util/Optional;" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="91"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="24" covered="27"/><counter type="COMPLEXITY" missed="21" covered="12"/><counter type="METHOD" missed="16" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/comments/CommentsCollection" sourcefilename="CommentsCollection.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineComments" desc="()Ljava/util/Set;" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockComments" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavadocComments" desc="()Ljava/util/Set;" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addComment" desc="(Lcom/github/javaparser/ast/comments/Comment;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="72"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComments" desc="()Ljava/util/TreeSet;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lcom/github/javaparser/ast/comments/CommentsCollection;)Lcom/github/javaparser/ast/comments/CommentsCollection;" line="101"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Lcom/github/javaparser/ast/comments/CommentsCollection;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$minus$9" desc="(Lcom/github/javaparser/ast/comments/CommentsCollection;Lcom/github/javaparser/ast/comments/Comment;)Z" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getJavadocComments$8" desc="()Ljava/util/TreeSet;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getJavadocComments$7" desc="(Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/JavadocComment;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getJavadocComments$6" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBlockComments$5" desc="()Ljava/util/TreeSet;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBlockComments$4" desc="(Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/BlockComment;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBlockComments$3" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getLineComments$2" desc="()Ljava/util/TreeSet;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getLineComments$1" desc="(Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/LineComment;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getLineComments$0" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="111"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="23"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="3" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/comments/LineComment" sourcefilename="LineComment.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLineComment" desc="()Z" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/comments/LineComment;" line="92"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LineCommentMetaModel;" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="104"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLineComment" desc="()Lcom/github/javaparser/ast/comments/LineComment;" line="112"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifLineComment" desc="(Ljava/util/function/Consumer;)V" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLineComment" desc="()Ljava/util/Optional;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="33"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavadocComment.java"><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="28"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comment.java"><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="12" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="12" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="91"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="24" covered="27"/><counter type="COMPLEXITY" missed="21" covered="12"/><counter type="METHOD" missed="16" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlockComment.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="29"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentsCollection.java"><line nr="37" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="20" ci="0" mb="4" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="9" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="111"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="23"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="3" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineComment.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="33"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="288" covered="292"/><counter type="BRANCH" missed="33" covered="11"/><counter type="LINE" missed="78" covered="84"/><counter type="COMPLEXITY" missed="57" covered="50"/><counter type="METHOD" missed="39" covered="46"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/github/javaparser/ast/body"><class name="com/github/javaparser/ast/body/EnumConstantDeclaration" sourcefilename="EnumConstantDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="69"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="()Lcom/github/javaparser/ast/NodeList;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassBody" desc="()Lcom/github/javaparser/ast/NodeList;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="113"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassBody" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="127"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="141"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="156"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="176"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/EnumConstantDeclarationMetaModel;" line="182"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="188"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnumConstantDeclaration" desc="()Z" line="212"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumConstantDeclaration" desc="()Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEnumConstantDeclaration" desc="(Ljava/util/function/Consumer;)V" line="223"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;" line="228"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnumConstantDeclaration" desc="()Ljava/util/Optional;" line="234"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="170" covered="150"/><counter type="BRANCH" missed="27" covered="7"/><counter type="LINE" missed="39" covered="39"/><counter type="COMPLEXITY" missed="25" covered="13"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/MethodDeclaration" sourcefilename="MethodDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/NodeList;)V" line="76"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="80"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="85"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;ZLcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="93"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Ljava/util/Optional;" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="133"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="151"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="170"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThrownExceptions" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclarationAsString" desc="(ZZZ)Ljava/lang/String;" line="199"><counter type="INSTRUCTION" missed="26" covered="107"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNative" desc="()Z" line="247"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSynchronized" desc="()Z" line="251"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefault" desc="()Z" line="255"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNative" desc="(Z)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="259"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSynchronized" desc="(Z)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefault" desc="(Z)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="267"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="273"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeBody" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="286"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="292"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/MethodDeclarationMetaModel;" line="298"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="304"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethodDeclaration" desc="()Z" line="322"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodDeclaration" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="328"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifMethodDeclaration" desc="(Ljava/util/function/Consumer;)V" line="333"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="338"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodDeclaration" desc="()Ljava/util/Optional;" line="344"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="167" covered="327"/><counter type="BRANCH" missed="19" covered="25"/><counter type="LINE" missed="33" covered="77"/><counter type="COMPLEXITY" missed="26" covered="31"/><counter type="METHOD" missed="12" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/CallableDeclaration" sourcefilename="CallableDeclaration.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="101"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="121"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="141"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThrownExceptions" desc="()Lcom/github/javaparser/ast/NodeList;" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThrownExceptions" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="161"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="181"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclarationAsString" desc="(ZZ)Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclarationAsString" desc="()Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendThrowsIfRequested" desc="(Z)Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="223"><counter type="INSTRUCTION" missed="50" covered="58"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSignature" desc="()Lcom/github/javaparser/ast/body/CallableDeclaration$Signature;" line="314"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripAnnotations" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/type/Type;" line="318"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripGenerics" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/type/Type;" line="325"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeWithVarargsAsArray" desc="(Lcom/github/javaparser/ast/body/Parameter;)Lcom/github/javaparser/ast/type/Type;" line="335"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/CallableDeclaration;" line="345"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CallableDeclarationMetaModel;" line="351"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="357"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCallableDeclaration" desc="()Z" line="399"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCallableDeclaration" desc="()Lcom/github/javaparser/ast/body/CallableDeclaration;" line="405"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifCallableDeclaration" desc="(Ljava/util/function/Consumer;)V" line="410"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReceiverParameter" desc="()Ljava/util/Optional;" line="415"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReceiverParameter" desc="(Lcom/github/javaparser/ast/body/ReceiverParameter;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="421"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeReceiverParameter" desc="()Lcom/github/javaparser/ast/body/CallableDeclaration;" line="434"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCallableDeclaration" desc="()Ljava/util/Optional;" line="440"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="237" covered="387"/><counter type="BRANCH" missed="41" covered="41"/><counter type="LINE" missed="52" covered="99"/><counter type="COMPLEXITY" missed="35" covered="36"/><counter type="METHOD" missed="9" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/ClassOrInterfaceDeclaration" sourcefilename="ClassOrInterfaceDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;ZLjava/lang/String;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;ZLcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="78"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;ZLcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtendedTypes" desc="()Lcom/github/javaparser/ast/NodeList;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImplementedTypes" desc="()Lcom/github/javaparser/ast/NodeList;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeParameters" desc="()Lcom/github/javaparser/ast/NodeList;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterface" desc="()Z" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtendedTypes" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="128"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImplementedTypes" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="142"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInterface" desc="(Z)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="156"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="166"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="181"><counter type="INSTRUCTION" missed="47" covered="27"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="10" covered="5"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocalClassDeclaration" desc="()Z" line="208"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInnerClass" desc="()Z" line="216"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="222"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ClassOrInterfaceDeclarationMetaModel;" line="228"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="234"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassOrInterfaceDeclaration" desc="()Z" line="260"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassOrInterfaceDeclaration" desc="()Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="266"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifClassOrInterfaceDeclaration" desc="(Ljava/util/function/Consumer;)V" line="271"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="276"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassOrInterfaceDeclaration" desc="()Ljava/util/Optional;" line="282"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isLocalClassDeclaration$0" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Boolean;" line="208"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="179" covered="254"/><counter type="BRANCH" missed="27" covered="21"/><counter type="LINE" missed="36" covered="56"/><counter type="COMPLEXITY" missed="24" covered="26"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/VariableDeclarator" sourcefilename="VariableDeclarator.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="customInitialization" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitializer" desc="()Ljava/util/Optional;" line="154"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="159"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="164"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInitializer" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="184"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInitializer" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="202"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="212"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="227"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInitializer" desc="()Lcom/github/javaparser/ast/body/VariableDeclarator;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/VariableDeclarator;" line="246"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/VariableDeclaratorMetaModel;" line="252"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="258"><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedValueDeclaration;" line="279"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="200"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="20" covered="55"/><counter type="COMPLEXITY" missed="13" covered="23"/><counter type="METHOD" missed="6" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/AnnotationMemberDeclaration" sourcefilename="AnnotationMemberDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="81"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/expr/Expression;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/util/Optional;" line="111"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDefaultValue" desc="()Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultValue" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="148"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="161"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="175"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="189"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="204"><counter type="INSTRUCTION" missed="28" covered="14"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="224"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/AnnotationMemberDeclarationMetaModel;" line="230"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="236"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationMemberDeclaration" desc="()Z" line="264"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationMemberDeclaration" desc="()Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="270"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifAnnotationMemberDeclaration" desc="(Ljava/util/function/Consumer;)V" line="275"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedAnnotationMemberDeclaration;" line="280"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationMemberDeclaration" desc="()Ljava/util/Optional;" line="286"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="136" covered="215"/><counter type="BRANCH" missed="24" covered="16"/><counter type="LINE" missed="34" covered="58"/><counter type="COMPLEXITY" missed="22" covered="22"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/FieldDeclaration" sourcefilename="FieldDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="84"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariables" desc="()Lcom/github/javaparser/ast/NodeList;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="139"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariables" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="153"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createGetter" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="174"><counter type="INSTRUCTION" missed="5" covered="88"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSetter" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="201"><counter type="INSTRUCTION" missed="5" covered="114"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTransient" desc="()Z" line="221"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVolatile" desc="()Z" line="225"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTransient" desc="(Z)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVolatile" desc="(Z)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="239"><counter type="INSTRUCTION" missed="16" covered="36"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/FieldDeclaration;" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/FieldDeclarationMetaModel;" line="265"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="271"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFieldDeclaration" desc="()Z" line="291"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFieldDeclaration" desc="()Lcom/github/javaparser/ast/body/FieldDeclaration;" line="297"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifFieldDeclaration" desc="(Ljava/util/function/Consumer;)V" line="302"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;" line="307"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFieldDeclaration" desc="()Ljava/util/Optional;" line="313"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$createSetter$3" desc="(Ljava/util/Optional;Ljava/lang/String;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="211"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createSetter$2" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="211"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createGetter$1" desc="(Ljava/util/Optional;Ljava/lang/String;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="184"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$createGetter$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="184"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="451"/><counter type="BRANCH" missed="18" covered="30"/><counter type="LINE" missed="32" covered="71"/><counter type="COMPLEXITY" missed="24" covered="31"/><counter type="METHOD" missed="11" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/ConstructorDeclaration" sourcefilename="ConstructorDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="73"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="78"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/body/ReceiverParameter;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="116"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThrownExceptions" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeParameters" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclarationAsString" desc="(ZZZ)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="7" covered="73"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="191"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="199"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ConstructorDeclarationMetaModel;" line="205"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="211"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstructorDeclaration" desc="()Z" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConstructorDeclaration" desc="()Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="229"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifConstructorDeclaration" desc="(Ljava/util/function/Consumer;)V" line="234"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration;" line="239"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toConstructorDeclaration" desc="()Ljava/util/Optional;" line="245"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="108" covered="224"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="22" covered="46"/><counter type="COMPLEXITY" missed="15" covered="20"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/AnnotationDeclaration" sourcefilename="AnnotationDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="86"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/AnnotationDeclarationMetaModel;" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="106"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationDeclaration" desc="()Z" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationDeclaration" desc="()Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAnnotationDeclaration" desc="(Ljava/util/function/Consumer;)V" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedAnnotationDeclaration;" line="130"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationDeclaration" desc="()Ljava/util/Optional;" line="136"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/ReceiverParameter" sourcefilename="ReceiverParameter.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/Name;)V" line="64"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/Name;)V" line="79"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/Name;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/ReceiverParameter;" line="113"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/ReceiverParameter;" line="139"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/ReceiverParameter;" line="154"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ReceiverParameterMetaModel;" line="160"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="165"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/body/ReceiverParameter;" line="170"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="185"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="199"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="160" covered="106"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="36" covered="33"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/VariableDeclarator$1" sourcefilename="VariableDeclarator.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyChange" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/TypeDeclaration" sourcefilename="TypeDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMember" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMembers" desc="()Lcom/github/javaparser/ast/NodeList;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMembers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="113"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="128"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="143"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="163"><counter type="INSTRUCTION" missed="9" covered="43"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopLevelType" desc="()Z" line="184"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCallablesWithSignature" desc="(Lcom/github/javaparser/ast/body/CallableDeclaration$Signature;)Ljava/util/List;" line="191"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNestedType" desc="()Z" line="199"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/TypeDeclaration;" line="205"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/TypeDeclarationMetaModel;" line="211"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="217"><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeDeclaration" desc="()Z" line="241"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeDeclaration" desc="()Lcom/github/javaparser/ast/body/TypeDeclaration;" line="247"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeDeclaration" desc="(Ljava/util/function/Consumer;)V" line="252"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeDeclaration" desc="()Ljava/util/Optional;" line="258"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isNestedType$4" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Boolean;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getCallablesWithSignature$3" desc="(Lcom/github/javaparser/ast/body/CallableDeclaration$Signature;Lcom/github/javaparser/ast/body/CallableDeclaration;)Z" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCallablesWithSignature$2" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/CallableDeclaration;" line="191"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCallablesWithSignature$1" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="191"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isTopLevelType$0" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Boolean;" line="184"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="162" covered="201"/><counter type="BRANCH" missed="14" covered="20"/><counter type="LINE" missed="31" covered="49"/><counter type="COMPLEXITY" missed="22" covered="22"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/InitializerDeclaration" sourcefilename="InitializerDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZLcom/github/javaparser/ast/stmt/BlockStmt;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;ZLcom/github/javaparser/ast/stmt/BlockStmt;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="95"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="(Z)Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="109"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="120"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/InitializerDeclarationMetaModel;" line="134"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="140"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInitializerDeclaration" desc="()Z" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInitializerDeclaration" desc="()Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="158"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifInitializerDeclaration" desc="(Ljava/util/function/Consumer;)V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInitializerDeclaration" desc="()Ljava/util/Optional;" line="169"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="91"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="16" covered="28"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/BodyDeclaration" sourcefilename="BodyDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="79"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="94"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/BodyDeclaration;" line="108"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BodyDeclarationMetaModel;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="120"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationDeclaration" desc="()Z" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationDeclaration" desc="()Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="138"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnnotationMemberDeclaration" desc="()Z" line="143"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAnnotationMemberDeclaration" desc="()Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;" line="148"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCallableDeclaration" desc="()Z" line="153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asCallableDeclaration" desc="()Lcom/github/javaparser/ast/body/CallableDeclaration;" line="158"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassOrInterfaceDeclaration" desc="()Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClassOrInterfaceDeclaration" desc="()Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="168"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstructorDeclaration" desc="()Z" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConstructorDeclaration" desc="()Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="178"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnumConstantDeclaration" desc="()Z" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumConstantDeclaration" desc="()Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="188"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnumDeclaration" desc="()Z" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumDeclaration" desc="()Lcom/github/javaparser/ast/body/EnumDeclaration;" line="198"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFieldDeclaration" desc="()Z" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFieldDeclaration" desc="()Lcom/github/javaparser/ast/body/FieldDeclaration;" line="208"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInitializerDeclaration" desc="()Z" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInitializerDeclaration" desc="()Lcom/github/javaparser/ast/body/InitializerDeclaration;" line="218"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethodDeclaration" desc="()Z" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethodDeclaration" desc="()Lcom/github/javaparser/ast/body/MethodDeclaration;" line="228"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeDeclaration" desc="()Z" line="233"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeDeclaration" desc="()Lcom/github/javaparser/ast/body/TypeDeclaration;" line="238"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAnnotationDeclaration" desc="(Ljava/util/function/Consumer;)V" line="243"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAnnotationMemberDeclaration" desc="(Ljava/util/function/Consumer;)V" line="247"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifCallableDeclaration" desc="(Ljava/util/function/Consumer;)V" line="251"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifClassOrInterfaceDeclaration" desc="(Ljava/util/function/Consumer;)V" line="255"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifConstructorDeclaration" desc="(Ljava/util/function/Consumer;)V" line="259"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEnumConstantDeclaration" desc="(Ljava/util/function/Consumer;)V" line="263"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEnumDeclaration" desc="(Ljava/util/function/Consumer;)V" line="267"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifFieldDeclaration" desc="(Ljava/util/function/Consumer;)V" line="271"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifInitializerDeclaration" desc="(Ljava/util/function/Consumer;)V" line="275"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifMethodDeclaration" desc="(Ljava/util/function/Consumer;)V" line="279"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTypeDeclaration" desc="(Ljava/util/function/Consumer;)V" line="283"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationDeclaration" desc="()Ljava/util/Optional;" line="287"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAnnotationMemberDeclaration" desc="()Ljava/util/Optional;" line="292"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCallableDeclaration" desc="()Ljava/util/Optional;" line="297"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toClassOrInterfaceDeclaration" desc="()Ljava/util/Optional;" line="302"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toConstructorDeclaration" desc="()Ljava/util/Optional;" line="307"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnumConstantDeclaration" desc="()Ljava/util/Optional;" line="312"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnumDeclaration" desc="()Ljava/util/Optional;" line="317"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFieldDeclaration" desc="()Ljava/util/Optional;" line="322"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInitializerDeclaration" desc="()Ljava/util/Optional;" line="327"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMethodDeclaration" desc="()Ljava/util/Optional;" line="332"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTypeDeclaration" desc="()Ljava/util/Optional;" line="337"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="246" covered="77"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="58" covered="22"/><counter type="COMPLEXITY" missed="54" covered="8"/><counter type="METHOD" missed="49" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/CallableDeclaration$Signature" sourcefilename="CallableDeclaration.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="269"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterTypes" desc="()Ljava/util/List;" line="279"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="284"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="298"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="304"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="309"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="63"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/EnumDeclaration" sourcefilename="EnumDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntries" desc="()Lcom/github/javaparser/ast/NodeList;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntry" desc="(I)Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntry" desc="(ILcom/github/javaparser/ast/body/EnumConstantDeclaration;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEntry" desc="(Lcom/github/javaparser/ast/body/EnumConstantDeclaration;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImplementedTypes" desc="()Lcom/github/javaparser/ast/NodeList;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntries" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="120"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImplementedTypes" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="134"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnumConstant" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/EnumConstantDeclaration;" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="156"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/EnumDeclaration;" line="176"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/EnumDeclarationMetaModel;" line="182"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="188"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnumDeclaration" desc="()Z" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumDeclaration" desc="()Lcom/github/javaparser/ast/body/EnumDeclaration;" line="214"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifEnumDeclaration" desc="(Ljava/util/function/Consumer;)V" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumDeclaration;" line="224"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEnumDeclaration" desc="()Ljava/util/Optional;" line="230"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="172" covered="150"/><counter type="BRANCH" missed="24" covered="4"/><counter type="LINE" missed="38" covered="35"/><counter type="COMPLEXITY" missed="24" covered="13"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/body/Parameter" sourcefilename="Parameter.java"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="91"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;ZLcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="96"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/Type;ZLcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/type/Type;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVarArgs" desc="()Z" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/body/Parameter;" line="138"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVarArgs" desc="(Z)Lcom/github/javaparser/ast/body/Parameter;" line="152"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="165"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModifiers" desc="()Lcom/github/javaparser/ast/NodeList;" line="181"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/Parameter;" line="190"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/body/Parameter;" line="204"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/Parameter;" line="218"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="233"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVarArgsAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="258"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVarArgsAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/body/Parameter;" line="263"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/body/Parameter;" line="278"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ParameterMetaModel;" line="284"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="290"><counter type="INSTRUCTION" missed="72" covered="31"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="14" covered="7"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedParameterDeclaration;" line="323"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="220" covered="285"/><counter type="BRANCH" missed="30" covered="24"/><counter type="LINE" missed="40" covered="77"/><counter type="COMPLEXITY" missed="25" covered="27"/><counter type="METHOD" missed="6" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AnnotationDeclaration.java"><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassOrInterfaceDeclaration.java"><line nr="69" mi="0" ci="25" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="24" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="1" cb="1"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="1" cb="1"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="7" mb="1" cb="1"/><line nr="184" mi="6" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="7" mb="1" cb="1"/><line nr="190" mi="6" ci="0" mb="2" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="7" mb="1" cb="1"/><line nr="196" mi="6" ci="0" mb="2" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="14" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="6"/><line nr="222" mi="8" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="2" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="9" ci="0" mb="2" cb="0"/><line nr="237" mi="6" ci="0" mb="2" cb="0"/><line nr="238" mi="7" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="9" ci="0" mb="2" cb="0"/><line nr="243" mi="6" ci="0" mb="2" cb="0"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="9" ci="0" mb="2" cb="0"/><line nr="249" mi="6" ci="0" mb="2" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="179" covered="254"/><counter type="BRANCH" missed="27" covered="21"/><counter type="LINE" missed="36" covered="56"/><counter type="COMPLEXITY" missed="24" covered="26"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationMemberDeclaration.java"><line nr="72" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="1" cb="1"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="1" cb="1"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="1" cb="1"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="1" cb="1"/><line nr="207" mi="0" ci="4" mb="1" cb="1"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="2" cb="0"/><line nr="213" mi="6" ci="0" mb="2" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="2" ci="0" mb="2" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="4" ci="0" mb="2" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="244" mi="9" ci="0" mb="2" cb="0"/><line nr="245" mi="6" ci="0" mb="2" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="2" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="215"/><counter type="BRANCH" missed="24" covered="16"/><counter type="LINE" missed="34" covered="58"/><counter type="COMPLEXITY" missed="22" covered="22"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstructorDeclaration.java"><line nr="61" mi="0" ci="25" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="34" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="24" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="11" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="2" mb="0" cb="2"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="1" cb="1"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="2" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="2" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="224"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="22" covered="46"/><counter type="COMPLEXITY" missed="15" covered="20"/><counter type="METHOD" missed="10" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InitializerDeclaration.java"><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="2" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="91"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="16" covered="28"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodDeclaration.java"><line nr="68" mi="0" ci="28" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="25" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="23" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="1" cb="1"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="1" cb="1"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="1" cb="1"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="1" cb="1"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="11" mb="0" cb="2"/><line nr="227" mi="0" ci="2" mb="0" cb="2"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="1" cb="1"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="1" cb="1"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="1" cb="1"/><line nr="276" mi="0" ci="4" mb="0" cb="2"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="8" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="2" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="2" cb="0"/><line nr="307" mi="4" ci="0" mb="2" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="2" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="0" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="167" covered="327"/><counter type="BRANCH" missed="19" covered="25"/><counter type="LINE" missed="33" covered="77"/><counter type="COMPLEXITY" missed="26" covered="31"/><counter type="METHOD" missed="12" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CallableDeclaration.java"><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="1" cb="1"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="1" cb="1"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="2"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="1" cb="1"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="2"/><line nr="226" mi="0" ci="6" mb="1" cb="1"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="7" mb="0" cb="2"/><line nr="232" mi="0" ci="6" mb="1" cb="1"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="1" cb="1"/><line nr="238" mi="4" ci="0" mb="2" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="7" mb="1" cb="1"/><line nr="244" mi="6" ci="0" mb="2" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="7" mb="1" cb="1"/><line nr="250" mi="6" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="1" cb="1"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="2" cb="2"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="2"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="8" ci="0" mb="0" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="20" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="23" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="1" cb="1"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="2"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="2"/><line nr="337" mi="0" ci="7" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="8" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="9" ci="0" mb="2" cb="0"/><line nr="360" mi="6" ci="0" mb="2" cb="0"/><line nr="361" mi="7" ci="0" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="2" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="369" mi="9" ci="0" mb="2" cb="0"/><line nr="370" mi="6" ci="0" mb="2" cb="0"/><line nr="371" mi="7" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="3" ci="0" mb="2" cb="0"/><line nr="376" mi="4" ci="0" mb="2" cb="0"/><line nr="377" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="9" ci="0" mb="2" cb="0"/><line nr="382" mi="6" ci="0" mb="2" cb="0"/><line nr="383" mi="7" ci="0" mb="0" cb="0"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="9" ci="0" mb="2" cb="0"/><line nr="388" mi="6" ci="0" mb="2" cb="0"/><line nr="389" mi="7" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="393" mi="5" ci="0" mb="0" cb="0"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="2"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="6" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="1" cb="1"/><line nr="426" mi="5" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="261" covered="450"/><counter type="BRANCH" missed="44" covered="48"/><counter type="LINE" missed="59" covered="113"/><counter type="COMPLEXITY" missed="41" covered="42"/><counter type="METHOD" missed="12" covered="25"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EnumConstantDeclaration.java"><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="9" ci="0" mb="2" cb="0"/><line nr="159" mi="6" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="9" ci="0" mb="2" cb="0"/><line nr="165" mi="6" ci="0" mb="2" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="9" ci="0" mb="2" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="6" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="170" covered="150"/><counter type="BRANCH" missed="27" covered="7"/><counter type="LINE" missed="39" covered="39"/><counter type="COMPLEXITY" missed="25" covered="13"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeDeclaration.java"><line nr="59" mi="15" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="1" cb="1"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="6" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="2"/><line nr="172" mi="0" ci="6" mb="1" cb="1"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="14" mb="0" cb="0"/><line nr="191" mi="25" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="8" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="9" ci="0" mb="2" cb="0"/><line nr="220" mi="6" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="9" ci="0" mb="2" cb="0"/><line nr="226" mi="6" ci="0" mb="2" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="162" covered="201"/><counter type="BRANCH" missed="14" covered="20"/><counter type="LINE" missed="31" covered="49"/><counter type="COMPLEXITY" missed="22" covered="22"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldDeclaration.java"><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="1" cb="1"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="14" mb="2" cb="6"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="17" mb="0" cb="0"/><line nr="184" mi="0" ci="46" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="14" mb="2" cb="6"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="17" mb="0" cb="0"/><line nr="211" mi="0" ci="46" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="10" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="22" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="1" cb="1"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="2"/><line nr="242" mi="0" ci="6" mb="1" cb="1"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="9" mb="0" cb="2"/><line nr="248" mi="0" ci="6" mb="1" cb="1"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="2" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="9" ci="0" mb="2" cb="0"/><line nr="274" mi="6" ci="0" mb="2" cb="0"/><line nr="275" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="9" ci="0" mb="2" cb="0"/><line nr="280" mi="6" ci="0" mb="2" cb="0"/><line nr="281" mi="7" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="7" ci="0" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="451"/><counter type="BRANCH" missed="18" covered="30"/><counter type="LINE" missed="32" covered="71"/><counter type="COMPLEXITY" missed="24" covered="31"/><counter type="METHOD" missed="11" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BodyDeclaration.java"><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="7" mb="0" cb="2"/><line nr="97" mi="0" ci="6" mb="1" cb="1"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="9" ci="0" mb="2" cb="0"/><line nr="123" mi="6" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="12" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="12" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="12" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="12" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="12" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="12" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="12" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="12" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="12" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="77"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="58" covered="22"/><counter type="COMPLEXITY" missed="54" covered="8"/><counter type="METHOD" missed="49" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReceiverParameter.java"><line nr="60" mi="12" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="1" cb="1"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="9" ci="0" mb="2" cb="0"/><line nr="188" mi="6" ci="0" mb="2" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="9" ci="0" mb="2" cb="0"/><line nr="202" mi="6" ci="0" mb="2" cb="0"/><line nr="203" mi="7" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="2" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="160" covered="106"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="36" covered="33"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="8" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableDeclarator.java"><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="2" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="2"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="2"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="2" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="4" ci="0" mb="2" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="1" cb="1"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="4" mb="1" cb="1"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="1" cb="1"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="1" cb="1"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="279"/><counter type="BRANCH" missed="12" covered="26"/><counter type="LINE" missed="20" covered="69"/><counter type="COMPLEXITY" missed="15" covered="28"/><counter type="METHOD" missed="6" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Parameter.java"><line nr="73" mi="19" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="18" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="1" cb="1"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="2" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="2" cb="0"/><line nr="236" mi="6" ci="0" mb="2" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="9" ci="0" mb="2" cb="0"/><line nr="242" mi="6" ci="0" mb="2" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="9" ci="0" mb="2" cb="0"/><line nr="248" mi="6" ci="0" mb="2" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="1" cb="1"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="8" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="1" cb="1"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="7" mb="1" cb="1"/><line nr="293" mi="6" ci="0" mb="2" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="7" mb="1" cb="1"/><line nr="299" mi="6" ci="0" mb="2" cb="0"/><line nr="300" mi="7" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="1" cb="1"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="1" cb="1"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="9" ci="0" mb="2" cb="0"/><line nr="313" mi="6" ci="0" mb="2" cb="0"/><line nr="314" mi="7" ci="0" mb="0" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="220" covered="285"/><counter type="BRANCH" missed="30" covered="24"/><counter type="LINE" missed="40" covered="77"/><counter type="COMPLEXITY" missed="25" covered="27"/><counter type="METHOD" missed="6" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumDeclaration.java"><line nr="59" mi="0" ci="21" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="20" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="1" cb="1"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="1" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="9" ci="0" mb="2" cb="0"/><line nr="159" mi="6" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="9" ci="0" mb="2" cb="0"/><line nr="165" mi="6" ci="0" mb="2" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="2" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="9" ci="0" mb="2" cb="0"/><line nr="191" mi="6" ci="0" mb="2" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="9" ci="0" mb="2" cb="0"/><line nr="197" mi="6" ci="0" mb="2" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="7" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="172" covered="150"/><counter type="BRANCH" missed="24" covered="4"/><counter type="LINE" missed="38" covered="35"/><counter type="COMPLEXITY" missed="24" covered="13"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2293" covered="3319"/><counter type="BRANCH" missed="288" covered="252"/><counter type="LINE" missed="507" covered="786"/><counter type="COMPLEXITY" missed="360" covered="311"/><counter type="METHOD" missed="175" covered="226"/><counter type="CLASS" missed="0" covered="17"/></package><package name="com/github/javaparser/resolution/declarations"><class name="com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration" sourcefilename="ResolvedTypeParameterDeclaration.java"><method name="onType" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnType" desc="()Z" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnMethod" desc="()Z" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnConstructor" desc="()Z" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageName" desc="()Ljava/lang/String;" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedName" desc="()Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasLowerBound" desc="()Z" line="177"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasUpperBound" desc="()Z" line="189"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLowerBound" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="203"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpperBound" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="217"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedEnumDeclaration" sourcefilename="ResolvedEnumDeclaration.java"><method name="isEnum" desc="()Z" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnum" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumDeclaration;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasEnumConstant" desc="(Ljava/lang/String;)Z" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnumConstant" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getEnumConstant$2" desc="(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;" line="52"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getEnumConstant$1" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;)Z" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$hasEnumConstant$0" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;)Z" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedClassDeclaration" sourcefilename="ResolvedClassDeclaration.java"><method name="isClass" desc="()Z" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/AssociableToAST" sourcefilename="AssociableToAST.java"><method name="toAst" desc="()Ljava/util/Optional;" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedMethodLikeDeclaration" sourcefilename="ResolvedMethodLikeDeclaration.java"><method name="getPackageName" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassName" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedName" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSignature" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedSignature" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastParam" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedParameterDeclaration;" line="106"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasVariadicParameter" desc="()Z" line="117"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findTypeParameter" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="126"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpecifiedExceptions" desc="()Ljava/util/List;" line="149"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration" sourcefilename="ResolvedEnumConstantDeclaration.java"><method name="isEnumConstant" desc="()Z" line="33"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumConstant" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedTypeParametrizable" sourcefilename="ResolvedTypeParametrizable.java"><method name="isGeneric" desc="()Z" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedDeclaration" sourcefilename="ResolvedDeclaration.java"><method name="hasName" desc="()Z" line="35"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isField" desc="()Z" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVariable" desc="()Z" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnumConstant" desc="()Z" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isParameter" desc="()Z" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isType" desc="()Z" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethod" desc="()Z" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asField" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asParameter" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedParameterDeclaration;" line="93"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asType" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeDeclaration;" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asMethod" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="107"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnumConstant" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration;" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedInterfaceDeclaration" sourcefilename="ResolvedInterfaceDeclaration.java"><method name="isInterface" desc="()Z" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllInterfacesExtended" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedParameterDeclaration" sourcefilename="ResolvedParameterDeclaration.java"><method name="isParameter" desc="()Z" line="33"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasName" desc="()Z" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asParameter" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedParameterDeclaration;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeType" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration$1" sourcefilename="ResolvedTypeParameterDeclaration.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V" line="47"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnType" desc="()Z" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnMethod" desc="()Z" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredOnConstructor" desc="()Z" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainerQualifiedName" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainerId" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainer" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeParametrizable;" line="80"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBounds" desc="()Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containerType" desc="()Ljava/util/Optional;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration$Bound" sourcefilename="ResolvedTypeParameterDeclaration.java"><method name="&lt;init&gt;" desc="(ZLcom/github/javaparser/resolution/types/ResolvedType;)V" line="232"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extendsBound" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration$Bound;" line="244"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="superBound" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration$Bound;" line="254"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="261"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtends" desc="()Z" line="268"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuper" desc="()Z" line="275"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="280"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="288"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="299"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedTypeDeclaration" sourcefilename="ResolvedTypeDeclaration.java"><method name="internalTypes" desc="()Ljava/util/Set;" line="46"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInternalType" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="54"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasInternalType" desc="(Ljava/lang/String;)Z" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClass" desc="()Z" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInterface" desc="()Z" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnum" desc="()Z" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeParameter" desc="()Z" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isType" desc="()Z" line="108"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAnonymousClass" desc="()Z" line="131"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asType" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeDeclaration;" line="136"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asClass" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedClassDeclaration;" line="143"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asInterface" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedInterfaceDeclaration;" line="150"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEnum" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedEnumDeclaration;" line="157"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeParameter" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;" line="164"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asReferenceType" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="168"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$hasInternalType$2" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;)Z" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getInternalType$1" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/UnsolvedSymbolException;" line="57"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getInternalType$0" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;)Z" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedFieldDeclaration" sourcefilename="ResolvedFieldDeclaration.java"><method name="isField" desc="()Z" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asField" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration" sourcefilename="ResolvedReferenceTypeDeclaration.java"><method name="asReferenceType" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAncestors" desc="()Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllAncestors" desc="()Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;" line="124"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVisibleField" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;" line="136"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasField" desc="(Ljava/lang/String;)Z" line="148"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasVisibleField" desc="(Ljava/lang/String;)Z" line="155"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVisibleFields" desc="()Ljava/util/List;" line="167"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllNonStaticFields" desc="()Ljava/util/List;" line="176"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllStaticFields" desc="()Ljava/util/List;" line="183"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDeclaredFields" desc="()Ljava/util/List;" line="190"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canBeAssignedTo" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;)Z" line="224"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasAnnotation" desc="(Ljava/lang/String;)Z" line="246"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findTypeParameter" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="264"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$hasAnnotation$8" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)Z" line="249"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getDeclaredFields$7" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="190"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllStaticFields$6" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllNonStaticFields$5" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="176"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getVisibleFields$4" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="168"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$hasVisibleField$3" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="155"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$hasField$2" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="148"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getVisibleField$1" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getField$0" desc="(Ljava/lang/String;Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="124"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ResolvedFieldDeclaration.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedMethodLikeDeclaration.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="2" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="2" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AssociableToAST.java"><line nr="35" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedReferenceTypeDeclaration.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="11" ci="0" mb="2" cb="0"/><line nr="99" mi="4" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="13" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="13" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="12" ci="0" mb="0" cb="0"/><line nr="155" mi="12" ci="0" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="14" ci="0" mb="4" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="16" ci="0" mb="2" cb="0"/><line nr="183" mi="12" ci="0" mb="0" cb="0"/><line nr="190" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="2" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="13" ci="0" mb="0" cb="0"/><line nr="264" mi="11" ci="0" mb="2" cb="0"/><line nr="265" mi="5" ci="0" mb="2" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="2" cb="0"/><line nr="270" mi="7" ci="0" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="258" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedClassDeclaration.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedTypeDeclaration.java"><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="12" ci="0" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="157" mi="12" ci="0" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="2" cb="0"/><line nr="193" mi="10" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedEnumDeclaration.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="15" ci="0" mb="0" cb="0"/><line nr="52" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedTypeParameterDeclaration.java"><line nr="47" mi="19" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="15" ci="0" mb="0" cb="0"/><line nr="177" mi="11" ci="0" mb="2" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="11" ci="0" mb="2" cb="0"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="11" ci="0" mb="2" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="11" ci="0" mb="2" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="6" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="7" ci="0" mb="2" cb="0"/><line nr="280" mi="17" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="2" cb="0"/><line nr="289" mi="9" ci="0" mb="4" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="7" ci="0" mb="2" cb="0"/><line nr="294" mi="16" ci="0" mb="4" cb="0"/><line nr="299" mi="7" ci="0" mb="2" cb="0"/><line nr="300" mi="13" ci="0" mb="2" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="283" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="31" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ResolvedEnumConstantDeclaration.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedTypeParametrizable.java"><line nr="46" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedDeclaration.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="111" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedParameterDeclaration.java"><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="13" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedInterfaceDeclaration.java"><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1040" covered="0"/><counter type="BRANCH" missed="84" covered="0"/><counter type="LINE" missed="184" covered="0"/><counter type="COMPLEXITY" missed="156" covered="0"/><counter type="METHOD" missed="114" covered="0"/><counter type="CLASS" missed="15" covered="0"/></package><package name="com/github/javaparser/ast/validator/chunks"><class name="com/github/javaparser/ast/validator/chunks/NoUnderscoresInIntegerLiteralsValidator" sourcefilename="NoUnderscoresInIntegerLiteralsValidator.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/chunks/NoBinaryIntegerLiteralsValidator" sourcefilename="NoBinaryIntegerLiteralsValidator.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/IntegerLiteralExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LongLiteralExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lcom/github/javaparser/ast/expr/LiteralStringValueExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/chunks/VarValidator" sourcefilename="VarValidator.java"><method name="&lt;init&gt;" desc="(Z)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportIllegalPosition" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$4" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/body/VariableDeclarator;)V" line="45"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$3" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/ast/Node;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$2" desc="(Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/VariableDeclarator;Lcom/github/javaparser/ast/Node;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$1" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/type/VarType;Lcom/github/javaparser/ast/expr/Expression;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lcom/github/javaparser/ast/Node;)Ljava/lang/Boolean;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="173"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="4" covered="47"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/chunks/UnderscoreKeywordValidator" sourcefilename="UnderscoreKeywordValidator.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/Name;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateIdentifier" desc="(Lcom/github/javaparser/ast/Node;Ljava/lang/String;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/chunks/ModifierValidator" sourcefilename="ModifierValidator.java"><method name="&lt;init&gt;" desc="(ZZZ)V" line="26"><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateClassModifiers" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateInterfaceModifiers" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/EnumDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/AnnotationMemberDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/FieldDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/body/MethodDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="163"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/LambdaExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/stmt/CatchClause;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/github/javaparser/ast/modules/ModuleRequiresDirective;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateModifiers" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithModifiers;Lcom/github/javaparser/ast/validator/ProblemReporter;[Lcom/github/javaparser/ast/Modifier$Keyword;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeModifierFromArray" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;[Lcom/github/javaparser/ast/Modifier$Keyword;)[Lcom/github/javaparser/ast/Modifier$Keyword;" line="180"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrayContains" desc="([Ljava/lang/Object;Ljava/lang/Object;)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAtMostOneOf" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithModifiers;Lcom/github/javaparser/ast/validator/ProblemReporter;[Lcom/github/javaparser/ast/Modifier$Keyword;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$2" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/Parameter;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$1" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/Parameter;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visit$0" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/Parameter;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="898"/><counter type="BRANCH" missed="0" covered="52"/><counter type="LINE" missed="0" covered="107"/><counter type="COMPLEXITY" missed="0" covered="47"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/validator/chunks/CommonValidators" sourcefilename="CommonValidators.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lcom/github/javaparser/ast/expr/AssignExpr;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lcom/github/javaparser/ast/validator/ProblemReporter;Lcom/github/javaparser/ast/body/BodyDeclaration;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;Lcom/github/javaparser/ast/validator/ProblemReporter;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="181"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CommonValidators.java"><line nr="19" mi="0" ci="45" mb="0" cb="0"/><line nr="21" mi="0" ci="12" mb="0" cb="4"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="4"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="6"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="16" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="181"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="23"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoBinaryIntegerLiteralsValidator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierValidator.java"><line nr="26" mi="0" ci="36" mb="0" cb="0"/><line nr="27" mi="0" ci="44" mb="0" cb="0"/><line nr="28" mi="0" ci="48" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="23" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="35" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="18" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="19" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="30" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="15" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="26" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="14" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="18" mb="0" cb="0"/><line nr="93" mi="0" ci="17" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="34" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="36" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="42" mb="0" cb="0"/><line nr="133" mi="0" ci="17" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="14" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="18" mb="0" cb="0"/><line nr="166" mi="0" ci="14" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="15" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="6" mb="0" cb="2"/><line nr="174" mi="0" ci="13" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="16" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="16" mb="0" cb="2"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="2"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="2"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="898"/><counter type="BRANCH" missed="0" covered="52"/><counter type="LINE" missed="0" covered="107"/><counter type="COMPLEXITY" missed="0" covered="47"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnderscoreKeywordValidator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VarValidator.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="13" mb="0" cb="6"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="173"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="4" covered="47"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoUnderscoresInIntegerLiteralsValidator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="26" covered="1333"/><counter type="BRANCH" missed="3" covered="115"/><counter type="LINE" missed="10" covered="206"/><counter type="COMPLEXITY" missed="5" covered="104"/><counter type="METHOD" missed="2" covered="48"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/github/javaparser/version"><class name="com/github/javaparser/version/Java11PostProcessor" sourcefilename="Java11PostProcessor.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/version/Java12PostProcessor" sourcefilename="Java12PostProcessor.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/version/Java10PostProcessor" sourcefilename="Java10PostProcessor.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lcom/github/javaparser/ast/Node;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/version/PostProcessors" sourcefilename="PostProcessors.java"><method name="&lt;init&gt;" desc="([Lcom/github/javaparser/ParseResult$PostProcessor;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPostProcessors" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lcom/github/javaparser/ParseResult$PostProcessor;)Lcom/github/javaparser/version/PostProcessors;" line="28"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ParseResult$PostProcessor;Lcom/github/javaparser/ParseResult$PostProcessor;)Lcom/github/javaparser/version/PostProcessors;" line="35"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/github/javaparser/ParseResult$PostProcessor;)Lcom/github/javaparser/version/PostProcessors;" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$process$0" desc="(Lcom/github/javaparser/ParseResult;Lcom/github/javaparser/ParserConfiguration;Lcom/github/javaparser/ParseResult$PostProcessor;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="33"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PostProcessors.java"><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="2" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="33"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java12PostProcessor.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java11PostProcessor.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Java10PostProcessor.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="2"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="25" covered="80"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="20"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/github/javaparser/javadoc/description"><class name="com/github/javaparser/javadoc/description/JavadocDescription" sourcefilename="JavadocDescription.java"><method name="parseText" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/description/JavadocDescription;" line="39"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfNextInlineTag" desc="(Ljava/lang/String;I)Lcom/github/javaparser/utils/Pair;" line="56"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addElement" desc="(Lcom/github/javaparser/javadoc/description/JavadocDescriptionElement;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElements" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toText" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="98"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toText$0" desc="(Ljava/lang/StringBuilder;Lcom/github/javaparser/javadoc/description/JavadocDescriptionElement;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="153"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="6" covered="29"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/javadoc/description/JavadocSnippet" sourcefilename="JavadocSnippet.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toText" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/javadoc/description/JavadocInlineTag$Type" sourcefilename="JavadocInlineTag.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromName" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/description/JavadocInlineTag$Type;" line="69"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/javadoc/description/JavadocInlineTag" sourcefilename="JavadocInlineTag.java"><method name="fromText" desc="(Ljava/lang/String;)Lcom/github/javaparser/javadoc/description/JavadocDescriptionElement;" line="35"><counter type="INSTRUCTION" missed="24" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/javaparser/javadoc/description/JavadocInlineTag$Type;Ljava/lang/String;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/javadoc/description/JavadocInlineTag$Type;" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toText" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="108"><counter type="INSTRUCTION" missed="16" covered="39"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="120"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="100"/><counter type="BRANCH" missed="18" covered="10"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="18" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavadocDescription.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="0" cb="2"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="46" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="2" ci="3" mb="1" cb="1"/><line nr="99" mi="2" ci="7" mb="2" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="153"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="6" covered="29"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavadocSnippet.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="2" ci="3" mb="1" cb="1"/><line nr="48" mi="2" ci="7" mb="2" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavadocInlineTag.java"><line nr="35" mi="0" ci="4" mb="1" cb="1"/><line nr="36" mi="12" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="36" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><line nr="109" mi="2" ci="7" mb="2" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="6" ci="9" mb="4" cb="2"/><line nr="114" mi="2" ci="5" mb="1" cb="1"/><line nr="115" mi="6" ci="10" mb="3" cb="1"/><line nr="120" mi="9" ci="0" mb="2" cb="0"/><line nr="121" mi="13" ci="0" mb="2" cb="0"/><line nr="122" mi="13" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="26" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="219"/><counter type="BRANCH" missed="18" covered="14"/><counter type="LINE" missed="10" covered="35"/><counter type="COMPLEXITY" missed="18" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="168" covered="402"/><counter type="BRANCH" missed="26" covered="30"/><counter type="LINE" missed="19" covered="73"/><counter type="COMPLEXITY" missed="31" covered="26"/><counter type="METHOD" missed="10" covered="19"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/github/javaparser/ast"><class name="com/github/javaparser/ast/Node$Parsedness" sourcefilename="Node.java"><method name="&lt;clinit&gt;" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/ImportDeclaration" sourcefilename="ImportDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZZ)V" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;ZZ)V" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Name;ZZ)V" line="74"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAsterisk" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStatic" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsterisk" desc="(Z)Lcom/github/javaparser/ast/ImportDeclaration;" line="116"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/ImportDeclaration;" line="126"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatic" desc="(Z)Lcom/github/javaparser/ast/ImportDeclaration;" line="140"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="151"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/ImportDeclaration;" line="159"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ImportDeclarationMetaModel;" line="165"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="171"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="101"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="18" covered="30"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$PostOrderIterator" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="952"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillStackToLeaf" desc="(Lcom/github/javaparser/ast/Node;)V" line="967"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="979"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="984"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextFromLevel" desc="()Lcom/github/javaparser/ast/Node;" line="1003"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/Modifier$Keyword" sourcefilename="Modifier.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="113"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPseudoKeyword" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="189"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$DirectChildrenIterator" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="877"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="883"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="888"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/Modifier" sourcefilename="Modifier.java"><method name="publicModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="protectedModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="privateModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abstractModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="staticModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transientModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="volatileModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="synchronizedModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nativeModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="strictfpModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transitiveModifier" desc="()Lcom/github/javaparser/ast/Modifier;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/Modifier$Keyword;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeyword" desc="()Lcom/github/javaparser/ast/Modifier$Keyword;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKeyword" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/Modifier;" line="174"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createModifierList" desc="([Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/NodeList;" line="188"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="194"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="202"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/Modifier;" line="210"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ModifierMetaModel;" line="216"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="75"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="22"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="12" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="customInitialization" desc="()V" line="187"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComment" desc="()Ljava/util/Optional;" line="196"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRange" desc="()Ljava/util/Optional;" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenRange" desc="()Ljava/util/Optional;" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTokenRange" desc="(Lcom/github/javaparser/TokenRange;)Lcom/github/javaparser/ast/Node;" line="214"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRange" desc="(Lcom/github/javaparser/Range;)Lcom/github/javaparser/ast/Node;" line="228"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setComment" desc="(Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/Node;" line="242"><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLineComment" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="265"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBlockComment" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="274"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="284"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lcom/github/javaparser/printer/PrettyPrinterConfiguration;)Ljava/lang/String;" line="288"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="293"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="298"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="()Ljava/util/Optional;" line="306"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildNodes" desc="()Ljava/util/List;" line="316"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOrphanComment" desc="(Lcom/github/javaparser/ast/comments/Comment;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOrphanComment" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="325"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrphanComments" desc="()Ljava/util/List;" line="347"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllContainedComments" desc="()Ljava/util/List;" line="358"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParentNode" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="375"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsParentNodeOf" desc="(Lcom/github/javaparser/ast/Node;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasComment" desc="()Z" line="411"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAddImportToParentCompilationUnit" desc="(Ljava/lang/Class;)V" line="415"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildNodesByType" desc="(Ljava/lang/Class;)Ljava/util/List;" line="426"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodesByType" desc="(Ljava/lang/Class;)Ljava/util/List;" line="441"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="(Lcom/github/javaparser/ast/DataKey;)Ljava/lang/Object;" line="456"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Lcom/github/javaparser/ast/DataKey;Ljava/lang/Object;)V" line="476"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsData" desc="(Lcom/github/javaparser/ast/DataKey;)Z" line="487"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeData" desc="(Lcom/github/javaparser/ast/DataKey;)V" line="499"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()Z" line="511"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;)Z" line="524"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeForced" desc="()V" line="541"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNodeForChildren" desc="()Lcom/github/javaparser/ast/Node;" line="548"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsParentNodeOf" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="552"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyPropertyChange" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;)V" line="558"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="563"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="568"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Lcom/github/javaparser/ast/observer/AstObserver;Lcom/github/javaparser/ast/Node$ObserverRegistrationMode;)V" line="576"><counter type="INSTRUCTION" missed="17" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerForSubtree" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="598"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRegistered" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)Z" line="611"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="616"><counter type="INSTRUCTION" missed="11" covered="7"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeComment" desc="()Lcom/github/javaparser/ast/Node;" line="629"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/Node;" line="635"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/NodeMetaModel;" line="643"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParsed" desc="()Lcom/github/javaparser/ast/Node$Parsedness;" line="651"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParsed" desc="(Lcom/github/javaparser/ast/Node$Parsedness;)Lcom/github/javaparser/ast/Node;" line="658"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="664"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findRootNode" desc="()Lcom/github/javaparser/ast/Node;" line="679"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findCompilationUnit" desc="()Ljava/util/Optional;" line="690"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSymbolResolver" desc="()Lcom/github/javaparser/resolution/SymbolResolver;" line="698"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="treeIterator" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;)Ljava/util/Iterator;" line="717"><counter type="INSTRUCTION" missed="25" covered="10"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="treeIterable" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;)Ljava/lang/Iterable;" line="734"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stream" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;)Ljava/util/stream/Stream;" line="741"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stream" desc="()Ljava/util/stream/Stream;" line="748"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;Ljava/util/function/Consumer;)V" line="757"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Ljava/util/function/Consumer;)V" line="766"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Ljava/lang/Class;Ljava/util/function/Consumer;)V" line="773"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Ljava/lang/Class;)Ljava/util/List;" line="784"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;" line="793"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirst" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;Ljava/util/function/Function;)Ljava/util/Optional;" line="807"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirst" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="820"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirst" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/Optional;" line="833"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findFirst$11" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;Lcom/github/javaparser/ast/Node;)Ljava/util/Optional;" line="834"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findFirst$10" desc="(Ljava/lang/Class;Lcom/github/javaparser/ast/Node;)Ljava/util/Optional;" line="821"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findAll$9" desc="(Ljava/util/function/Predicate;Ljava/util/List;Lcom/github/javaparser/ast/Node;)V" line="795"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$walk$8" desc="(Ljava/lang/Class;Ljava/util/function/Consumer;Lcom/github/javaparser/ast/Node;)V" line="774"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$treeIterable$7" desc="(Lcom/github/javaparser/ast/Node$TreeTraversal;)Ljava/util/Iterator;" line="734"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSymbolResolver$6" desc="()Ljava/lang/IllegalStateException;" line="704"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSymbolResolver$5" desc="(Lcom/github/javaparser/ast/CompilationUnit;)Lcom/github/javaparser/resolution/SymbolResolver;" line="699"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$registerForSubtree$4" desc="(Lcom/github/javaparser/ast/observer/AstObserver;Lcom/github/javaparser/ast/Node;)V" line="599"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$notifyPropertyChange$3" desc="(Lcom/github/javaparser/ast/observer/ObservableProperty;Ljava/lang/Object;Ljava/lang/Object;Lcom/github/javaparser/ast/observer/AstObserver;)V" line="558"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tryAddImportToParentCompilationUnit$2" desc="(Ljava/lang/Class;Lcom/github/javaparser/ast/CompilationUnit;)V" line="415"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setParentNode$1" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/AstObserver;)V" line="378"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithRange;Lcom/github/javaparser/ast/nodeTypes/NodeWithRange;)I" line="134"><counter type="INSTRUCTION" missed="18" covered="20"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="207" covered="749"/><counter type="BRANCH" missed="43" covered="81"/><counter type="LINE" missed="49" covered="182"/><counter type="COMPLEXITY" missed="42" covered="99"/><counter type="METHOD" missed="11" covered="65"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/CompilationUnit$Storage" sourcefilename="CompilationUnit.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/CompilationUnit;Ljava/nio/file/Path;)V" line="588"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="597"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompilationUnit" desc="()Lcom/github/javaparser/ast/CompilationUnit;" line="604"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceRoot" desc="()Ljava/nio/file/Path;" line="613"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileName" desc="()Ljava/lang/String;" line="618"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectory" desc="()Ljava/nio/file/Path;" line="622"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="save" desc="()V" line="629"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="save" desc="(Ljava/util/function/Function;)V" line="640"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reparse" desc="(Lcom/github/javaparser/JavaParser;)Lcom/github/javaparser/ParseResult;" line="650"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$save$2" desc="(Lcom/github/javaparser/ast/CompilationUnit;)Ljava/lang/String;" line="629"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getSourceRoot$1" desc="(Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="614"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getSourceRoot$0" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="614"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="77"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$ObserverRegistrationMode" sourcefilename="Node.java"><method name="&lt;clinit&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$1" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="()V" line="708"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/DataKey" sourcefilename="DataKey.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/NodeList" sourcefilename="NodeList.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lcom/github/javaparser/ast/Node;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/javaparser/ast/Node;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="own" desc="(Lcom/github/javaparser/ast/Node;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFirst" desc="()Lcom/github/javaparser/ast/Node;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="()Lcom/github/javaparser/ast/Node;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeList" desc="([Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="101"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nodeList" desc="(Ljava/util/Collection;)Lcom/github/javaparser/ast/NodeList;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nodeList" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/NodeList;" line="113"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lcom/github/javaparser/ast/Node;)Z" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Lcom/github/javaparser/ast/Node;" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/Node;" line="140"><counter type="INSTRUCTION" missed="18" covered="37"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Lcom/github/javaparser/ast/Node;" line="155"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="164"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/Comparator;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(ILcom/github/javaparser/ast/Node;)V" line="180"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFirst" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="189"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLast" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="197"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAfter" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="207"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBefore" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="221"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNode" desc="()Ljava/util/Optional;" line="232"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParentNode" desc="(Lcom/github/javaparser/ast/Node;)Lcom/github/javaparser/ast/NodeList;" line="243"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNodeForChildren" desc="()Lcom/github/javaparser/ast/Node;" line="250"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="276"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="292"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="300"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="312"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="320"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="329"><counter type="INSTRUCTION" missed="1" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="340"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="352"><counter type="INSTRUCTION" missed="3" covered="36"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/util/function/UnaryOperator;)V" line="366"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIf" desc="(Ljava/util/function/Predicate;)Z" line="376"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="388"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="398"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="406"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="414"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="422"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="430"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="438"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parallelStream" desc="()Ljava/util/stream/Stream;" line="446"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;" line="454"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spliterator" desc="()Ljava/util/Spliterator;" line="462"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyElementAdded" desc="(ILcom/github/javaparser/ast/Node;)V" line="466"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyElementRemoved" desc="(ILcom/github/javaparser/ast/Node;)V" line="470"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyElementReplaced" desc="(ILcom/github/javaparser/ast/Node;)V" line="474"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregister" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="479"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)V" line="484"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRegistered" desc="(Lcom/github/javaparser/ast/observer/AstObserver;)Z" line="489"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="498"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonEmpty" desc="()Z" line="510"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifNonEmpty" desc="(Ljava/util/function/Consumer;)V" line="514"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNodeList" desc="()Ljava/util/stream/Collector;" line="519"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsParentNodeOf" desc="(Ljava/util/List;)V" line="526"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsParentNodeOf" desc="(Lcom/github/javaparser/ast/Node;)V" line="534"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="541"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toNodeList$4" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/NodeList;" line="520"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$notifyElementReplaced$3" desc="(ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/AstObserver;)V" line="474"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$notifyElementRemoved$2" desc="(ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/AstObserver;)V" line="470"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$notifyElementAdded$1" desc="(ILcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/observer/AstObserver;)V" line="466"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$retainAll$0" desc="(Ljava/util/Collection;Lcom/github/javaparser/ast/Node;)Z" line="353"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="627"/><counter type="BRANCH" missed="19" covered="45"/><counter type="LINE" missed="22" covered="138"/><counter type="COMPLEXITY" missed="29" covered="73"/><counter type="METHOD" missed="13" covered="57"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$TreeTraversal" sourcefilename="Node.java"><method name="&lt;clinit&gt;" desc="()V" line="711"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$ParentsVisitor" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="900"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="906"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="911"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/ArrayCreationLevel" sourcefilename="ArrayCreationLevel.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="57"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDimension" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/ArrayCreationLevel;" line="100"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimension" desc="()Ljava/util/Optional;" line="113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/ArrayCreationLevel;" line="123"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeDimension" desc="()Lcom/github/javaparser/ast/ArrayCreationLevel;" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="143"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/ArrayCreationLevel;" line="163"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ArrayCreationLevelMetaModel;" line="169"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="175"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="144" covered="95"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="33" covered="28"/><counter type="COMPLEXITY" missed="20" covered="10"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$PreOrderIterator" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="923"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="931"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="936"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/Node$BreadthFirstIterator" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/Node;)V" line="851"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="859"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Lcom/github/javaparser/ast/Node;" line="864"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/PackageDeclaration" sourcefilename="PackageDeclaration.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Name;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;)V" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Name;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Lcom/github/javaparser/ast/NodeList;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lcom/github/javaparser/ast/expr/Name;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotations" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/PackageDeclaration;" line="113"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lcom/github/javaparser/ast/expr/Name;)Lcom/github/javaparser/ast/PackageDeclaration;" line="132"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="147"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/PackageDeclaration;" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/PackageDeclarationMetaModel;" line="167"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="173"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="98"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="25" covered="29"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/CompilationUnit" sourcefilename="CompilationUnit.java"><method name="&lt;init&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="99"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/PackageDeclaration;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/modules/ModuleDeclaration;)V" line="104"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/PackageDeclaration;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/modules/ModuleDeclaration;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComments" desc="()Ljava/util/List;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImports" desc="()Lcom/github/javaparser/ast/NodeList;" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImport" desc="(I)Lcom/github/javaparser/ast/ImportDeclaration;" line="159"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageDeclaration" desc="()Ljava/util/Optional;" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypes" desc="()Lcom/github/javaparser/ast/NodeList;" line="185"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="(I)Lcom/github/javaparser/ast/body/TypeDeclaration;" line="195"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImports" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/CompilationUnit;" line="206"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImport" desc="(ILcom/github/javaparser/ast/ImportDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="219"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addImport" desc="(Lcom/github/javaparser/ast/ImportDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="224"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPackageDeclaration" desc="(Lcom/github/javaparser/ast/PackageDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="237"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypes" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/CompilationUnit;" line="253"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(ILcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="266"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addType" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="274"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPackageDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/CompilationUnit;" line="288"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addImport" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/CompilationUnit;" line="300"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addImport" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/CompilationUnit;" line="312"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addImport" desc="(Ljava/lang/String;ZZ)Lcom/github/javaparser/ast/CompilationUnit;" line="334"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addClass" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="353"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addClass" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="364"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInterface" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="376"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInterface" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="387"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnum" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="399"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEnum" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="410"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotationDeclaration" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="422"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotationDeclaration" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="433"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="444"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterfaceByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="453"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnumByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="462"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrimaryTypeName" desc="()Ljava/util/Optional;" line="470"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrimaryType" desc="()Ljava/util/Optional;" line="479"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationDeclarationByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="488"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="494"><counter type="INSTRUCTION" missed="41" covered="35"/><counter type="BRANCH" missed="12" covered="6"/><counter type="LINE" missed="11" covered="8"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removePackageDeclaration" desc="()Lcom/github/javaparser/ast/CompilationUnit;" line="525"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModule" desc="()Ljava/util/Optional;" line="533"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModule" desc="(Lcom/github/javaparser/ast/modules/ModuleDeclaration;)Lcom/github/javaparser/ast/CompilationUnit;" line="538"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeModule" desc="()Lcom/github/javaparser/ast/CompilationUnit;" line="551"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStorage" desc="()Ljava/util/Optional;" line="558"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStorage" desc="(Ljava/nio/file/Path;)Lcom/github/javaparser/ast/CompilationUnit;" line="562"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModule" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/modules/ModuleDeclaration;" line="572"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/CompilationUnit;" line="660"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CompilationUnitMetaModel;" line="666"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="672"><counter type="INSTRUCTION" missed="37" covered="48"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAnnotationDeclarationByName$10" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/body/AnnotationDeclaration;" line="488"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAnnotationDeclarationByName$9" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/TypeDeclaration;)Z" line="488"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPrimaryType$8" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="479"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getPrimaryType$7" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/TypeDeclaration;)Z" line="479"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEnumByName$6" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/body/EnumDeclaration;" line="462"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEnumByName$5" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/TypeDeclaration;)Z" line="462"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getInterfaceByName$4" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="453"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getInterfaceByName$3" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/TypeDeclaration;)Z" line="453"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getClassByName$2" desc="(Lcom/github/javaparser/ast/body/TypeDeclaration;)Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="444"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getClassByName$1" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/TypeDeclaration;)Z" line="444"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addImport$0" desc="(Lcom/github/javaparser/ast/ImportDeclaration;Lcom/github/javaparser/ast/ImportDeclaration;)Z" line="224"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="182" covered="647"/><counter type="BRANCH" missed="37" covered="53"/><counter type="LINE" missed="40" covered="122"/><counter type="COMPLEXITY" missed="38" covered="66"/><counter type="METHOD" missed="6" covered="53"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataKey.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="12" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="16" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeList.java"><line nr="48" mi="0" ci="18" mb="0" cb="0"/><line nr="53" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="2" cb="2"/><line nr="141" mi="18" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="1" cb="1"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="1" cb="1"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="2"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="7" mb="0" cb="2"/><line nr="329" mi="0" ci="10" mb="0" cb="2"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="1" ci="6" mb="1" cb="1"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="9" mb="0" cb="2"/><line nr="342" mi="1" ci="9" mb="1" cb="3"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="29" mb="0" cb="4"/><line nr="354" mi="0" ci="4" mb="1" cb="1"/><line nr="355" mi="3" ci="7" mb="3" cb="1"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="2"/><line nr="367" mi="0" ci="10" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="20" mb="0" cb="2"/><line nr="378" mi="3" ci="7" mb="3" cb="1"/><line nr="380" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="2"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="438" mi="5" ci="0" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="14" mb="0" cb="0"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="14" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="16" mb="0" cb="0"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="4" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="1" cb="1"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="7" mb="0" cb="2"/><line nr="514" mi="3" ci="0" mb="2" cb="0"/><line nr="515" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="1" ci="0" mb="0" cb="0"/><line nr="519" mi="0" ci="7" mb="0" cb="0"/><line nr="520" mi="3" ci="0" mb="0" cb="0"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="1" cb="1"/><line nr="527" mi="0" ci="10" mb="0" cb="2"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="1" cb="1"/><line nr="535" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="627"/><counter type="BRANCH" missed="19" covered="45"/><counter type="LINE" missed="22" covered="138"/><counter type="COMPLEXITY" missed="29" covered="73"/><counter type="METHOD" missed="13" covered="57"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Modifier.java"><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="60" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="1" cb="1"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="264"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="43"/><counter type="COMPLEXITY" missed="15" covered="16"/><counter type="METHOD" missed="12" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="PackageDeclaration.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="9" ci="0" mb="2" cb="0"/><line nr="150" mi="6" ci="0" mb="2" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="2" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="9" ci="0" mb="2" cb="0"/><line nr="176" mi="6" ci="0" mb="2" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="98"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="25" covered="29"/><counter type="COMPLEXITY" missed="16" covered="9"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImportDeclaration.java"><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="1" cb="1"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="2" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="101"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="18" covered="30"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Node.java"><line nr="106" mi="0" ci="16" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="12" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="2" cb="2"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="4" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="12" mb="2" cb="4"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="17" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="1" cb="3"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="4"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="2"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="11" mb="0" cb="2"/><line nr="361" mi="0" ci="8" mb="0" cb="0"/><line nr="362" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="13" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="8" mb="0" cb="2"/><line nr="383" mi="0" ci="5" mb="0" cb="2"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="3" mb="0" cb="2"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="7" ci="0" mb="2" cb="0"/><line nr="415" mi="0" ci="11" mb="0" cb="0"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="11" ci="0" mb="2" cb="0"/><line nr="428" mi="4" ci="0" mb="2" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="1" ci="0" mb="0" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="2"/><line nr="457" mi="0" ci="5" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="2" mb="1" cb="1"/><line nr="461" mi="5" ci="0" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="2"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="2"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="3" ci="0" mb="2" cb="0"/><line nr="500" mi="5" ci="0" mb="0" cb="0"/><line nr="502" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="1" cb="1"/><line nr="512" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="1" cb="1"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="1" cb="1"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="544" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="2"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="15" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="1" cb="1"/><line nr="577" mi="5" ci="0" mb="0" cb="0"/><line nr="579" mi="0" ci="5" mb="1" cb="3"/><line nr="581" mi="0" ci="3" mb="0" cb="0"/><line nr="582" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="588" mi="0" ci="1" mb="0" cb="0"/><line nr="590" mi="12" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="9" mb="0" cb="0"/><line nr="600" mi="0" ci="12" mb="0" cb="2"/><line nr="601" mi="0" ci="3" mb="0" cb="2"/><line nr="602" mi="0" ci="5" mb="0" cb="0"/><line nr="603" mi="0" ci="2" mb="0" cb="2"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="606" mi="0" ci="1" mb="0" cb="0"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="1" cb="1"/><line nr="617" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="0" ci="3" mb="1" cb="1"/><line nr="619" mi="4" ci="0" mb="2" cb="0"/><line nr="620" mi="3" ci="0" mb="0" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="5" mb="0" cb="0"/><line nr="635" mi="8" ci="0" mb="0" cb="0"/><line nr="643" mi="2" ci="0" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="0" cb="0"/><line nr="658" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="2" ci="0" mb="2" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="666" mi="3" ci="0" mb="2" cb="0"/><line nr="667" mi="4" ci="0" mb="2" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="669" mi="2" ci="0" mb="0" cb="0"/><line nr="672" mi="2" ci="0" mb="0" cb="0"/><line nr="679" mi="0" ci="2" mb="0" cb="0"/><line nr="680" mi="0" ci="4" mb="0" cb="2"/><line nr="681" mi="0" ci="6" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="0"/><line nr="691" mi="0" ci="3" mb="0" cb="2"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="698" mi="6" ci="0" mb="0" cb="0"/><line nr="699" mi="5" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="2" cb="0"/><line nr="701" mi="5" ci="0" mb="0" cb="0"/><line nr="703" mi="2" ci="0" mb="0" cb="0"/><line nr="704" mi="7" ci="0" mb="0" cb="0"/><line nr="708" mi="0" ci="8" mb="0" cb="0"/><line nr="711" mi="0" ci="24" mb="0" cb="0"/><line nr="713" mi="0" ci="30" mb="0" cb="0"/><line nr="717" mi="0" ci="5" mb="5" cb="1"/><line nr="719" mi="5" ci="0" mb="0" cb="0"/><line nr="721" mi="5" ci="0" mb="0" cb="0"/><line nr="723" mi="0" ci="5" mb="0" cb="0"/><line nr="725" mi="5" ci="0" mb="0" cb="0"/><line nr="727" mi="5" ci="0" mb="0" cb="0"/><line nr="729" mi="5" ci="0" mb="0" cb="0"/><line nr="734" mi="0" ci="8" mb="0" cb="0"/><line nr="741" mi="8" ci="0" mb="0" cb="0"/><line nr="748" mi="0" ci="8" mb="0" cb="0"/><line nr="757" mi="0" ci="12" mb="0" cb="2"/><line nr="758" mi="0" ci="3" mb="0" cb="0"/><line nr="759" mi="0" ci="1" mb="0" cb="0"/><line nr="760" mi="0" ci="1" mb="0" cb="0"/><line nr="766" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="773" mi="0" ci="6" mb="0" cb="0"/><line nr="774" mi="0" ci="5" mb="0" cb="2"/><line nr="775" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="778" mi="0" ci="1" mb="0" cb="0"/><line nr="784" mi="0" ci="4" mb="0" cb="0"/><line nr="785" mi="0" ci="8" mb="0" cb="0"/><line nr="786" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="794" mi="0" ci="6" mb="0" cb="0"/><line nr="795" mi="0" ci="4" mb="0" cb="2"/><line nr="796" mi="0" ci="4" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="798" mi="0" ci="2" mb="0" cb="0"/><line nr="807" mi="0" ci="12" mb="1" cb="1"/><line nr="808" mi="0" ci="5" mb="0" cb="0"/><line nr="809" mi="0" ci="3" mb="0" cb="2"/><line nr="810" mi="0" ci="2" mb="0" cb="0"/><line nr="812" mi="0" ci="1" mb="0" cb="0"/><line nr="813" mi="2" ci="0" mb="0" cb="0"/><line nr="820" mi="0" ci="6" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="2"/><line nr="822" mi="0" ci="6" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="0"/><line nr="833" mi="0" ci="7" mb="0" cb="0"/><line nr="834" mi="0" ci="5" mb="0" cb="2"/><line nr="835" mi="0" ci="5" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="0" cb="2"/><line nr="837" mi="0" ci="3" mb="0" cb="0"/><line nr="840" mi="0" ci="2" mb="0" cb="0"/><line nr="851" mi="5" ci="0" mb="0" cb="0"/><line nr="853" mi="2" ci="0" mb="0" cb="0"/><line nr="854" mi="5" ci="0" mb="0" cb="0"/><line nr="855" mi="1" ci="0" mb="0" cb="0"/><line nr="859" mi="8" ci="0" mb="2" cb="0"/><line nr="864" mi="5" ci="0" mb="0" cb="0"/><line nr="865" mi="6" ci="0" mb="0" cb="0"/><line nr="866" mi="2" ci="0" mb="0" cb="0"/><line nr="877" mi="2" ci="0" mb="0" cb="0"/><line nr="878" mi="8" ci="0" mb="0" cb="0"/><line nr="879" mi="1" ci="0" mb="0" cb="0"/><line nr="883" mi="4" ci="0" mb="0" cb="0"/><line nr="888" mi="5" ci="0" mb="0" cb="0"/><line nr="900" mi="0" ci="2" mb="0" cb="0"/><line nr="901" mi="0" ci="3" mb="0" cb="0"/><line nr="902" mi="0" ci="1" mb="0" cb="0"/><line nr="906" mi="0" ci="5" mb="0" cb="0"/><line nr="911" mi="0" ci="8" mb="0" cb="0"/><line nr="912" mi="0" ci="3" mb="0" cb="0"/><line nr="923" mi="0" ci="5" mb="0" cb="0"/><line nr="925" mi="0" ci="2" mb="0" cb="0"/><line nr="926" mi="0" ci="5" mb="0" cb="0"/><line nr="927" mi="0" ci="1" mb="0" cb="0"/><line nr="931" mi="0" ci="8" mb="0" cb="2"/><line nr="936" mi="0" ci="5" mb="0" cb="0"/><line nr="937" mi="0" ci="3" mb="0" cb="0"/><line nr="938" mi="0" ci="9" mb="0" cb="2"/><line nr="939" mi="0" ci="8" mb="0" cb="0"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="952" mi="5" ci="0" mb="0" cb="0"/><line nr="954" mi="5" ci="0" mb="0" cb="0"/><line nr="958" mi="3" ci="0" mb="0" cb="0"/><line nr="960" mi="2" ci="0" mb="0" cb="0"/><line nr="961" mi="3" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="963" mi="1" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="968" mi="3" ci="0" mb="2" cb="0"/><line nr="969" mi="1" ci="0" mb="0" cb="0"/><line nr="971" mi="5" ci="0" mb="0" cb="0"/><line nr="972" mi="6" ci="0" mb="0" cb="0"/><line nr="973" mi="5" ci="0" mb="0" cb="0"/><line nr="974" mi="1" ci="0" mb="0" cb="0"/><line nr="975" mi="1" ci="0" mb="0" cb="0"/><line nr="979" mi="3" ci="0" mb="0" cb="0"/><line nr="984" mi="5" ci="0" mb="0" cb="0"/><line nr="985" mi="6" ci="0" mb="0" cb="0"/><line nr="986" mi="8" ci="0" mb="2" cb="0"/><line nr="987" mi="2" ci="0" mb="2" cb="0"/><line nr="988" mi="5" ci="0" mb="0" cb="0"/><line nr="989" mi="3" ci="0" mb="0" cb="0"/><line nr="990" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="4" ci="0" mb="0" cb="0"/><line nr="993" mi="4" ci="0" mb="0" cb="0"/><line nr="994" mi="9" ci="0" mb="2" cb="0"/><line nr="995" mi="3" ci="0" mb="2" cb="0"/><line nr="996" mi="3" ci="0" mb="0" cb="0"/><line nr="998" mi="3" ci="0" mb="0" cb="0"/><line nr="1003" mi="5" ci="0" mb="0" cb="0"/><line nr="1004" mi="6" ci="0" mb="0" cb="0"/><line nr="1005" mi="8" ci="0" mb="0" cb="0"/><line nr="1006" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="396" covered="934"/><counter type="BRANCH" missed="55" covered="85"/><counter type="LINE" missed="95" covered="206"/><counter type="COMPLEXITY" missed="59" covered="111"/><counter type="METHOD" missed="22" covered="75"/><counter type="CLASS" missed="3" covered="7"/></sourcefile><sourcefile name="ArrayCreationLevel.java"><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="17" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="1" cb="1"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="1" cb="1"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="9" ci="0" mb="2" cb="0"/><line nr="146" mi="6" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="9" ci="0" mb="2" cb="0"/><line nr="178" mi="6" ci="0" mb="2" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="95"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="33" covered="28"/><counter type="COMPLEXITY" missed="20" covered="10"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompilationUnit.java"><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="17" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="1" cb="1"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="13" mb="0" cb="2"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="2"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="6" ci="0" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="2"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="315" mi="0" ci="9" mb="0" cb="4"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="2"/><line nr="318" mi="0" ci="8" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="1" cb="3"/><line nr="320" mi="0" ci="13" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="1" cb="1"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="1" cb="1"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="10" mb="0" cb="0"/><line nr="364" mi="0" ci="8" mb="0" cb="0"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="8" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="10" mb="0" cb="0"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="10" mb="0" cb="0"/><line nr="433" mi="0" ci="7" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="1" ci="28" mb="3" cb="3"/><line nr="453" mi="1" ci="28" mb="3" cb="3"/><line nr="462" mi="1" ci="24" mb="2" cb="2"/><line nr="470" mi="0" ci="7" mb="0" cb="0"/><line nr="479" mi="0" ci="19" mb="0" cb="0"/><line nr="488" mi="1" ci="24" mb="2" cb="2"/><line nr="494" mi="0" ci="2" mb="1" cb="1"/><line nr="495" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="7" mb="1" cb="1"/><line nr="497" mi="6" ci="0" mb="2" cb="0"/><line nr="498" mi="5" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="1" cb="1"/><line nr="503" mi="4" ci="0" mb="2" cb="0"/><line nr="504" mi="3" ci="0" mb="0" cb="0"/><line nr="505" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="1" cb="1"/><line nr="509" mi="4" ci="0" mb="2" cb="0"/><line nr="510" mi="3" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="7" mb="1" cb="1"/><line nr="515" mi="0" ci="6" mb="1" cb="1"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="2"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="1" cb="1"/><line nr="543" mi="5" ci="0" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="5" ci="0" mb="0" cb="0"/><line nr="558" mi="0" ci="4" mb="0" cb="0"/><line nr="562" mi="0" ci="8" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="7" mb="0" cb="0"/><line nr="573" mi="0" ci="4" mb="0" cb="0"/><line nr="574" mi="0" ci="2" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="613" mi="0" ci="6" mb="0" cb="0"/><line nr="614" mi="0" ci="22" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="9" ci="0" mb="0" cb="0"/><line nr="630" mi="1" ci="0" mb="0" cb="0"/><line nr="640" mi="0" ci="7" mb="0" cb="0"/><line nr="641" mi="0" ci="6" mb="0" cb="0"/><line nr="642" mi="0" ci="9" mb="0" cb="0"/><line nr="643" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="5" ci="0" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="646" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="7" ci="0" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="660" mi="0" ci="8" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="672" mi="0" ci="2" mb="1" cb="1"/><line nr="673" mi="2" ci="0" mb="0" cb="0"/><line nr="674" mi="2" ci="7" mb="1" cb="1"/><line nr="675" mi="6" ci="0" mb="2" cb="0"/><line nr="676" mi="7" ci="0" mb="0" cb="0"/><line nr="677" mi="2" ci="0" mb="0" cb="0"/><line nr="680" mi="0" ci="3" mb="1" cb="1"/><line nr="681" mi="4" ci="0" mb="2" cb="0"/><line nr="682" mi="5" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="1" cb="1"/><line nr="687" mi="0" ci="4" mb="0" cb="2"/><line nr="688" mi="0" ci="5" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="692" mi="2" ci="7" mb="1" cb="1"/><line nr="693" mi="0" ci="6" mb="1" cb="1"/><line nr="694" mi="0" ci="7" mb="0" cb="0"/><line nr="695" mi="0" ci="2" mb="0" cb="0"/><line nr="698" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="211" covered="724"/><counter type="BRANCH" missed="37" covered="53"/><counter type="LINE" missed="47" covered="137"/><counter type="COMPLEXITY" missed="41" covered="75"/><counter type="METHOD" missed="9" covered="62"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1121" covered="2846"/><counter type="BRANCH" missed="168" covered="200"/><counter type="LINE" missed="259" covered="612"/><counter type="COMPLEXITY" missed="195" covered="307"/><counter type="METHOD" missed="77" covered="238"/><counter type="CLASS" missed="3" covered="16"/></package><package name="com/github/javaparser/ast/stmt"><class name="com/github/javaparser/ast/stmt/ThrowStmt" sourcefilename="ThrowStmt.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ThrowStmt;" line="88"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="103"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ThrowStmt;" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ThrowStmtMetaModel;" line="117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="123"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThrowStmt" desc="()Z" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asThrowStmt" desc="()Lcom/github/javaparser/ast/stmt/ThrowStmt;" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifThrowStmt" desc="(Ljava/util/function/Consumer;)V" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toThrowStmt" desc="()Ljava/util/Optional;" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/BreakStmt" sourcefilename="BreakStmt.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/util/Optional;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/BreakStmt;" line="109"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="123"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeValue" desc="()Lcom/github/javaparser/ast/stmt/BreakStmt;" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/BreakStmt;" line="142"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BreakStmtMetaModel;" line="148"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="154"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBreakStmt" desc="()Z" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBreakStmt" desc="()Lcom/github/javaparser/ast/stmt/BreakStmt;" line="174"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifBreakStmt" desc="(Ljava/util/function/Consumer;)V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBreakStmt" desc="()Ljava/util/Optional;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="46"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="28" covered="16"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/CatchClause" sourcefilename="CatchClause.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/type/ClassOrInterfaceType;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/body/Parameter;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameter" desc="()Lcom/github/javaparser/ast/body/Parameter;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameter" desc="(Lcom/github/javaparser/ast/body/Parameter;)Lcom/github/javaparser/ast/stmt/CatchClause;" line="100"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/CatchClause;" line="119"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/CatchClause;" line="142"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/CatchClauseMetaModel;" line="148"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="154"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="80"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="23" covered="25"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/WhileStmt" sourcefilename="WhileStmt.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;)V" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCondition" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/WhileStmt;" line="97"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCondition" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/WhileStmt;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/WhileStmt;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/WhileStmtMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhileStmt" desc="()Z" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWhileStmt" desc="()Lcom/github/javaparser/ast/stmt/WhileStmt;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifWhileStmt" desc="(Ljava/util/function/Consumer;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toWhileStmt" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ForEachStmt" sourcefilename="ForEachStmt.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;)V" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;Ljava/lang/String;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIterable" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariable" desc="()Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="110"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIterable" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="124"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariable" desc="(Lcom/github/javaparser/ast/expr/VariableDeclarationExpr;)Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="138"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="153"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="161"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="167"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isForEachStmt" desc="()Z" line="187"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asForEachStmt" desc="()Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toForEachStmt" desc="()Ljava/util/Optional;" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifForEachStmt" desc="(Ljava/util/function/Consumer;)V" line="204"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ForEachStmtMetaModel;" line="210"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="106"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="34" covered="33"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="11" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/TryStmt" sourcefilename="TryStmt.java"><method name="&lt;init&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="111"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="116"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCatchClauses" desc="()Lcom/github/javaparser/ast/NodeList;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFinallyBlock" desc="()Ljava/util/Optional;" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTryBlock" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="()Lcom/github/javaparser/ast/NodeList;" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCatchClauses" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/TryStmt;" line="166"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFinallyBlock" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/TryStmt;" line="180"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTryBlock" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/TryStmt;" line="193"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setResources" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/TryStmt;" line="207"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="222"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeFinallyBlock" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="247"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeTryBlock" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="258"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/TryStmtMetaModel;" line="264"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="270"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTryStmt" desc="()Z" line="300"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTryStmt" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="306"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifTryStmt" desc="(Ljava/util/function/Consumer;)V" line="311"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTryStmt" desc="()Ljava/util/Optional;" line="317"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="212" covered="163"/><counter type="BRANCH" missed="36" covered="10"/><counter type="LINE" missed="50" covered="47"/><counter type="COMPLEXITY" missed="31" covered="16"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/SwitchEntry$Type" sourcefilename="SwitchEntry.java"><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ContinueStmt" sourcefilename="ContinueStmt.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/SimpleName;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabel" desc="()Ljava/util/Optional;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLabel" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="99"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="113"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeLabel" desc="()Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="132"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ContinueStmtMetaModel;" line="138"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="144"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isContinueStmt" desc="()Z" line="158"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asContinueStmt" desc="()Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="164"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifContinueStmt" desc="(Ljava/util/function/Consumer;)V" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toContinueStmt" desc="()Ljava/util/Optional;" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="44"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="29" covered="15"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="12" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ExpressionStmt" sourcefilename="ExpressionStmt.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="87"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="102"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ExpressionStmtMetaModel;" line="116"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="122"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpressionStmt" desc="()Z" line="134"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asExpressionStmt" desc="()Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifExpressionStmt" desc="(Ljava/util/function/Consumer;)V" line="145"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toExpressionStmt" desc="()Ljava/util/Optional;" line="151"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="73"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="14" covered="23"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/EmptyStmt" sourcefilename="EmptyStmt.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/EmptyStmt;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/EmptyStmtMetaModel;" line="84"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="90"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmptyStmt" desc="()Z" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEmptyStmt" desc="()Lcom/github/javaparser/ast/stmt/EmptyStmt;" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEmptyStmt" desc="(Ljava/util/function/Consumer;)V" line="109"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEmptyStmt" desc="()Ljava/util/Optional;" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="13"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="6"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/BlockStmt" sourcefilename="BlockStmt.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatements" desc="()Lcom/github/javaparser/ast/NodeList;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatements" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/BlockStmt;" line="86"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="101"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="115"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/BlockStmtMetaModel;" line="121"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="127"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlockStmt" desc="()Z" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBlockStmt" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="147"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifBlockStmt" desc="(Ljava/util/function/Consumer;)V" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlockStmt" desc="()Ljava/util/Optional;" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="89"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/UnparsableStmt" sourcefilename="UnparsableStmt.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/UnparsableStmt;" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/UnparsableStmtMetaModel;" line="65"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParsed" desc="()Lcom/github/javaparser/ast/Node$Parsedness;" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="76"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnparsableStmt" desc="()Z" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnparsableStmt" desc="()Lcom/github/javaparser/ast/stmt/UnparsableStmt;" line="90"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnparsableStmt" desc="(Ljava/util/function/Consumer;)V" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnparsableStmt" desc="()Ljava/util/Optional;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="15"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="7"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ReturnStmt" sourcefilename="ReturnStmt.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Ljava/util/Optional;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="100"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="114"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeExpression" desc="()Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="133"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ReturnStmtMetaModel;" line="139"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="145"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReturnStmt" desc="()Z" line="159"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asReturnStmt" desc="()Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="165"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifReturnStmt" desc="(Ljava/util/function/Consumer;)V" line="170"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toReturnStmt" desc="()Ljava/util/Optional;" line="176"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="66"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="22" covered="22"/><counter type="COMPLEXITY" missed="14" covered="11"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/LabeledStmt" sourcefilename="LabeledStmt.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/stmt/Statement;)V" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/stmt/Statement;)V" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/SimpleName;Lcom/github/javaparser/ast/stmt/Statement;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatement" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatement" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="92"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabel" desc="()Lcom/github/javaparser/ast/expr/SimpleName;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLabel" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LabeledStmtMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLabeledStmt" desc="()Z" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLabeledStmt" desc="()Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="168"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifLabeledStmt" desc="(Ljava/util/function/Consumer;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLabeledStmt" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="77"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="28" covered="25"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/SwitchStmt" sourcefilename="SwitchStmt.java"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntries" desc="()Lcom/github/javaparser/ast/NodeList;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntry" desc="(I)Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="117"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelector" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntries" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="127"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEntry" desc="(ILcom/github/javaparser/ast/stmt/SwitchEntry;)Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="144"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEntry" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry;)Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="153"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSelector" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="159"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="174"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="188"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SwitchStmtMetaModel;" line="194"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="200"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSwitchStmt" desc="()Z" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSwitchStmt" desc="()Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="224"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifSwitchStmt" desc="(Ljava/util/function/Consumer;)V" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSwitchStmt" desc="()Ljava/util/Optional;" line="235"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="141" covered="83"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="35" covered="26"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="11" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ForStmt" sourcefilename="ForStmt.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/Statement;)V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/Statement;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompare" desc="()Ljava/util/Optional;" line="121"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInitialization" desc="()Lcom/github/javaparser/ast/NodeList;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUpdate" desc="()Lcom/github/javaparser/ast/NodeList;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/ForStmt;" line="136"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCompare" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ForStmt;" line="156"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInitialization" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/ForStmt;" line="169"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUpdate" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/ForStmt;" line="183"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="198"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeCompare" desc="()Lcom/github/javaparser/ast/stmt/ForStmt;" line="223"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ForStmt;" line="229"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ForStmtMetaModel;" line="235"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="241"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isForStmt" desc="()Z" line="271"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asForStmt" desc="()Lcom/github/javaparser/ast/stmt/ForStmt;" line="277"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifForStmt" desc="(Ljava/util/function/Consumer;)V" line="282"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toForStmt" desc="()Ljava/util/Optional;" line="288"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="223" covered="139"/><counter type="BRANCH" missed="37" covered="9"/><counter type="LINE" missed="51" covered="43"/><counter type="COMPLEXITY" missed="32" covered="13"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/SynchronizedStmt" sourcefilename="SynchronizedStmt.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/BlockStmt;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="92"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/BlockStmt;)Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SynchronizedStmtMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSynchronizedStmt" desc="()Z" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSynchronizedStmt" desc="()Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSynchronizedStmt" desc="(Ljava/util/function/Consumer;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSynchronizedStmt" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt" sourcefilename="ExplicitConstructorInvocationStmt.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZLcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;ZLcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;ZLcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/NodeList;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="()Lcom/github/javaparser/ast/NodeList;" line="107"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Ljava/util/Optional;" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThis" desc="()Z" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="122"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExpression" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="142"><counter type="INSTRUCTION" missed="22" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThis" desc="(Z)Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="155"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeArguments" desc="()Ljava/util/Optional;" line="165"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTypeArguments" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="176"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="190"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeExpression" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="217"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="223"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/ExplicitConstructorInvocationStmtMetaModel;" line="229"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="235"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExplicitConstructorInvocationStmt" desc="()Z" line="263"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asExplicitConstructorInvocationStmt" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifExplicitConstructorInvocationStmt" desc="(Ljava/util/function/Consumer;)V" line="274"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration;" line="291"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveInvokedConstructor" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration;" line="299"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toExplicitConstructorInvocationStmt" desc="()Ljava/util/Optional;" line="305"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="240" covered="115"/><counter type="BRANCH" missed="38" covered="8"/><counter type="LINE" missed="57" covered="35"/><counter type="COMPLEXITY" missed="35" covered="13"/><counter type="METHOD" missed="14" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/SwitchEntry" sourcefilename="SwitchEntry.java"><method name="&lt;init&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/SwitchEntry$Type;Lcom/github/javaparser/ast/NodeList;)V" line="101"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/NodeList;Lcom/github/javaparser/ast/stmt/SwitchEntry$Type;Lcom/github/javaparser/ast/NodeList;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLabels" desc="()Lcom/github/javaparser/ast/NodeList;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStatements" desc="()Lcom/github/javaparser/ast/NodeList;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLabels" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="146"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatements" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="160"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="175"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="195"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/SwitchEntryMetaModel;" line="201"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/github/javaparser/ast/stmt/SwitchEntry$Type;" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Lcom/github/javaparser/ast/stmt/SwitchEntry$Type;)Lcom/github/javaparser/ast/stmt/SwitchEntry;" line="211"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="222"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="156" covered="100"/><counter type="BRANCH" missed="25" covered="5"/><counter type="LINE" missed="33" covered="31"/><counter type="COMPLEXITY" missed="21" covered="9"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/AssertStmt" sourcefilename="AssertStmt.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/expr/Expression;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCheck" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/util/Optional;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCheck" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/AssertStmt;" line="100"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMessage" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/AssertStmt;" line="120"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="134"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeMessage" desc="()Lcom/github/javaparser/ast/stmt/AssertStmt;" line="147"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/AssertStmt;" line="153"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/AssertStmtMetaModel;" line="159"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="165"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssertStmt" desc="()Z" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asAssertStmt" desc="()Lcom/github/javaparser/ast/stmt/AssertStmt;" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAssertStmt" desc="(Ljava/util/function/Consumer;)V" line="194"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAssertStmt" desc="()Ljava/util/Optional;" line="200"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="75"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="34" covered="24"/><counter type="COMPLEXITY" missed="22" covered="8"/><counter type="METHOD" missed="12" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/Statement" sourcefilename="Statement.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/StatementMetaModel;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="78"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssertStmt" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asAssertStmt" desc="()Lcom/github/javaparser/ast/stmt/AssertStmt;" line="90"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlockStmt" desc="()Z" line="95"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBlockStmt" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBreakStmt" desc="()Z" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asBreakStmt" desc="()Lcom/github/javaparser/ast/stmt/BreakStmt;" line="110"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isContinueStmt" desc="()Z" line="115"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asContinueStmt" desc="()Lcom/github/javaparser/ast/stmt/ContinueStmt;" line="120"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoStmt" desc="()Z" line="125"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asDoStmt" desc="()Lcom/github/javaparser/ast/stmt/DoStmt;" line="130"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmptyStmt" desc="()Z" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asEmptyStmt" desc="()Lcom/github/javaparser/ast/stmt/EmptyStmt;" line="140"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExplicitConstructorInvocationStmt" desc="()Z" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asExplicitConstructorInvocationStmt" desc="()Lcom/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt;" line="150"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpressionStmt" desc="()Z" line="155"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asExpressionStmt" desc="()Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="160"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isForStmt" desc="()Z" line="165"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asForStmt" desc="()Lcom/github/javaparser/ast/stmt/ForStmt;" line="170"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIfStmt" desc="()Z" line="175"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIfStmt" desc="()Lcom/github/javaparser/ast/stmt/IfStmt;" line="180"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLabeledStmt" desc="()Z" line="185"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLabeledStmt" desc="()Lcom/github/javaparser/ast/stmt/LabeledStmt;" line="190"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLocalClassDeclarationStmt" desc="()Z" line="195"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLocalClassDeclarationStmt" desc="()Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;" line="200"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReturnStmt" desc="()Z" line="205"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asReturnStmt" desc="()Lcom/github/javaparser/ast/stmt/ReturnStmt;" line="210"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSwitchStmt" desc="()Z" line="215"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSwitchStmt" desc="()Lcom/github/javaparser/ast/stmt/SwitchStmt;" line="220"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSynchronizedStmt" desc="()Z" line="225"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asSynchronizedStmt" desc="()Lcom/github/javaparser/ast/stmt/SynchronizedStmt;" line="230"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThrowStmt" desc="()Z" line="235"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asThrowStmt" desc="()Lcom/github/javaparser/ast/stmt/ThrowStmt;" line="240"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTryStmt" desc="()Z" line="245"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTryStmt" desc="()Lcom/github/javaparser/ast/stmt/TryStmt;" line="250"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnparsableStmt" desc="()Z" line="255"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnparsableStmt" desc="()Lcom/github/javaparser/ast/stmt/UnparsableStmt;" line="260"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWhileStmt" desc="()Z" line="265"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWhileStmt" desc="()Lcom/github/javaparser/ast/stmt/WhileStmt;" line="270"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifAssertStmt" desc="(Ljava/util/function/Consumer;)V" line="275"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBlockStmt" desc="(Ljava/util/function/Consumer;)V" line="279"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifBreakStmt" desc="(Ljava/util/function/Consumer;)V" line="283"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifContinueStmt" desc="(Ljava/util/function/Consumer;)V" line="287"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifDoStmt" desc="(Ljava/util/function/Consumer;)V" line="291"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifEmptyStmt" desc="(Ljava/util/function/Consumer;)V" line="295"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifExplicitConstructorInvocationStmt" desc="(Ljava/util/function/Consumer;)V" line="299"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifExpressionStmt" desc="(Ljava/util/function/Consumer;)V" line="303"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifForStmt" desc="(Ljava/util/function/Consumer;)V" line="307"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifIfStmt" desc="(Ljava/util/function/Consumer;)V" line="311"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLabeledStmt" desc="(Ljava/util/function/Consumer;)V" line="315"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLocalClassDeclarationStmt" desc="(Ljava/util/function/Consumer;)V" line="319"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifReturnStmt" desc="(Ljava/util/function/Consumer;)V" line="323"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSwitchStmt" desc="(Ljava/util/function/Consumer;)V" line="327"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifSynchronizedStmt" desc="(Ljava/util/function/Consumer;)V" line="331"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifThrowStmt" desc="(Ljava/util/function/Consumer;)V" line="335"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifTryStmt" desc="(Ljava/util/function/Consumer;)V" line="339"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifUnparsableStmt" desc="(Ljava/util/function/Consumer;)V" line="343"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifWhileStmt" desc="(Ljava/util/function/Consumer;)V" line="347"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAssertStmt" desc="()Ljava/util/Optional;" line="351"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBlockStmt" desc="()Ljava/util/Optional;" line="356"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toBreakStmt" desc="()Ljava/util/Optional;" line="361"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toContinueStmt" desc="()Ljava/util/Optional;" line="366"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDoStmt" desc="()Ljava/util/Optional;" line="371"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toEmptyStmt" desc="()Ljava/util/Optional;" line="376"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toExplicitConstructorInvocationStmt" desc="()Ljava/util/Optional;" line="381"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toExpressionStmt" desc="()Ljava/util/Optional;" line="386"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toForStmt" desc="()Ljava/util/Optional;" line="391"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIfStmt" desc="()Ljava/util/Optional;" line="396"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLabeledStmt" desc="()Ljava/util/Optional;" line="401"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLocalClassDeclarationStmt" desc="()Ljava/util/Optional;" line="406"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toReturnStmt" desc="()Ljava/util/Optional;" line="411"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSwitchStmt" desc="()Ljava/util/Optional;" line="416"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSynchronizedStmt" desc="()Ljava/util/Optional;" line="421"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toThrowStmt" desc="()Ljava/util/Optional;" line="426"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toTryStmt" desc="()Ljava/util/Optional;" line="431"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toUnparsableStmt" desc="()Ljava/util/Optional;" line="436"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toWhileStmt" desc="()Ljava/util/Optional;" line="441"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isForEachStmt" desc="()Z" line="446"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asForEachStmt" desc="()Lcom/github/javaparser/ast/stmt/ForEachStmt;" line="451"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toForEachStmt" desc="()Ljava/util/Optional;" line="456"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifForEachStmt" desc="(Ljava/util/function/Consumer;)V" line="461"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="363" covered="14"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="86" covered="7"/><counter type="COMPLEXITY" missed="83" covered="5"/><counter type="METHOD" missed="81" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/DoStmt" sourcefilename="DoStmt.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/stmt/Statement;Lcom/github/javaparser/ast/expr/Expression;)V" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/stmt/Statement;Lcom/github/javaparser/ast/expr/Expression;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBody" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCondition" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBody" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/DoStmt;" line="97"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCondition" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/DoStmt;" line="111"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/DoStmt;" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/DoStmtMetaModel;" line="140"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="146"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoStmt" desc="()Z" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asDoStmt" desc="()Lcom/github/javaparser/ast/stmt/DoStmt;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifDoStmt" desc="(Ljava/util/function/Consumer;)V" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDoStmt" desc="()Ljava/util/Optional;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/IfStmt" sourcefilename="IfStmt.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;Lcom/github/javaparser/ast/stmt/Statement;)V" line="64"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/expr/Expression;Lcom/github/javaparser/ast/stmt/Statement;Lcom/github/javaparser/ast/stmt/Statement;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCondition" desc="()Lcom/github/javaparser/ast/expr/Expression;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElseStmt" desc="()Ljava/util/Optional;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThenStmt" desc="()Lcom/github/javaparser/ast/stmt/Statement;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCondition" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/IfStmt;" line="108"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setElseStmt" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/IfStmt;" line="128"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThenStmt" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/IfStmt;" line="141"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="156"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeElseStmt" desc="()Lcom/github/javaparser/ast/stmt/IfStmt;" line="169"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasThenBlock" desc="()Z" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasElseBlock" desc="()Z" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasCascadingIfStmt" desc="()Z" line="193"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasElseBranch" desc="()Z" line="201"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/IfStmt;" line="207"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/IfStmtMetaModel;" line="213"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="219"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIfStmt" desc="()Z" line="241"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asIfStmt" desc="()Lcom/github/javaparser/ast/stmt/IfStmt;" line="247"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifIfStmt" desc="(Ljava/util/function/Consumer;)V" line="252"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIfStmt" desc="()Ljava/util/Optional;" line="258"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="131"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="35" covered="39"/><counter type="COMPLEXITY" missed="23" covered="16"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/stmt/LocalClassDeclarationStmt" sourcefilename="LocalClassDeclarationStmt.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/TokenRange;Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/GenericVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lcom/github/javaparser/ast/visitor/VoidVisitor;Ljava/lang/Object;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassDeclaration" desc="()Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClassDeclaration" desc="(Lcom/github/javaparser/ast/body/ClassOrInterfaceDeclaration;)Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;" line="91"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/github/javaparser/ast/Node;)Z" line="106"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;" line="114"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetaModel" desc="()Lcom/github/javaparser/metamodel/LocalClassDeclarationStmtMetaModel;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/github/javaparser/ast/Node;Lcom/github/javaparser/ast/Node;)Z" line="126"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLocalClassDeclarationStmt" desc="()Z" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLocalClassDeclarationStmt" desc="()Lcom/github/javaparser/ast/stmt/LocalClassDeclarationStmt;" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ifLocalClassDeclarationStmt" desc="(Ljava/util/function/Consumer;)V" line="149"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLocalClassDeclarationStmt" desc="()Ljava/util/Optional;" line="155"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LabeledStmt.java"><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="1" cb="1"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="77"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="28" covered="25"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContinueStmt.java"><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="44"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="29" covered="15"/><counter type="COMPLEXITY" missed="19" covered="6"/><counter type="METHOD" missed="12" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Statement.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="12" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="12" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="12" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="12" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="12" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="12" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="12" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="12" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="12" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="12" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="12" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="12" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="12" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="2" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="0" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="411" mi="2" ci="0" mb="0" cb="0"/><line nr="416" mi="2" ci="0" mb="0" cb="0"/><line nr="421" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="0" cb="0"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="441" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="451" mi="12" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="461" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="363" covered="14"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="86" covered="7"/><counter type="COMPLEXITY" missed="83" covered="5"/><counter type="METHOD" missed="81" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssertStmt.java"><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="4" ci="0" mb="2" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="75"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="34" covered="24"/><counter type="COMPLEXITY" missed="22" covered="8"/><counter type="METHOD" missed="12" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionStmt.java"><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="73"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="14" covered="23"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReturnStmt.java"><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="1" cb="1"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="66"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="22" covered="22"/><counter type="COMPLEXITY" missed="14" covered="11"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SynchronizedStmt.java"><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="1" cb="1"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExplicitConstructorInvocationStmt.java"><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="1" cb="1"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="2" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="9" ci="0" mb="2" cb="0"/><line nr="193" mi="6" ci="0" mb="2" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="2" cb="0"/><line nr="199" mi="4" ci="0" mb="2" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="9" ci="0" mb="2" cb="0"/><line nr="206" mi="6" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="2" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="9" ci="0" mb="2" cb="0"/><line nr="238" mi="6" ci="0" mb="2" cb="0"/><line nr="239" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="2" cb="0"/><line nr="244" mi="4" ci="0" mb="2" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="2" cb="0"/><line nr="250" mi="9" ci="0" mb="2" cb="0"/><line nr="251" mi="6" ci="0" mb="2" cb="0"/><line nr="252" mi="7" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="240" covered="115"/><counter type="BRANCH" missed="38" covered="8"/><counter type="LINE" missed="57" covered="35"/><counter type="COMPLEXITY" missed="35" covered="13"/><counter type="METHOD" missed="14" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlockStmt.java"><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="1" cb="1"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="9" ci="0" mb="2" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="89"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IfStmt.java"><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="1" cb="1"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="1" cb="1"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="2" cb="0"/><line nr="159" mi="4" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="1" ci="6" mb="1" cb="1"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="2" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="2" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="4" ci="0" mb="2" cb="0"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="131"/><counter type="BRANCH" missed="21" covered="9"/><counter type="LINE" missed="35" covered="39"/><counter type="COMPLEXITY" missed="23" covered="16"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CatchClause.java"><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="16" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="1" cb="1"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="80"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="23" covered="25"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BreakStmt.java"><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="4" ci="0" mb="2" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="46"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="28" covered="16"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwitchStmt.java"><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="1" cb="1"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="2" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="9" ci="0" mb="2" cb="0"/><line nr="177" mi="6" ci="0" mb="2" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="8" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="2" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="9" ci="0" mb="2" cb="0"/><line nr="203" mi="6" ci="0" mb="2" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="2" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="83"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="35" covered="26"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="11" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwitchEntry.java"><line nr="84" mi="0" ci="20" mb="0" cb="0"/><line nr="86" mi="0" ci="24" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="1" cb="1"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="1" cb="1"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="9" ci="0" mb="2" cb="0"/><line nr="178" mi="6" ci="0" mb="2" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="9" ci="0" mb="2" cb="0"/><line nr="184" mi="6" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="1" cb="1"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="9" ci="0" mb="2" cb="0"/><line nr="225" mi="6" ci="0" mb="2" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="9" ci="0" mb="2" cb="0"/><line nr="231" mi="6" ci="0" mb="2" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="156" covered="144"/><counter type="BRANCH" missed="25" covered="5"/><counter type="LINE" missed="33" covered="33"/><counter type="COMPLEXITY" missed="21" covered="10"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="WhileStmt.java"><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TryStmt.java"><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="1" cb="1"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="1" cb="1"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="1" cb="1"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="9" ci="0" mb="2" cb="0"/><line nr="225" mi="6" ci="0" mb="2" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="2" cb="0"/><line nr="231" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="9" ci="0" mb="2" cb="0"/><line nr="237" mi="6" ci="0" mb="2" cb="0"/><line nr="238" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="8" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="2" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="9" ci="0" mb="2" cb="0"/><line nr="273" mi="6" ci="0" mb="2" cb="0"/><line nr="274" mi="7" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="2" cb="0"/><line nr="279" mi="4" ci="0" mb="2" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="9" ci="0" mb="2" cb="0"/><line nr="285" mi="6" ci="0" mb="2" cb="0"/><line nr="286" mi="7" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="2" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="300" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="212" covered="163"/><counter type="BRANCH" missed="36" covered="10"/><counter type="LINE" missed="50" covered="47"/><counter type="COMPLEXITY" missed="31" covered="16"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForEachStmt.java"><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="1" cb="1"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="2" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="2" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="2" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="2" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="106"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="34" covered="33"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="11" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowStmt.java"><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoStmt.java"><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="1" cb="1"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="75"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="27" covered="24"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForStmt.java"><line nr="81" mi="15" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="1" cb="1"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="1" cb="1"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="1" cb="1"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="1" cb="1"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="1" cb="1"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="2" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="2" cb="0"/><line nr="201" mi="4" ci="0" mb="2" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="9" ci="0" mb="2" cb="0"/><line nr="207" mi="6" ci="0" mb="2" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="9" ci="0" mb="2" cb="0"/><line nr="213" mi="6" ci="0" mb="2" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="8" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="2" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="2" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="2" cb="0"/><line nr="248" mi="4" ci="0" mb="2" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="9" ci="0" mb="2" cb="0"/><line nr="254" mi="6" ci="0" mb="2" cb="0"/><line nr="255" mi="7" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="9" ci="0" mb="2" cb="0"/><line nr="260" mi="6" ci="0" mb="2" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="2" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="223" covered="139"/><counter type="BRANCH" missed="37" covered="9"/><counter type="LINE" missed="51" covered="43"/><counter type="COMPLEXITY" missed="32" covered="13"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnparsableStmt.java"><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="15"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="7"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyStmt.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="13"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="6"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="9" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LocalClassDeclarationStmt.java"><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="44"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="15" covered="5"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2771" covered="1786"/><counter type="BRANCH" missed="349" covered="101"/><counter type="LINE" missed="730" covered="554"/><counter type="COMPLEXITY" missed="499" covered="201"/><counter type="METHOD" missed="290" covered="185"/><counter type="CLASS" missed="0" covered="24"/></package><package name="com/github/javaparser/resolution/types"><class name="com/github/javaparser/resolution/types/ResolvedTypeVariable" sourcefilename="ResolvedTypeVariable.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;)V" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qualifiedName" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArray" desc="()Z" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitive" desc="()Z" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="83"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeParameter" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeVariable" desc="()Lcom/github/javaparser/resolution/types/ResolvedTypeVariable;" line="108"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeVariable" desc="()Z" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="118"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mention" desc="(Ljava/util/List;)Z" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedIntersectionType" sourcefilename="ResolvedIntersectionType.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="37"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="46"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="71"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$replaceTypeVariables$1" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="72"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAssignableBy$0" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedArrayType" sourcefilename="ResolvedArrayType.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)V" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayType" desc="()Lcom/github/javaparser/resolution/types/ResolvedArrayType;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArray" desc="()Z" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComponentType" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="92"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="105"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedWildcard" sourcefilename="ResolvedWildcard.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/types/ResolvedWildcard$BoundType;Lcom/github/javaparser/resolution/types/ResolvedType;)V" line="45"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="superBound" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedWildcard;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extendsBound" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedWildcard;" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWildcard" desc="()Z" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWildcard" desc="()Lcom/github/javaparser/resolution/types/ResolvedWildcard;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="82"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="95"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuper" desc="()Z" line="114"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExtends" desc="()Z" line="118"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBounded" desc="()Z" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoundedType" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="126"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="134"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="148"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mention" desc="(Ljava/util/List;)Z" line="167"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUpperBounded" desc="()Z" line="171"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLowerBounded" desc="()Z" line="175"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="280" covered="0"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedPrimitiveType" sourcefilename="ResolvedPrimitiveType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V" line="51"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byName" desc="(Ljava/lang/String;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="58"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asPrimitive" desc="()Lcom/github/javaparser/resolution/types/ResolvedPrimitiveType;" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArray" desc="()Z" line="80"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitive" desc="()Z" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="90"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeVariable" desc="()Z" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="105"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoxTypeQName" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNumeric" desc="()Z" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="197" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="349" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedType" sourcefilename="ResolvedType.java"><method name="isArray" desc="()Z" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayLevel" desc="()I" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitive" desc="()Z" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNull" desc="()Z" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnionType" desc="()Z" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReference" desc="()Z" line="86"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstraint" desc="()Z" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVoid" desc="()Z" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeVariable" desc="()Z" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWildcard" desc="()Z" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asArrayType" desc="()Lcom/github/javaparser/resolution/types/ResolvedArrayType;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asReferenceType" desc="()Lcom/github/javaparser/resolution/types/ResolvedReferenceType;" line="123"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeParameter" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;" line="127"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeVariable" desc="()Lcom/github/javaparser/resolution/types/ResolvedTypeVariable;" line="131"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asPrimitive" desc="()Lcom/github/javaparser/resolution/types/ResolvedPrimitiveType;" line="135"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asWildcard" desc="()Lcom/github/javaparser/resolution/types/ResolvedWildcard;" line="139"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConstraintType" desc="()Lcom/github/javaparser/resolution/types/ResolvedLambdaConstraintType;" line="143"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnionType" desc="()Lcom/github/javaparser/resolution/types/ResolvedUnionType;" line="147"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="166"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="173"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mention" desc="(Ljava/util/List;)Z" line="180"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedLambdaConstraintType" sourcefilename="ResolvedLambdaConstraintType.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)V" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBound" desc="()Lcom/github/javaparser/resolution/types/ResolvedType;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstraint" desc="()Z" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asConstraintType" desc="()Lcom/github/javaparser/resolution/types/ResolvedLambdaConstraintType;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bound" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Lcom/github/javaparser/resolution/types/ResolvedLambdaConstraintType;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedWildcard$BoundType" sourcefilename="ResolvedWildcard.java"><method name="&lt;clinit&gt;" desc="()V" line="178"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedReferenceType" sourcefilename="ResolvedReferenceType.java"><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;)V" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;Ljava/util/List;)V" line="63"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="89"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="102"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReferenceType" desc="()Z" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asReferenceType" desc="()Lcom/github/javaparser/resolution/types/ResolvedReferenceType;" line="129"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceTypeVariables" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;Lcom/github/javaparser/resolution/types/ResolvedType;Ljava/util/Map;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="166"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllInterfacesAncestors" desc="()Ljava/util/List;" line="235"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllClassesAncestors" desc="()Ljava/util/List;" line="241"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGenericParameterByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="255"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParametersValues" desc="()Ljava/util/List;" line="268"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeParametersMap" desc="()Ljava/util/List;" line="276"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParametersMap" desc="()Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;" line="287"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeDeclaration" desc="()Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;" line="298"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldType" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="306"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasName" desc="()Z" line="318"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedName" desc="()Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/String;" line="332"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRawType" desc="()Z" line="346"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeParamValue" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;)Ljava/util/Optional;" line="362"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMethods" desc="()Ljava/util/List;" line="385"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllFieldsVisibleToInheritors" desc="()Ljava/util/List;" line="398"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMethodsVisibleToInheritors" desc="()Ljava/util/List;" line="409"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;Lcom/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap;)Lcom/github/javaparser/resolution/types/ResolvedReferenceType;" line="430"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCorrespondingBoxingType" desc="(Ljava/lang/String;)Z" line="438"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareConsideringTypeParameters" desc="(Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)Z" line="461"><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deriveParams" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration;)Ljava/util/List;" line="506"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllMethodsVisibleToInheritors$9" desc="(Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)V" line="417"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllMethodsVisibleToInheritors$8" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;)Z" line="411"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllMethodsVisibleToInheritors$7" desc="(Lcom/github/javaparser/resolution/MethodUsage;)Lcom/github/javaparser/resolution/declarations/ResolvedMethodDeclaration;" line="410"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllFieldsVisibleToInheritors$6" desc="(Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)V" line="403"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllFieldsVisibleToInheritors$5" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedFieldDeclaration;)Z" line="399"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllMethods$4" desc="(Ljava/util/List;Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)V" line="389"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$typeParametersValues$3" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;)Lcom/github/javaparser/resolution/types/ResolvedType;" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllClassesAncestors$2" desc="(Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)Z" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAllInterfacesAncestors$1" desc="(Lcom/github/javaparser/resolution/types/ResolvedReferenceType;)Z" line="236"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$describe$0" desc="(Lcom/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration;)Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="881" covered="0"/><counter type="BRANCH" missed="119" covered="0"/><counter type="LINE" missed="169" covered="0"/><counter type="COMPLEXITY" missed="102" covered="0"/><counter type="METHOD" missed="39" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedUnionType" sourcefilename="ResolvedUnionType.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="35"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCommonAncestor" desc="()Ljava/util/Optional;" line="43"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="56"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describe" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnionType" desc="()Z" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asUnionType" desc="()Lcom/github/javaparser/resolution/types/ResolvedUnionType;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isAssignableBy$1" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getCommonAncestor$0" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="47"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/resolution/types/ResolvedVoidType" sourcefilename="ResolvedVoidType.java"><method name="describe" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableBy" desc="(Lcom/github/javaparser/resolution/types/ResolvedType;)Z" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVoid" desc="()Z" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ResolvedWildcard.java"><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="4" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="4" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="17" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="5" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="15" ci="0" mb="6" cb="0"/><line nr="88" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="2" cb="0"/><line nr="96" mi="13" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="2" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="11" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="2" cb="0"/><line nr="118" mi="8" ci="0" mb="2" cb="0"/><line nr="122" mi="10" ci="0" mb="4" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="2" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="7" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="2" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="12" ci="0" mb="4" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="304" covered="0"/><counter type="BRANCH" missed="58" covered="0"/><counter type="LINE" missed="59" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ResolvedTypeVariable.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="2" cb="0"/><line nr="55" mi="9" ci="0" mb="4" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="2" cb="0"/><line nr="60" mi="9" ci="0" mb="2" cb="0"/><line nr="61" mi="9" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedType.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="22" ci="0" mb="12" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="123" mi="12" ci="0" mb="0" cb="0"/><line nr="127" mi="12" ci="0" mb="0" cb="0"/><line nr="131" mi="12" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="139" mi="12" ci="0" mb="0" cb="0"/><line nr="143" mi="12" ci="0" mb="0" cb="0"/><line nr="147" mi="12" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="8" ci="0" mb="0" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedLambdaConstraintType.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedPrimitiveType.java"><line nr="31" mi="36" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="11" ci="0" mb="0" cb="0"/><line nr="36" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="24" ci="0" mb="0" cb="0"/><line nr="38" mi="28" ci="0" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="32" ci="0" mb="0" cb="0"/><line nr="41" mi="36" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="16" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="12" ci="0" mb="4" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="11" ci="0" mb="2" cb="0"/><line nr="112" mi="7" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="4" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="349" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedUnionType.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="2" cb="0"/><line nr="37" mi="13" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="2" cb="0"/><line nr="57" mi="9" ci="0" mb="4" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedArrayType.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="2" cb="0"/><line nr="48" mi="9" ci="0" mb="4" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="11" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="9" ci="0" mb="4" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedReferenceType.java"><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="9" ci="0" mb="4" cb="0"/><line nr="71" mi="11" ci="0" mb="0" cb="0"/><line nr="73" mi="10" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="2" cb="0"/><line nr="77" mi="12" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="9" ci="0" mb="4" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="17" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="2" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="10" ci="0" mb="4" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="2" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="12" ci="0" mb="2" cb="0"/><line nr="256" mi="5" ci="0" mb="2" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="22" ci="0" mb="2" cb="0"/><line nr="276" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="2" cb="0"/><line nr="278" mi="10" ci="0" mb="2" cb="0"/><line nr="279" mi="17" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="5" ci="0" mb="2" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="2" cb="0"/><line nr="347" mi="4" ci="0" mb="2" cb="0"/><line nr="348" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="12" ci="0" mb="2" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="16" ci="0" mb="6" cb="0"/><line nr="353" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="3" ci="0" mb="2" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="5" ci="0" mb="2" cb="0"/><line nr="367" mi="6" ci="0" mb="0" cb="0"/><line nr="369" mi="11" ci="0" mb="2" cb="0"/><line nr="370" mi="6" ci="0" mb="2" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="373" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="8" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="389" mi="6" ci="0" mb="0" cb="0"/><line nr="390" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="6" ci="0" mb="0" cb="0"/><line nr="399" mi="9" ci="0" mb="2" cb="0"/><line nr="400" mi="5" ci="0" mb="0" cb="0"/><line nr="402" mi="5" ci="0" mb="0" cb="0"/><line nr="403" mi="6" ci="0" mb="0" cb="0"/><line nr="405" mi="2" ci="0" mb="0" cb="0"/><line nr="409" mi="6" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="411" mi="9" ci="0" mb="2" cb="0"/><line nr="412" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="6" ci="0" mb="2" cb="0"/><line nr="416" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="6" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="430" mi="9" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="8" ci="0" mb="9" cb="0"/><line nr="440" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="6" ci="0" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="0" cb="0"/><line nr="446" mi="6" ci="0" mb="0" cb="0"/><line nr="448" mi="6" ci="0" mb="0" cb="0"/><line nr="450" mi="6" ci="0" mb="0" cb="0"/><line nr="452" mi="6" ci="0" mb="0" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="461" mi="4" ci="0" mb="2" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="6" ci="0" mb="2" cb="0"/><line nr="465" mi="6" ci="0" mb="4" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="7" ci="0" mb="2" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="9" ci="0" mb="2" cb="0"/><line nr="472" mi="6" ci="0" mb="0" cb="0"/><line nr="473" mi="6" ci="0" mb="0" cb="0"/><line nr="474" mi="4" ci="0" mb="2" cb="0"/><line nr="475" mi="3" ci="0" mb="2" cb="0"/><line nr="476" mi="3" ci="0" mb="0" cb="0"/><line nr="477" mi="9" ci="0" mb="4" cb="0"/><line nr="479" mi="9" ci="0" mb="4" cb="0"/><line nr="481" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="1" ci="0" mb="0" cb="0"/><line nr="487" mi="6" ci="0" mb="4" cb="0"/><line nr="488" mi="11" ci="0" mb="0" cb="0"/><line nr="489" mi="11" ci="0" mb="0" cb="0"/><line nr="490" mi="13" ci="0" mb="4" cb="0"/><line nr="492" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="2" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="2" ci="0" mb="2" cb="0"/><line nr="507" mi="5" ci="0" mb="0" cb="0"/><line nr="509" mi="3" ci="0" mb="0" cb="0"/><line nr="510" mi="2" ci="0" mb="2" cb="0"/><line nr="511" mi="5" ci="0" mb="0" cb="0"/><line nr="513" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="881" covered="0"/><counter type="BRANCH" missed="119" covered="0"/><counter type="LINE" missed="169" covered="0"/><counter type="COMPLEXITY" missed="102" covered="0"/><counter type="METHOD" missed="39" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedIntersectionType.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="2" cb="0"/><line nr="39" mi="13" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="2" cb="0"/><line nr="47" mi="9" ci="0" mb="4" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="66" mi="11" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvedVoidType.java"><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2232" covered="0"/><counter type="BRANCH" missed="267" covered="0"/><counter type="LINE" missed="398" covered="0"/><counter type="COMPLEXITY" missed="286" covered="0"/><counter type="METHOD" missed="149" covered="0"/><counter type="CLASS" missed="11" covered="0"/></package><package name="com/github/javaparser/ast/nodeTypes"><class name="com/github/javaparser/ast/nodeTypes/NodeWithOptionalScope" sourcefilename="NodeWithOptionalScope.java"><method name="traverseScope" desc="()Ljava/util/Optional;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithStatements" sourcefilename="NodeWithStatements.java"><method name="getStatement" desc="(I)Lcom/github/javaparser/ast/stmt/Statement;" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStatement" desc="(ILcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/Node;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addStatement" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/Node;" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(ILcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/Node;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addStatement" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStatement" desc="(ILcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAndGetStatement" desc="(Lcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/Statement;" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetStatement" desc="(ILcom/github/javaparser/ast/stmt/Statement;)Lcom/github/javaparser/ast/stmt/Statement;" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAndGetStatement" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetStatement" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/stmt/ExpressionStmt;" line="96"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyStatements" desc="(Lcom/github/javaparser/ast/NodeList;)Lcom/github/javaparser/ast/Node;" line="105"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyStatements" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithStatements;)Lcom/github/javaparser/ast/Node;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="50"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithImplements" sourcefilename="NodeWithImplements.java"><method name="getImplementedTypes" desc="(I)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImplementedType" desc="(ILcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/Node;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addImplementedType" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/Node;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addImplements" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addImplements" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addImplementedType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addImplementedType" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="85"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="23"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithRange" sourcefilename="NodeWithRange.java"><method name="getBegin" desc="()Ljava/util/Optional;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()Ljava/util/Optional;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsWithin" desc="(Lcom/github/javaparser/ast/Node;)Z" line="33"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPositionedAfter" desc="(Lcom/github/javaparser/Position;)Z" line="44"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPositionedBefore" desc="(Lcom/github/javaparser/Position;)Z" line="52"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isPositionedBefore$3" desc="(Lcom/github/javaparser/Position;Lcom/github/javaparser/Range;)Ljava/lang/Boolean;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$isPositionedAfter$2" desc="(Lcom/github/javaparser/Position;Lcom/github/javaparser/Range;)Ljava/lang/Boolean;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getEnd$1" desc="(Lcom/github/javaparser/Range;)Lcom/github/javaparser/Position;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBegin$0" desc="(Lcom/github/javaparser/Range;)Lcom/github/javaparser/Position;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithOptionalBlockStmt" sourcefilename="NodeWithOptionalBlockStmt.java"><method name="createBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithTypeParameters" sourcefilename="NodeWithTypeParameters.java"><method name="getTypeParameter" desc="(I)Lcom/github/javaparser/ast/type/TypeParameter;" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTypeParameter" desc="(ILcom/github/javaparser/ast/type/TypeParameter;)Lcom/github/javaparser/ast/Node;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTypeParameter" desc="(Lcom/github/javaparser/ast/type/TypeParameter;)Lcom/github/javaparser/ast/Node;" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTypeParameter" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGeneric" desc="()Z" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithParameters" sourcefilename="NodeWithParameters.java"><method name="getParameter" desc="(I)Lcom/github/javaparser/ast/body/Parameter;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParameter" desc="(ILcom/github/javaparser/ast/body/Parameter;)Lcom/github/javaparser/ast/Node;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addParameter" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParameter" desc="(Lcom/github/javaparser/ast/body/Parameter;)Lcom/github/javaparser/ast/Node;" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetParameter" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)Lcom/github/javaparser/ast/body/Parameter;" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetParameter" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/body/Parameter;" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetParameter" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/body/Parameter;" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetParameter" desc="(Lcom/github/javaparser/ast/body/Parameter;)Lcom/github/javaparser/ast/body/Parameter;" line="98"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterByType" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterByType" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParametersOfType" desc="([Ljava/lang/String;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParametersOfType" desc="([Ljava/lang/Class;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasParametersOfType$4" desc="(Lcom/github/javaparser/ast/body/Parameter;)Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasParametersOfType$3" desc="(Lcom/github/javaparser/ast/body/Parameter;)Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getParameterByType$2" desc="(Ljava/lang/Class;Lcom/github/javaparser/ast/body/Parameter;)Z" line="132"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getParameterByType$1" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/Parameter;)Z" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getParameterByName$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/Parameter;)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="149"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithConstructors" sourcefilename="NodeWithConstructors.java"><method name="getDefaultConstructor" desc="()Ljava/util/Optional;" line="21"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstructor" desc="([Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="31"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructors" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstructorByParameterTypes" desc="([Ljava/lang/String;)Ljava/util/Optional;" line="55"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstructorByParameterTypes" desc="([Ljava/lang/Class;)Ljava/util/Optional;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConstructorByParameterTypes$6" desc="([Ljava/lang/Class;Lcom/github/javaparser/ast/body/ConstructorDeclaration;)Z" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConstructorByParameterTypes$5" desc="([Ljava/lang/String;Lcom/github/javaparser/ast/body/ConstructorDeclaration;)Z" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getConstructors$4" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getConstructors$3" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDefaultConstructor$2" desc="(Lcom/github/javaparser/ast/body/ConstructorDeclaration;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDefaultConstructor$1" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/ConstructorDeclaration;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDefaultConstructor$0" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="60"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithExpression" sourcefilename="NodeWithExpression.java"><method name="setExpression" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithOptionalLabel" sourcefilename="NodeWithOptionalLabel.java"><method name="setLabel" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="21"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLabelAsString" desc="()Ljava/util/Optional;" line="26"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getLabelAsString$0" desc="(Lcom/github/javaparser/ast/expr/SimpleName;)Ljava/util/Optional;" line="26"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithVariables$1Helper" sourcefilename="NodeWithVariables.java"><method name="&lt;init&gt;" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArrayLevel" desc="(Lcom/github/javaparser/ast/type/Type;I)Ljava/util/Optional;" line="125"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithSimpleName" sourcefilename="NodeWithSimpleName.java"><method name="setName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameAsString" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameAsExpression" desc="()Lcom/github/javaparser/ast/expr/NameExpr;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithScope" sourcefilename="NodeWithScope.java"><method name="traverseScope" desc="()Ljava/util/Optional;" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithMembers" sourcefilename="NodeWithMembers.java"><method name="getMember" desc="(I)Lcom/github/javaparser/ast/body/BodyDeclaration;" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMember" desc="(ILcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/Node;" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMember" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/Node;" line="69"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addField" desc="(Ljava/lang/Class;Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addField" desc="(Ljava/lang/String;Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="97"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addField" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="109"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFieldWithInitializer" desc="(Ljava/lang/Class;Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="127"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFieldWithInitializer" desc="(Ljava/lang/String;Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFieldWithInitializer" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="154"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPrivateField" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="167"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPrivateField" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="179"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPrivateField" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="190"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPublicField" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="201"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPublicField" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="213"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPublicField" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="224"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProtectedField" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="235"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addProtectedField" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="247"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addProtectedField" desc="(Lcom/github/javaparser/ast/type/Type;Ljava/lang/String;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="258"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethod" desc="(Ljava/lang/String;[Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="269"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInitializer" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="281"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStaticInitializer" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="291"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="304"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethods" desc="()Ljava/util/List;" line="315"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodsByParameterTypes" desc="([Ljava/lang/String;)Ljava/util/List;" line="329"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodsBySignature" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;" line="342"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethodsByParameterTypes" desc="([Ljava/lang/Class;)Ljava/util/List;" line="355"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="367"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFields" desc="()Ljava/util/List;" line="381"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFields$11" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="383"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFields$10" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="382"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldByName$9" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/FieldDeclaration;)Z" line="370"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldByName$8" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/VariableDeclarator;)Z" line="371"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldByName$7" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/FieldDeclaration;" line="369"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getFieldByName$6" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="368"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMethodsByParameterTypes$5" desc="([Ljava/lang/Class;Lcom/github/javaparser/ast/body/MethodDeclaration;)Z" line="356"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMethodsBySignature$4" desc="([Ljava/lang/String;Lcom/github/javaparser/ast/body/MethodDeclaration;)Z" line="343"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getMethodsByParameterTypes$3" desc="([Ljava/lang/String;Lcom/github/javaparser/ast/body/MethodDeclaration;)Z" line="330"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMethods$2" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Lcom/github/javaparser/ast/body/MethodDeclaration;" line="317"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMethods$1" desc="(Lcom/github/javaparser/ast/body/BodyDeclaration;)Z" line="316"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMethodsByName$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/body/MethodDeclaration;)Z" line="305"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="310"/><counter type="LINE" missed="10" covered="59"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="8" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithTypeArguments" sourcefilename="NodeWithTypeArguments.java"><method name="isUsingDiamondOperator" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDiamondOperator" desc="()Lcom/github/javaparser/ast/Node;" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeTypeArguments" desc="()Lcom/github/javaparser/ast/Node;" line="78"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTypeArguments" desc="([Lcom/github/javaparser/ast/type/Type;)Lcom/github/javaparser/ast/Node;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithAnnotations" sourcefilename="NodeWithAnnotations.java"><method name="getAnnotation" desc="(I)Lcom/github/javaparser/ast/expr/AnnotationExpr;" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnnotation" desc="(ILcom/github/javaparser/ast/expr/AnnotationExpr;)Lcom/github/javaparser/ast/Node;" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAnnotation" desc="(Lcom/github/javaparser/ast/expr/AnnotationExpr;)Lcom/github/javaparser/ast/Node;" line="59"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="71"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAndGetAnnotation" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="85"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAnnotation" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAndGetAnnotation" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/expr/NormalAnnotationExpr;" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMarkerAnnotation" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="121"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMarkerAnnotation" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="134"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSingleMemberAnnotation" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="147"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSingleMemberAnnotation" desc="(Ljava/lang/Class;Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="160"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSingleMemberAnnotation" desc="(Ljava/lang/String;Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSingleMemberAnnotation" desc="(Ljava/lang/Class;Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="184"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotationPresent" desc="(Ljava/lang/String;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotationPresent" desc="(Ljava/lang/Class;)Z" line="205"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationByName" desc="(Ljava/lang/String;)Ljava/util/Optional;" line="214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotationByClass" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getAnnotationByName$1" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/expr/AnnotationExpr;)Z" line="214"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isAnnotationPresent$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/expr/AnnotationExpr;)Z" line="195"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="146"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithBlockStmt" sourcefilename="NodeWithBlockStmt.java"><method name="createBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithArguments" sourcefilename="NodeWithArguments.java"><method name="getArgument" desc="(I)Lcom/github/javaparser/ast/expr/Expression;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addArgument" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addArgument" desc="(Lcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArgument" desc="(ILcom/github/javaparser/ast/expr/Expression;)Lcom/github/javaparser/ast/Node;" line="55"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithModifiers" sourcefilename="NodeWithModifiers.java"><method name="addModifier" desc="([Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/Node;" line="54"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeModifier" desc="([Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/Node;" line="67"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifier" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;Z)Lcom/github/javaparser/ast/Node;" line="76"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasModifier" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiers" desc="([Lcom/github/javaparser/ast/Modifier$Keyword;)Lcom/github/javaparser/ast/Node;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccessSpecifier" desc="()Lcom/github/javaparser/ast/Modifier$Keyword;" line="104"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$removeModifier$1" desc="(Ljava/util/List;Lcom/github/javaparser/ast/Modifier;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addModifier$0" desc="(Lcom/github/javaparser/ast/Modifier$Keyword;Lcom/github/javaparser/ast/Modifier;)Z" line="56"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="130"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithBody" sourcefilename="NodeWithBody.java"><method name="createBlockStatementAsBody" desc="()Lcom/github/javaparser/ast/stmt/BlockStmt;" line="34"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithExtends" sourcefilename="NodeWithExtends.java"><method name="getExtendedTypes" desc="(I)Lcom/github/javaparser/ast/type/ClassOrInterfaceType;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExtendedType" desc="(ILcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/Node;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addExtendedType" desc="(Lcom/github/javaparser/ast/type/ClassOrInterfaceType;)Lcom/github/javaparser/ast/Node;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addExtends" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addExtends" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addExtendedType" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addExtendedType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="23"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithType" sourcefilename="NodeWithType.java"><method name="setType" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setType" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeAsString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithIdentifier" sourcefilename="NodeWithIdentifier.java"><method name="getId" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setId" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="38"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithThrownExceptions" sourcefilename="NodeWithThrownExceptions.java"><method name="getThrownException" desc="(I)Lcom/github/javaparser/ast/type/ReferenceType;" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addThrownException" desc="(Lcom/github/javaparser/ast/type/ReferenceType;)Lcom/github/javaparser/ast/Node;" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addThrownException" desc="(Ljava/lang/Class;)Lcom/github/javaparser/ast/Node;" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThrown" desc="(Ljava/lang/Class;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThrown" desc="(Ljava/lang/String;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isThrown$0" desc="(Ljava/lang/String;Lcom/github/javaparser/ast/type/ReferenceType;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithName" sourcefilename="NodeWithName.java"><method name="setName" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNameAsString" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithJavadoc" sourcefilename="NodeWithJavadoc.java"><method name="getJavadocComment" desc="()Ljava/util/Optional;" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavadoc" desc="()Ljava/util/Optional;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJavadocComment" desc="(Ljava/lang/String;)Lcom/github/javaparser/ast/Node;" line="67"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJavadocComment" desc="(Lcom/github/javaparser/ast/comments/JavadocComment;)Lcom/github/javaparser/ast/Node;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJavadocComment" desc="(Ljava/lang/String;Lcom/github/javaparser/javadoc/Javadoc;)Lcom/github/javaparser/ast/Node;" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJavadocComment" desc="(Lcom/github/javaparser/javadoc/Javadoc;)Lcom/github/javaparser/ast/Node;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeJavaDocComment" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasJavaDocComment" desc="()Z" line="88"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getJavadocComment$1" desc="(Lcom/github/javaparser/ast/comments/Comment;)Lcom/github/javaparser/ast/comments/JavadocComment;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getJavadocComment$0" desc="(Lcom/github/javaparser/ast/comments/Comment;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/javaparser/ast/nodeTypes/NodeWithVariables" sourcefilename="NodeWithVariables.java"><method name="getVariable" desc="(I)Lcom/github/javaparser/ast/body/VariableDeclarator;" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVariable" desc="(ILcom/github/javaparser/ast/body/VariableDeclarator;)Lcom/github/javaparser/ast/Node;" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVariable" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;)Lcom/github/javaparser/ast/Node;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommonType" desc="()Lcom/github/javaparser/ast/type/Type;" line="69"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElementType" desc="()Lcom/github/javaparser/ast/type/Type;" line="90"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaximumCommonType" desc="()Ljava/util/Optional;" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateMaximumCommonType" desc="(Ljava/util/List;)Ljava/util/Optional;" line="138"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$calculateMaximumCommonType$1" desc="(Lcom/github/javaparser/ast/nodeTypes/NodeWithVariables$1Helper;ILcom/github/javaparser/ast/type/Type;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getMaximumCommonType$0" desc="(Lcom/github/javaparser/ast/body/VariableDeclarator;)Lcom/github/javaparser/ast/type/Type;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="164"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NodeWithConstructors.java"><line nr="21" mi="0" ci="21" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="18" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="60"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithOptionalScope.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithParameters.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="149"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithArguments.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithTypeArguments.java"><line nr="62" mi="0" ci="14" mb="0" cb="4"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithVariables.java"><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="4"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="193"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="1" covered="22"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NodeWithJavadoc.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="1" cb="3"/><line nr="88" mi="0" ci="13" mb="0" cb="4"/><counter type="INSTRUCTION" missed="5" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithBody.java"><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithOptionalLabel.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithName.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithSimpleName.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithTypeParameters.java"><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithAnnotations.java"><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="13" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="14" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="146"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithScope.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithOptionalBlockStmt.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithExtends.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="23"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithImplements.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="23"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithThrownExceptions.java"><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithExpression.java"><line nr="38" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithRange.java"><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="2" cb="2"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="16" ci="0" mb="0" cb="0"/><line nr="52" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithStatements.java"><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="2" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="50"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithIdentifier.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeWithModifiers.java"><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="16" mb="0" cb="2"/><line nr="56" mi="2" ci="12" mb="1" cb="1"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="1" cb="1"/><line nr="105" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="130"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithBlockStmt.java"><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithType.java"><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NodeWithMembers.java"><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="11" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="201" mi="11" ci="0" mb="0" cb="0"/><line nr="213" mi="11" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="11" mb="0" cb="0"/><line nr="235" mi="11" ci="0" mb="0" cb="0"/><line nr="247" mi="11" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="8" ci="0" mb="0" cb="0"/><line nr="343" mi="5" ci="0" mb="0" cb="0"/><line nr="344" mi="3" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="6" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="310"/><counter type="LINE" missed="10" covered="59"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="8" covered="32"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="407" covered="1346"/><counter type="BRANCH" missed="10" covered="52"/><counter type="LINE" missed="74" covered="256"/><counter type="COMPLEXITY" missed="60" covered="166"/><counter type="METHOD" missed="52" covered="143"/><counter type="CLASS" missed="4" covered="23"/></package><counter type="INSTRUCTION" missed="56591" covered="92872"/><counter type="BRANCH" missed="7692" covered="6824"/><counter type="LINE" missed="11361" covered="17199"/><counter type="COMPLEXITY" missed="8193" covered="6599"/><counter type="METHOD" missed="3304" covered="3781"/><counter type="CLASS" missed="49" covered="454"/></report>